
test02.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000488c  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  08004a3c  08004a3c  00005a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004ac4  08004ac4  0000609c  2**0
                  CONTENTS
  4 .ARM          00000008  08004ac4  08004ac4  00005ac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004acc  08004acc  0000609c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004acc  08004acc  00005acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004ad0  08004ad0  00005ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000009c  20000000  08004ad4  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000609c  2**0
                  CONTENTS
 10 .bss          00000998  2000009c  2000009c  0000609c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000a34  20000a34  0000609c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000609c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000ffd7  00000000  00000000  000060cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000027c9  00000000  00000000  000160a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d30  00000000  00000000  00018870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000009fd  00000000  00000000  000195a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002612b  00000000  00000000  00019f9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001115d  00000000  00000000  000400c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000dc7bf  00000000  00000000  00051225  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0012d9e4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003d24  00000000  00000000  0012da28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000060  00000000  00000000  0013174c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000009c 	.word	0x2000009c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08004a24 	.word	0x08004a24

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000a0 	.word	0x200000a0
 80001ec:	08004a24 	.word	0x08004a24

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96a 	b.w	800057c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	460c      	mov	r4, r1
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d14e      	bne.n	800036a <__udivmoddi4+0xaa>
 80002cc:	4694      	mov	ip, r2
 80002ce:	458c      	cmp	ip, r1
 80002d0:	4686      	mov	lr, r0
 80002d2:	fab2 f282 	clz	r2, r2
 80002d6:	d962      	bls.n	800039e <__udivmoddi4+0xde>
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0320 	rsb	r3, r2, #32
 80002de:	4091      	lsls	r1, r2
 80002e0:	fa20 f303 	lsr.w	r3, r0, r3
 80002e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002e8:	4319      	orrs	r1, r3
 80002ea:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002f2:	fa1f f68c 	uxth.w	r6, ip
 80002f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb07 1114 	mls	r1, r7, r4, r1
 8000302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000306:	fb04 f106 	mul.w	r1, r4, r6
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f104 30ff 	add.w	r0, r4, #4294967295
 8000316:	f080 8112 	bcs.w	800053e <__udivmoddi4+0x27e>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 810f 	bls.w	800053e <__udivmoddi4+0x27e>
 8000320:	3c02      	subs	r4, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a59      	subs	r1, r3, r1
 8000326:	fa1f f38e 	uxth.w	r3, lr
 800032a:	fbb1 f0f7 	udiv	r0, r1, r7
 800032e:	fb07 1110 	mls	r1, r7, r0, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb00 f606 	mul.w	r6, r0, r6
 800033a:	429e      	cmp	r6, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x94>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f100 31ff 	add.w	r1, r0, #4294967295
 8000346:	f080 80fc 	bcs.w	8000542 <__udivmoddi4+0x282>
 800034a:	429e      	cmp	r6, r3
 800034c:	f240 80f9 	bls.w	8000542 <__udivmoddi4+0x282>
 8000350:	4463      	add	r3, ip
 8000352:	3802      	subs	r0, #2
 8000354:	1b9b      	subs	r3, r3, r6
 8000356:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800035a:	2100      	movs	r1, #0
 800035c:	b11d      	cbz	r5, 8000366 <__udivmoddi4+0xa6>
 800035e:	40d3      	lsrs	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	e9c5 3200 	strd	r3, r2, [r5]
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d905      	bls.n	800037a <__udivmoddi4+0xba>
 800036e:	b10d      	cbz	r5, 8000374 <__udivmoddi4+0xb4>
 8000370:	e9c5 0100 	strd	r0, r1, [r5]
 8000374:	2100      	movs	r1, #0
 8000376:	4608      	mov	r0, r1
 8000378:	e7f5      	b.n	8000366 <__udivmoddi4+0xa6>
 800037a:	fab3 f183 	clz	r1, r3
 800037e:	2900      	cmp	r1, #0
 8000380:	d146      	bne.n	8000410 <__udivmoddi4+0x150>
 8000382:	42a3      	cmp	r3, r4
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xcc>
 8000386:	4290      	cmp	r0, r2
 8000388:	f0c0 80f0 	bcc.w	800056c <__udivmoddi4+0x2ac>
 800038c:	1a86      	subs	r6, r0, r2
 800038e:	eb64 0303 	sbc.w	r3, r4, r3
 8000392:	2001      	movs	r0, #1
 8000394:	2d00      	cmp	r5, #0
 8000396:	d0e6      	beq.n	8000366 <__udivmoddi4+0xa6>
 8000398:	e9c5 6300 	strd	r6, r3, [r5]
 800039c:	e7e3      	b.n	8000366 <__udivmoddi4+0xa6>
 800039e:	2a00      	cmp	r2, #0
 80003a0:	f040 8090 	bne.w	80004c4 <__udivmoddi4+0x204>
 80003a4:	eba1 040c 	sub.w	r4, r1, ip
 80003a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ac:	fa1f f78c 	uxth.w	r7, ip
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003b6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ba:	fb08 4416 	mls	r4, r8, r6, r4
 80003be:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003c2:	fb07 f006 	mul.w	r0, r7, r6
 80003c6:	4298      	cmp	r0, r3
 80003c8:	d908      	bls.n	80003dc <__udivmoddi4+0x11c>
 80003ca:	eb1c 0303 	adds.w	r3, ip, r3
 80003ce:	f106 34ff 	add.w	r4, r6, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x11a>
 80003d4:	4298      	cmp	r0, r3
 80003d6:	f200 80cd 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003da:	4626      	mov	r6, r4
 80003dc:	1a1c      	subs	r4, r3, r0
 80003de:	fa1f f38e 	uxth.w	r3, lr
 80003e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003e6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ee:	fb00 f707 	mul.w	r7, r0, r7
 80003f2:	429f      	cmp	r7, r3
 80003f4:	d908      	bls.n	8000408 <__udivmoddi4+0x148>
 80003f6:	eb1c 0303 	adds.w	r3, ip, r3
 80003fa:	f100 34ff 	add.w	r4, r0, #4294967295
 80003fe:	d202      	bcs.n	8000406 <__udivmoddi4+0x146>
 8000400:	429f      	cmp	r7, r3
 8000402:	f200 80b0 	bhi.w	8000566 <__udivmoddi4+0x2a6>
 8000406:	4620      	mov	r0, r4
 8000408:	1bdb      	subs	r3, r3, r7
 800040a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800040e:	e7a5      	b.n	800035c <__udivmoddi4+0x9c>
 8000410:	f1c1 0620 	rsb	r6, r1, #32
 8000414:	408b      	lsls	r3, r1
 8000416:	fa22 f706 	lsr.w	r7, r2, r6
 800041a:	431f      	orrs	r7, r3
 800041c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000420:	fa04 f301 	lsl.w	r3, r4, r1
 8000424:	ea43 030c 	orr.w	r3, r3, ip
 8000428:	40f4      	lsrs	r4, r6
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	0c38      	lsrs	r0, r7, #16
 8000430:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000434:	fbb4 fef0 	udiv	lr, r4, r0
 8000438:	fa1f fc87 	uxth.w	ip, r7
 800043c:	fb00 441e 	mls	r4, r0, lr, r4
 8000440:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000444:	fb0e f90c 	mul.w	r9, lr, ip
 8000448:	45a1      	cmp	r9, r4
 800044a:	fa02 f201 	lsl.w	r2, r2, r1
 800044e:	d90a      	bls.n	8000466 <__udivmoddi4+0x1a6>
 8000450:	193c      	adds	r4, r7, r4
 8000452:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000456:	f080 8084 	bcs.w	8000562 <__udivmoddi4+0x2a2>
 800045a:	45a1      	cmp	r9, r4
 800045c:	f240 8081 	bls.w	8000562 <__udivmoddi4+0x2a2>
 8000460:	f1ae 0e02 	sub.w	lr, lr, #2
 8000464:	443c      	add	r4, r7
 8000466:	eba4 0409 	sub.w	r4, r4, r9
 800046a:	fa1f f983 	uxth.w	r9, r3
 800046e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000472:	fb00 4413 	mls	r4, r0, r3, r4
 8000476:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800047a:	fb03 fc0c 	mul.w	ip, r3, ip
 800047e:	45a4      	cmp	ip, r4
 8000480:	d907      	bls.n	8000492 <__udivmoddi4+0x1d2>
 8000482:	193c      	adds	r4, r7, r4
 8000484:	f103 30ff 	add.w	r0, r3, #4294967295
 8000488:	d267      	bcs.n	800055a <__udivmoddi4+0x29a>
 800048a:	45a4      	cmp	ip, r4
 800048c:	d965      	bls.n	800055a <__udivmoddi4+0x29a>
 800048e:	3b02      	subs	r3, #2
 8000490:	443c      	add	r4, r7
 8000492:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000496:	fba0 9302 	umull	r9, r3, r0, r2
 800049a:	eba4 040c 	sub.w	r4, r4, ip
 800049e:	429c      	cmp	r4, r3
 80004a0:	46ce      	mov	lr, r9
 80004a2:	469c      	mov	ip, r3
 80004a4:	d351      	bcc.n	800054a <__udivmoddi4+0x28a>
 80004a6:	d04e      	beq.n	8000546 <__udivmoddi4+0x286>
 80004a8:	b155      	cbz	r5, 80004c0 <__udivmoddi4+0x200>
 80004aa:	ebb8 030e 	subs.w	r3, r8, lr
 80004ae:	eb64 040c 	sbc.w	r4, r4, ip
 80004b2:	fa04 f606 	lsl.w	r6, r4, r6
 80004b6:	40cb      	lsrs	r3, r1
 80004b8:	431e      	orrs	r6, r3
 80004ba:	40cc      	lsrs	r4, r1
 80004bc:	e9c5 6400 	strd	r6, r4, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	e750      	b.n	8000366 <__udivmoddi4+0xa6>
 80004c4:	f1c2 0320 	rsb	r3, r2, #32
 80004c8:	fa20 f103 	lsr.w	r1, r0, r3
 80004cc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004d0:	fa24 f303 	lsr.w	r3, r4, r3
 80004d4:	4094      	lsls	r4, r2
 80004d6:	430c      	orrs	r4, r1
 80004d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004dc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004e0:	fa1f f78c 	uxth.w	r7, ip
 80004e4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004e8:	fb08 3110 	mls	r1, r8, r0, r3
 80004ec:	0c23      	lsrs	r3, r4, #16
 80004ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004f2:	fb00 f107 	mul.w	r1, r0, r7
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d908      	bls.n	800050c <__udivmoddi4+0x24c>
 80004fa:	eb1c 0303 	adds.w	r3, ip, r3
 80004fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8000502:	d22c      	bcs.n	800055e <__udivmoddi4+0x29e>
 8000504:	4299      	cmp	r1, r3
 8000506:	d92a      	bls.n	800055e <__udivmoddi4+0x29e>
 8000508:	3802      	subs	r0, #2
 800050a:	4463      	add	r3, ip
 800050c:	1a5b      	subs	r3, r3, r1
 800050e:	b2a4      	uxth	r4, r4
 8000510:	fbb3 f1f8 	udiv	r1, r3, r8
 8000514:	fb08 3311 	mls	r3, r8, r1, r3
 8000518:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800051c:	fb01 f307 	mul.w	r3, r1, r7
 8000520:	42a3      	cmp	r3, r4
 8000522:	d908      	bls.n	8000536 <__udivmoddi4+0x276>
 8000524:	eb1c 0404 	adds.w	r4, ip, r4
 8000528:	f101 36ff 	add.w	r6, r1, #4294967295
 800052c:	d213      	bcs.n	8000556 <__udivmoddi4+0x296>
 800052e:	42a3      	cmp	r3, r4
 8000530:	d911      	bls.n	8000556 <__udivmoddi4+0x296>
 8000532:	3902      	subs	r1, #2
 8000534:	4464      	add	r4, ip
 8000536:	1ae4      	subs	r4, r4, r3
 8000538:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800053c:	e739      	b.n	80003b2 <__udivmoddi4+0xf2>
 800053e:	4604      	mov	r4, r0
 8000540:	e6f0      	b.n	8000324 <__udivmoddi4+0x64>
 8000542:	4608      	mov	r0, r1
 8000544:	e706      	b.n	8000354 <__udivmoddi4+0x94>
 8000546:	45c8      	cmp	r8, r9
 8000548:	d2ae      	bcs.n	80004a8 <__udivmoddi4+0x1e8>
 800054a:	ebb9 0e02 	subs.w	lr, r9, r2
 800054e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000552:	3801      	subs	r0, #1
 8000554:	e7a8      	b.n	80004a8 <__udivmoddi4+0x1e8>
 8000556:	4631      	mov	r1, r6
 8000558:	e7ed      	b.n	8000536 <__udivmoddi4+0x276>
 800055a:	4603      	mov	r3, r0
 800055c:	e799      	b.n	8000492 <__udivmoddi4+0x1d2>
 800055e:	4630      	mov	r0, r6
 8000560:	e7d4      	b.n	800050c <__udivmoddi4+0x24c>
 8000562:	46d6      	mov	lr, sl
 8000564:	e77f      	b.n	8000466 <__udivmoddi4+0x1a6>
 8000566:	4463      	add	r3, ip
 8000568:	3802      	subs	r0, #2
 800056a:	e74d      	b.n	8000408 <__udivmoddi4+0x148>
 800056c:	4606      	mov	r6, r0
 800056e:	4623      	mov	r3, r4
 8000570:	4608      	mov	r0, r1
 8000572:	e70f      	b.n	8000394 <__udivmoddi4+0xd4>
 8000574:	3e02      	subs	r6, #2
 8000576:	4463      	add	r3, ip
 8000578:	e730      	b.n	80003dc <__udivmoddi4+0x11c>
 800057a:	bf00      	nop

0800057c <__aeabi_idiv0>:
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop

08000580 <adc_regcbf>:
		{.cbf = adc_dummy},
		{.cbf = NULL	 }
};

void adc_regcbf(uint16_t idx, ADC_CBF cbf)
{
 8000580:	b480      	push	{r7}
 8000582:	b083      	sub	sp, #12
 8000584:	af00      	add	r7, sp, #0
 8000586:	4603      	mov	r3, r0
 8000588:	6039      	str	r1, [r7, #0]
 800058a:	80fb      	strh	r3, [r7, #6]
	gAdcObjs[idx].cbf = cbf;
 800058c:	88fb      	ldrh	r3, [r7, #6]
 800058e:	4a05      	ldr	r2, [pc, #20]	@ (80005a4 <adc_regcbf+0x24>)
 8000590:	00db      	lsls	r3, r3, #3
 8000592:	4413      	add	r3, r2
 8000594:	683a      	ldr	r2, [r7, #0]
 8000596:	605a      	str	r2, [r3, #4]
}
 8000598:	bf00      	nop
 800059a:	370c      	adds	r7, #12
 800059c:	46bd      	mov	sp, r7
 800059e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a2:	4770      	bx	lr
 80005a4:	20000000 	.word	0x20000000

080005a8 <adc_thread>:

void adc_thread(void *arg)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b084      	sub	sp, #16
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	6078      	str	r0, [r7, #4]
	(void)arg;

	static uint16_t value = 100;

	for (int i=0; gAdcObjs[i].cbf != NULL; i++) {
 80005b0:	2300      	movs	r3, #0
 80005b2:	60fb      	str	r3, [r7, #12]
 80005b4:	e019      	b.n	80005ea <adc_thread+0x42>
		value+=100;
 80005b6:	4b13      	ldr	r3, [pc, #76]	@ (8000604 <adc_thread+0x5c>)
 80005b8:	881b      	ldrh	r3, [r3, #0]
 80005ba:	3364      	adds	r3, #100	@ 0x64
 80005bc:	b29a      	uxth	r2, r3
 80005be:	4b11      	ldr	r3, [pc, #68]	@ (8000604 <adc_thread+0x5c>)
 80005c0:	801a      	strh	r2, [r3, #0]
		gAdcObjs[i].value = value;
 80005c2:	4b10      	ldr	r3, [pc, #64]	@ (8000604 <adc_thread+0x5c>)
 80005c4:	8819      	ldrh	r1, [r3, #0]
 80005c6:	4a10      	ldr	r2, [pc, #64]	@ (8000608 <adc_thread+0x60>)
 80005c8:	68fb      	ldr	r3, [r7, #12]
 80005ca:	f822 1033 	strh.w	r1, [r2, r3, lsl #3]
		gAdcObjs[i].cbf((void *)&gAdcObjs[i].value);
 80005ce:	4a0e      	ldr	r2, [pc, #56]	@ (8000608 <adc_thread+0x60>)
 80005d0:	68fb      	ldr	r3, [r7, #12]
 80005d2:	00db      	lsls	r3, r3, #3
 80005d4:	4413      	add	r3, r2
 80005d6:	685b      	ldr	r3, [r3, #4]
 80005d8:	68fa      	ldr	r2, [r7, #12]
 80005da:	00d2      	lsls	r2, r2, #3
 80005dc:	490a      	ldr	r1, [pc, #40]	@ (8000608 <adc_thread+0x60>)
 80005de:	440a      	add	r2, r1
 80005e0:	4610      	mov	r0, r2
 80005e2:	4798      	blx	r3
	for (int i=0; gAdcObjs[i].cbf != NULL; i++) {
 80005e4:	68fb      	ldr	r3, [r7, #12]
 80005e6:	3301      	adds	r3, #1
 80005e8:	60fb      	str	r3, [r7, #12]
 80005ea:	4a07      	ldr	r2, [pc, #28]	@ (8000608 <adc_thread+0x60>)
 80005ec:	68fb      	ldr	r3, [r7, #12]
 80005ee:	00db      	lsls	r3, r3, #3
 80005f0:	4413      	add	r3, r2
 80005f2:	685b      	ldr	r3, [r3, #4]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d1de      	bne.n	80005b6 <adc_thread+0xe>
	}
}
 80005f8:	bf00      	nop
 80005fa:	bf00      	nop
 80005fc:	3710      	adds	r7, #16
 80005fe:	46bd      	mov	sp, r7
 8000600:	bd80      	pop	{r7, pc}
 8000602:	bf00      	nop
 8000604:	20000010 	.word	0x20000010
 8000608:	20000000 	.word	0x20000000

0800060c <adc_dummy>:

// 빈 콜백 함수
static void adc_dummy(void *)
{
 800060c:	b480      	push	{r7}
 800060e:	b083      	sub	sp, #12
 8000610:	af00      	add	r7, sp, #0
 8000612:	6078      	str	r0, [r7, #4]
    return;
 8000614:	bf00      	nop
}
 8000616:	370c      	adds	r7, #12
 8000618:	46bd      	mov	sp, r7
 800061a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061e:	4770      	bx	lr

08000620 <adc_init>:
void adc_init(void)
{
 8000620:	b480      	push	{r7}
 8000622:	af00      	add	r7, sp, #0
}
 8000624:	bf00      	nop
 8000626:	46bd      	mov	sp, r7
 8000628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800062c:	4770      	bx	lr
	...

08000630 <app>:
#include "uart.h"

void app_init(void);


void app(void) {
 8000630:	b580      	push	{r7, lr}
 8000632:	af00      	add	r7, sp, #0
    // Boot message
    printf("booting\r\n");
 8000634:	4807      	ldr	r0, [pc, #28]	@ (8000654 <app+0x24>)
 8000636:	f003 fb91 	bl	8003d5c <puts>

	app_init();
 800063a:	f000 f80d 	bl	8000658 <app_init>

    // Enter the main loop
    while (1) {
		button_thread(NULL);
 800063e:	2000      	movs	r0, #0
 8000640:	f000 f828 	bl	8000694 <button_thread>
		polling_thread(NULL);
 8000644:	2000      	movs	r0, #0
 8000646:	f000 fb35 	bl	8000cb4 <polling_thread>
		uart_thread(NULL);
 800064a:	2000      	movs	r0, #0
 800064c:	f000 fe52 	bl	80012f4 <uart_thread>
		button_thread(NULL);
 8000650:	bf00      	nop
 8000652:	e7f4      	b.n	800063e <app+0xe>
 8000654:	08004a3c 	.word	0x08004a3c

08000658 <app_init>:
		// Do nothing, the button and ADC events are handled by the interrupt handlers
    }
}

void app_init(void)
{
 8000658:	b580      	push	{r7, lr}
 800065a:	af00      	add	r7, sp, #0
	io_exti_init();
 800065c:	f000 f88c 	bl	8000778 <io_exti_init>
	polling_init();
 8000660:	f000 fb1c 	bl	8000c9c <polling_init>
	button_init();
 8000664:	f000 f804 	bl	8000670 <button_init>
	uart_init();
 8000668:	f000 fe36 	bl	80012d8 <uart_init>
}
 800066c:	bf00      	nop
 800066e:	bd80      	pop	{r7, pc}

08000670 <button_init>:
static uint32_t prev_tick;

static void button_callback_13(uint8_t rf, void *arg);

void button_init(void)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	af00      	add	r7, sp, #0
	prev_tick = HAL_GetTick();
 8000674:	f000 fed6 	bl	8001424 <HAL_GetTick>
 8000678:	4603      	mov	r3, r0
 800067a:	4a04      	ldr	r2, [pc, #16]	@ (800068c <button_init+0x1c>)
 800067c:	6013      	str	r3, [r2, #0]
	io_exti_regcbf(D_USER_BTN_EXTI_NO, button_callback_13);
 800067e:	4904      	ldr	r1, [pc, #16]	@ (8000690 <button_init+0x20>)
 8000680:	200d      	movs	r0, #13
 8000682:	f000 f8b7 	bl	80007f4 <io_exti_regcbf>
}
 8000686:	bf00      	nop
 8000688:	bd80      	pop	{r7, pc}
 800068a:	bf00      	nop
 800068c:	200000bc 	.word	0x200000bc
 8000690:	080006dd 	.word	0x080006dd

08000694 <button_thread>:

void button_thread(void *arg)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	6078      	str	r0, [r7, #4]
	if (flag == true) {
 800069c:	4b0b      	ldr	r3, [pc, #44]	@ (80006cc <button_thread+0x38>)
 800069e:	781b      	ldrb	r3, [r3, #0]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d00f      	beq.n	80006c4 <button_thread+0x30>
		flag = false;
 80006a4:	4b09      	ldr	r3, [pc, #36]	@ (80006cc <button_thread+0x38>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	701a      	strb	r2, [r3, #0]
		if (button_no == D_USER_BTN_EXTI_NO) {
 80006aa:	4b09      	ldr	r3, [pc, #36]	@ (80006d0 <button_thread+0x3c>)
 80006ac:	881b      	ldrh	r3, [r3, #0]
 80006ae:	2b0d      	cmp	r3, #13
 80006b0:	d108      	bne.n	80006c4 <button_thread+0x30>
			printf("rf:%d, no:%d\r\n", edge_rising_or_falling,  button_no);
 80006b2:	4b08      	ldr	r3, [pc, #32]	@ (80006d4 <button_thread+0x40>)
 80006b4:	781b      	ldrb	r3, [r3, #0]
 80006b6:	4619      	mov	r1, r3
 80006b8:	4b05      	ldr	r3, [pc, #20]	@ (80006d0 <button_thread+0x3c>)
 80006ba:	881b      	ldrh	r3, [r3, #0]
 80006bc:	461a      	mov	r2, r3
 80006be:	4806      	ldr	r0, [pc, #24]	@ (80006d8 <button_thread+0x44>)
 80006c0:	f003 fae4 	bl	8003c8c <iprintf>
		}
	}
}
 80006c4:	bf00      	nop
 80006c6:	3708      	adds	r7, #8
 80006c8:	46bd      	mov	sp, r7
 80006ca:	bd80      	pop	{r7, pc}
 80006cc:	200000b8 	.word	0x200000b8
 80006d0:	200000ba 	.word	0x200000ba
 80006d4:	200000b9 	.word	0x200000b9
 80006d8:	08004a48 	.word	0x08004a48

080006dc <button_callback_13>:

static void button_callback_13(uint8_t rf, void *arg)
{
 80006dc:	b580      	push	{r7, lr}
 80006de:	b084      	sub	sp, #16
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	4603      	mov	r3, r0
 80006e4:	6039      	str	r1, [r7, #0]
 80006e6:	71fb      	strb	r3, [r7, #7]
	volatile uint32_t curr_tick = HAL_GetTick();
 80006e8:	f000 fe9c 	bl	8001424 <HAL_GetTick>
 80006ec:	4603      	mov	r3, r0
 80006ee:	60fb      	str	r3, [r7, #12]

	if (curr_tick - prev_tick > 120) {
 80006f0:	68fa      	ldr	r2, [r7, #12]
 80006f2:	4b0b      	ldr	r3, [pc, #44]	@ (8000720 <button_callback_13+0x44>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	1ad3      	subs	r3, r2, r3
 80006f8:	2b78      	cmp	r3, #120	@ 0x78
 80006fa:	d90c      	bls.n	8000716 <button_callback_13+0x3a>
		prev_tick = curr_tick;
 80006fc:	68fb      	ldr	r3, [r7, #12]
 80006fe:	4a08      	ldr	r2, [pc, #32]	@ (8000720 <button_callback_13+0x44>)
 8000700:	6013      	str	r3, [r2, #0]
		edge_rising_or_falling = rf;
 8000702:	4a08      	ldr	r2, [pc, #32]	@ (8000724 <button_callback_13+0x48>)
 8000704:	79fb      	ldrb	r3, [r7, #7]
 8000706:	7013      	strb	r3, [r2, #0]
		button_no = *(uint16_t *)arg;
 8000708:	683b      	ldr	r3, [r7, #0]
 800070a:	881a      	ldrh	r2, [r3, #0]
 800070c:	4b06      	ldr	r3, [pc, #24]	@ (8000728 <button_callback_13+0x4c>)
 800070e:	801a      	strh	r2, [r3, #0]
		flag = true;
 8000710:	4b06      	ldr	r3, [pc, #24]	@ (800072c <button_callback_13+0x50>)
 8000712:	2201      	movs	r2, #1
 8000714:	701a      	strb	r2, [r3, #0]
	}
}
 8000716:	bf00      	nop
 8000718:	3710      	adds	r7, #16
 800071a:	46bd      	mov	sp, r7
 800071c:	bd80      	pop	{r7, pc}
 800071e:	bf00      	nop
 8000720:	200000bc 	.word	0x200000bc
 8000724:	200000b9 	.word	0x200000b9
 8000728:	200000ba 	.word	0x200000ba
 800072c:	200000b8 	.word	0x200000b8

08000730 <__io_putchar>:
#include "polling.h"

extern UART_HandleTypeDef huart3;

int __io_putchar(int ch)
{
 8000730:	b580      	push	{r7, lr}
 8000732:	b082      	sub	sp, #8
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, 0xffff); // 정의 찾아서 채워넣기
 8000738:	1d39      	adds	r1, r7, #4
 800073a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800073e:	2201      	movs	r2, #1
 8000740:	4803      	ldr	r0, [pc, #12]	@ (8000750 <__io_putchar+0x20>)
 8000742:	f002 fac7 	bl	8002cd4 <HAL_UART_Transmit>
	return ch;
 8000746:	687b      	ldr	r3, [r7, #4]
}
 8000748:	4618      	mov	r0, r3
 800074a:	3708      	adds	r7, #8
 800074c:	46bd      	mov	sp, r7
 800074e:	bd80      	pop	{r7, pc}
 8000750:	200003a8 	.word	0x200003a8

08000754 <HAL_IncTick>:

void HAL_IncTick(void)
{
 8000754:	b580      	push	{r7, lr}
 8000756:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000758:	4b05      	ldr	r3, [pc, #20]	@ (8000770 <HAL_IncTick+0x1c>)
 800075a:	781b      	ldrb	r3, [r3, #0]
 800075c:	461a      	mov	r2, r3
 800075e:	4b05      	ldr	r3, [pc, #20]	@ (8000774 <HAL_IncTick+0x20>)
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	4413      	add	r3, r2
 8000764:	4a03      	ldr	r2, [pc, #12]	@ (8000774 <HAL_IncTick+0x20>)
 8000766:	6013      	str	r3, [r2, #0]

  polling_update();
 8000768:	f000 faee 	bl	8000d48 <polling_update>
}
 800076c:	bf00      	nop
 800076e:	bd80      	pop	{r7, pc}
 8000770:	2000003c 	.word	0x2000003c
 8000774:	200008e4 	.word	0x200008e4

08000778 <io_exti_init>:
static IO_EXTI_T gIOExtiObjs[D_IO_EXTI_MAX];

static void io_exti_dummy(uint8_t rf, void *arg);

void io_exti_init(void)
{
 8000778:	b480      	push	{r7}
 800077a:	b083      	sub	sp, #12
 800077c:	af00      	add	r7, sp, #0
	for (int i=0; i<D_IO_EXTI_MAX; i++) {
 800077e:	2300      	movs	r3, #0
 8000780:	607b      	str	r3, [r7, #4]
 8000782:	e01f      	b.n	80007c4 <io_exti_init+0x4c>
		gIOExtiObjs[i].port = NULL;
 8000784:	4918      	ldr	r1, [pc, #96]	@ (80007e8 <io_exti_init+0x70>)
 8000786:	687a      	ldr	r2, [r7, #4]
 8000788:	4613      	mov	r3, r2
 800078a:	005b      	lsls	r3, r3, #1
 800078c:	4413      	add	r3, r2
 800078e:	009b      	lsls	r3, r3, #2
 8000790:	440b      	add	r3, r1
 8000792:	2200      	movs	r2, #0
 8000794:	601a      	str	r2, [r3, #0]
		gIOExtiObjs[i].pin = 0;
 8000796:	4914      	ldr	r1, [pc, #80]	@ (80007e8 <io_exti_init+0x70>)
 8000798:	687a      	ldr	r2, [r7, #4]
 800079a:	4613      	mov	r3, r2
 800079c:	005b      	lsls	r3, r3, #1
 800079e:	4413      	add	r3, r2
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	440b      	add	r3, r1
 80007a4:	3304      	adds	r3, #4
 80007a6:	2200      	movs	r2, #0
 80007a8:	801a      	strh	r2, [r3, #0]
		gIOExtiObjs[i].cbf = io_exti_dummy;
 80007aa:	490f      	ldr	r1, [pc, #60]	@ (80007e8 <io_exti_init+0x70>)
 80007ac:	687a      	ldr	r2, [r7, #4]
 80007ae:	4613      	mov	r3, r2
 80007b0:	005b      	lsls	r3, r3, #1
 80007b2:	4413      	add	r3, r2
 80007b4:	009b      	lsls	r3, r3, #2
 80007b6:	440b      	add	r3, r1
 80007b8:	3308      	adds	r3, #8
 80007ba:	4a0c      	ldr	r2, [pc, #48]	@ (80007ec <io_exti_init+0x74>)
 80007bc:	601a      	str	r2, [r3, #0]
	for (int i=0; i<D_IO_EXTI_MAX; i++) {
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	3301      	adds	r3, #1
 80007c2:	607b      	str	r3, [r7, #4]
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	2b0f      	cmp	r3, #15
 80007c8:	dddc      	ble.n	8000784 <io_exti_init+0xc>
	}

	gIOExtiObjs[13].port = USER_Btn_GPIO_Port;
 80007ca:	4b07      	ldr	r3, [pc, #28]	@ (80007e8 <io_exti_init+0x70>)
 80007cc:	4a08      	ldr	r2, [pc, #32]	@ (80007f0 <io_exti_init+0x78>)
 80007ce:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
	gIOExtiObjs[13].pin = USER_Btn_Pin;
 80007d2:	4b05      	ldr	r3, [pc, #20]	@ (80007e8 <io_exti_init+0x70>)
 80007d4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80007d8:	f8a3 20a0 	strh.w	r2, [r3, #160]	@ 0xa0
}
 80007dc:	bf00      	nop
 80007de:	370c      	adds	r7, #12
 80007e0:	46bd      	mov	sp, r7
 80007e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e6:	4770      	bx	lr
 80007e8:	200000c0 	.word	0x200000c0
 80007ec:	080008c9 	.word	0x080008c9
 80007f0:	40020800 	.word	0x40020800

080007f4 <io_exti_regcbf>:

bool io_exti_regcbf(uint8_t idx, IO_CBF_T cbf)
{
 80007f4:	b480      	push	{r7}
 80007f6:	b083      	sub	sp, #12
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	4603      	mov	r3, r0
 80007fc:	6039      	str	r1, [r7, #0]
 80007fe:	71fb      	strb	r3, [r7, #7]
	if (idx > D_IO_EXTI_MAX) return false;
 8000800:	79fb      	ldrb	r3, [r7, #7]
 8000802:	2b10      	cmp	r3, #16
 8000804:	d901      	bls.n	800080a <io_exti_regcbf+0x16>
 8000806:	2300      	movs	r3, #0
 8000808:	e00a      	b.n	8000820 <io_exti_regcbf+0x2c>
	gIOExtiObjs[idx].cbf = cbf;
 800080a:	79fa      	ldrb	r2, [r7, #7]
 800080c:	4907      	ldr	r1, [pc, #28]	@ (800082c <io_exti_regcbf+0x38>)
 800080e:	4613      	mov	r3, r2
 8000810:	005b      	lsls	r3, r3, #1
 8000812:	4413      	add	r3, r2
 8000814:	009b      	lsls	r3, r3, #2
 8000816:	440b      	add	r3, r1
 8000818:	3308      	adds	r3, #8
 800081a:	683a      	ldr	r2, [r7, #0]
 800081c:	601a      	str	r2, [r3, #0]
	return true;
 800081e:	2301      	movs	r3, #1
}
 8000820:	4618      	mov	r0, r3
 8000822:	370c      	adds	r7, #12
 8000824:	46bd      	mov	sp, r7
 8000826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082a:	4770      	bx	lr
 800082c:	200000c0 	.word	0x200000c0

08000830 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000830:	b580      	push	{r7, lr}
 8000832:	b084      	sub	sp, #16
 8000834:	af00      	add	r7, sp, #0
 8000836:	4603      	mov	r3, r0
 8000838:	80fb      	strh	r3, [r7, #6]
	for (volatile uint16_t i=0; i<D_IO_EXTI_MAX; i++) {
 800083a:	2300      	movs	r3, #0
 800083c:	81fb      	strh	r3, [r7, #14]
 800083e:	e038      	b.n	80008b2 <HAL_GPIO_EXTI_Callback+0x82>
		volatile GPIO_PinState sts = HAL_GPIO_ReadPin(gIOExtiObjs[i].port, gIOExtiObjs[i].pin);
 8000840:	89fb      	ldrh	r3, [r7, #14]
 8000842:	b29b      	uxth	r3, r3
 8000844:	4619      	mov	r1, r3
 8000846:	4a1f      	ldr	r2, [pc, #124]	@ (80008c4 <HAL_GPIO_EXTI_Callback+0x94>)
 8000848:	460b      	mov	r3, r1
 800084a:	005b      	lsls	r3, r3, #1
 800084c:	440b      	add	r3, r1
 800084e:	009b      	lsls	r3, r3, #2
 8000850:	4413      	add	r3, r2
 8000852:	681a      	ldr	r2, [r3, #0]
 8000854:	89fb      	ldrh	r3, [r7, #14]
 8000856:	b29b      	uxth	r3, r3
 8000858:	4618      	mov	r0, r3
 800085a:	491a      	ldr	r1, [pc, #104]	@ (80008c4 <HAL_GPIO_EXTI_Callback+0x94>)
 800085c:	4603      	mov	r3, r0
 800085e:	005b      	lsls	r3, r3, #1
 8000860:	4403      	add	r3, r0
 8000862:	009b      	lsls	r3, r3, #2
 8000864:	440b      	add	r3, r1
 8000866:	3304      	adds	r3, #4
 8000868:	881b      	ldrh	r3, [r3, #0]
 800086a:	4619      	mov	r1, r3
 800086c:	4610      	mov	r0, r2
 800086e:	f001 fbef 	bl	8002050 <HAL_GPIO_ReadPin>
 8000872:	4603      	mov	r3, r0
 8000874:	737b      	strb	r3, [r7, #13]
		if (GPIO_Pin & (0x01 << i)) 	gIOExtiObjs[i].cbf((uint8_t)sts, (void *)&i);
 8000876:	88fb      	ldrh	r3, [r7, #6]
 8000878:	89fa      	ldrh	r2, [r7, #14]
 800087a:	b292      	uxth	r2, r2
 800087c:	4113      	asrs	r3, r2
 800087e:	f003 0301 	and.w	r3, r3, #1
 8000882:	2b00      	cmp	r3, #0
 8000884:	d010      	beq.n	80008a8 <HAL_GPIO_EXTI_Callback+0x78>
 8000886:	89fb      	ldrh	r3, [r7, #14]
 8000888:	b29b      	uxth	r3, r3
 800088a:	4619      	mov	r1, r3
 800088c:	4a0d      	ldr	r2, [pc, #52]	@ (80008c4 <HAL_GPIO_EXTI_Callback+0x94>)
 800088e:	460b      	mov	r3, r1
 8000890:	005b      	lsls	r3, r3, #1
 8000892:	440b      	add	r3, r1
 8000894:	009b      	lsls	r3, r3, #2
 8000896:	4413      	add	r3, r2
 8000898:	3308      	adds	r3, #8
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	7b7a      	ldrb	r2, [r7, #13]
 800089e:	b2d2      	uxtb	r2, r2
 80008a0:	f107 010e 	add.w	r1, r7, #14
 80008a4:	4610      	mov	r0, r2
 80008a6:	4798      	blx	r3
	for (volatile uint16_t i=0; i<D_IO_EXTI_MAX; i++) {
 80008a8:	89fb      	ldrh	r3, [r7, #14]
 80008aa:	b29b      	uxth	r3, r3
 80008ac:	3301      	adds	r3, #1
 80008ae:	b29b      	uxth	r3, r3
 80008b0:	81fb      	strh	r3, [r7, #14]
 80008b2:	89fb      	ldrh	r3, [r7, #14]
 80008b4:	b29b      	uxth	r3, r3
 80008b6:	2b0f      	cmp	r3, #15
 80008b8:	d9c2      	bls.n	8000840 <HAL_GPIO_EXTI_Callback+0x10>
	}
}
 80008ba:	bf00      	nop
 80008bc:	bf00      	nop
 80008be:	3710      	adds	r7, #16
 80008c0:	46bd      	mov	sp, r7
 80008c2:	bd80      	pop	{r7, pc}
 80008c4:	200000c0 	.word	0x200000c0

080008c8 <io_exti_dummy>:

static void io_exti_dummy(uint8_t rf, void *arg)
{
 80008c8:	b480      	push	{r7}
 80008ca:	b083      	sub	sp, #12
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	4603      	mov	r3, r0
 80008d0:	6039      	str	r1, [r7, #0]
 80008d2:	71fb      	strb	r3, [r7, #7]
	(void)rf;
	(void)arg;
}
 80008d4:	bf00      	nop
 80008d6:	370c      	adds	r7, #12
 80008d8:	46bd      	mov	sp, r7
 80008da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008de:	4770      	bx	lr

080008e0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008e0:	b580      	push	{r7, lr}
 80008e2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008e4:	f000 fd4c 	bl	8001380 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008e8:	f000 f80c 	bl	8000904 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008ec:	f000 f91a 	bl	8000b24 <MX_GPIO_Init>
  MX_ETH_Init();
 80008f0:	f000 f872 	bl	80009d8 <MX_ETH_Init>
  MX_USART3_UART_Init();
 80008f4:	f000 f8be 	bl	8000a74 <MX_USART3_UART_Init>
  MX_USB_OTG_FS_PCD_Init();
 80008f8:	f000 f8e6 	bl	8000ac8 <MX_USB_OTG_FS_PCD_Init>
  /* USER CODE BEGIN 2 */
  app();
 80008fc:	f7ff fe98 	bl	8000630 <app>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000900:	bf00      	nop
 8000902:	e7fd      	b.n	8000900 <main+0x20>

08000904 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000904:	b580      	push	{r7, lr}
 8000906:	b094      	sub	sp, #80	@ 0x50
 8000908:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800090a:	f107 0320 	add.w	r3, r7, #32
 800090e:	2230      	movs	r2, #48	@ 0x30
 8000910:	2100      	movs	r1, #0
 8000912:	4618      	mov	r0, r3
 8000914:	f003 fb02 	bl	8003f1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000918:	f107 030c 	add.w	r3, r7, #12
 800091c:	2200      	movs	r2, #0
 800091e:	601a      	str	r2, [r3, #0]
 8000920:	605a      	str	r2, [r3, #4]
 8000922:	609a      	str	r2, [r3, #8]
 8000924:	60da      	str	r2, [r3, #12]
 8000926:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000928:	2300      	movs	r3, #0
 800092a:	60bb      	str	r3, [r7, #8]
 800092c:	4b28      	ldr	r3, [pc, #160]	@ (80009d0 <SystemClock_Config+0xcc>)
 800092e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000930:	4a27      	ldr	r2, [pc, #156]	@ (80009d0 <SystemClock_Config+0xcc>)
 8000932:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000936:	6413      	str	r3, [r2, #64]	@ 0x40
 8000938:	4b25      	ldr	r3, [pc, #148]	@ (80009d0 <SystemClock_Config+0xcc>)
 800093a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800093c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000940:	60bb      	str	r3, [r7, #8]
 8000942:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000944:	2300      	movs	r3, #0
 8000946:	607b      	str	r3, [r7, #4]
 8000948:	4b22      	ldr	r3, [pc, #136]	@ (80009d4 <SystemClock_Config+0xd0>)
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	4a21      	ldr	r2, [pc, #132]	@ (80009d4 <SystemClock_Config+0xd0>)
 800094e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000952:	6013      	str	r3, [r2, #0]
 8000954:	4b1f      	ldr	r3, [pc, #124]	@ (80009d4 <SystemClock_Config+0xd0>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800095c:	607b      	str	r3, [r7, #4]
 800095e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000960:	2301      	movs	r3, #1
 8000962:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8000964:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
 8000968:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800096a:	2302      	movs	r3, #2
 800096c:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800096e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000972:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000974:	2304      	movs	r3, #4
 8000976:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000978:	23a8      	movs	r3, #168	@ 0xa8
 800097a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800097c:	2302      	movs	r3, #2
 800097e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000980:	2307      	movs	r3, #7
 8000982:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000984:	f107 0320 	add.w	r3, r7, #32
 8000988:	4618      	mov	r0, r3
 800098a:	f001 fcbb 	bl	8002304 <HAL_RCC_OscConfig>
 800098e:	4603      	mov	r3, r0
 8000990:	2b00      	cmp	r3, #0
 8000992:	d001      	beq.n	8000998 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000994:	f000 f97c 	bl	8000c90 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000998:	230f      	movs	r3, #15
 800099a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800099c:	2302      	movs	r3, #2
 800099e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80009a0:	2300      	movs	r3, #0
 80009a2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80009a4:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80009a8:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80009aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80009ae:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80009b0:	f107 030c 	add.w	r3, r7, #12
 80009b4:	2105      	movs	r1, #5
 80009b6:	4618      	mov	r0, r3
 80009b8:	f001 ff1c 	bl	80027f4 <HAL_RCC_ClockConfig>
 80009bc:	4603      	mov	r3, r0
 80009be:	2b00      	cmp	r3, #0
 80009c0:	d001      	beq.n	80009c6 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 80009c2:	f000 f965 	bl	8000c90 <Error_Handler>
  }
}
 80009c6:	bf00      	nop
 80009c8:	3750      	adds	r7, #80	@ 0x50
 80009ca:	46bd      	mov	sp, r7
 80009cc:	bd80      	pop	{r7, pc}
 80009ce:	bf00      	nop
 80009d0:	40023800 	.word	0x40023800
 80009d4:	40007000 	.word	0x40007000

080009d8 <MX_ETH_Init>:
  * @brief ETH Initialization Function
  * @param None
  * @retval None
  */
static void MX_ETH_Init(void)
{
 80009d8:	b580      	push	{r7, lr}
 80009da:	af00      	add	r7, sp, #0
   static uint8_t MACAddr[6];

  /* USER CODE BEGIN ETH_Init 1 */

  /* USER CODE END ETH_Init 1 */
  heth.Instance = ETH;
 80009dc:	4b1f      	ldr	r3, [pc, #124]	@ (8000a5c <MX_ETH_Init+0x84>)
 80009de:	4a20      	ldr	r2, [pc, #128]	@ (8000a60 <MX_ETH_Init+0x88>)
 80009e0:	601a      	str	r2, [r3, #0]
  MACAddr[0] = 0x00;
 80009e2:	4b20      	ldr	r3, [pc, #128]	@ (8000a64 <MX_ETH_Init+0x8c>)
 80009e4:	2200      	movs	r2, #0
 80009e6:	701a      	strb	r2, [r3, #0]
  MACAddr[1] = 0x80;
 80009e8:	4b1e      	ldr	r3, [pc, #120]	@ (8000a64 <MX_ETH_Init+0x8c>)
 80009ea:	2280      	movs	r2, #128	@ 0x80
 80009ec:	705a      	strb	r2, [r3, #1]
  MACAddr[2] = 0xE1;
 80009ee:	4b1d      	ldr	r3, [pc, #116]	@ (8000a64 <MX_ETH_Init+0x8c>)
 80009f0:	22e1      	movs	r2, #225	@ 0xe1
 80009f2:	709a      	strb	r2, [r3, #2]
  MACAddr[3] = 0x00;
 80009f4:	4b1b      	ldr	r3, [pc, #108]	@ (8000a64 <MX_ETH_Init+0x8c>)
 80009f6:	2200      	movs	r2, #0
 80009f8:	70da      	strb	r2, [r3, #3]
  MACAddr[4] = 0x00;
 80009fa:	4b1a      	ldr	r3, [pc, #104]	@ (8000a64 <MX_ETH_Init+0x8c>)
 80009fc:	2200      	movs	r2, #0
 80009fe:	711a      	strb	r2, [r3, #4]
  MACAddr[5] = 0x00;
 8000a00:	4b18      	ldr	r3, [pc, #96]	@ (8000a64 <MX_ETH_Init+0x8c>)
 8000a02:	2200      	movs	r2, #0
 8000a04:	715a      	strb	r2, [r3, #5]
  heth.Init.MACAddr = &MACAddr[0];
 8000a06:	4b15      	ldr	r3, [pc, #84]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a08:	4a16      	ldr	r2, [pc, #88]	@ (8000a64 <MX_ETH_Init+0x8c>)
 8000a0a:	605a      	str	r2, [r3, #4]
  heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 8000a0c:	4b13      	ldr	r3, [pc, #76]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a0e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000a12:	609a      	str	r2, [r3, #8]
  heth.Init.TxDesc = DMATxDscrTab;
 8000a14:	4b11      	ldr	r3, [pc, #68]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a16:	4a14      	ldr	r2, [pc, #80]	@ (8000a68 <MX_ETH_Init+0x90>)
 8000a18:	60da      	str	r2, [r3, #12]
  heth.Init.RxDesc = DMARxDscrTab;
 8000a1a:	4b10      	ldr	r3, [pc, #64]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a1c:	4a13      	ldr	r2, [pc, #76]	@ (8000a6c <MX_ETH_Init+0x94>)
 8000a1e:	611a      	str	r2, [r3, #16]
  heth.Init.RxBuffLen = 1524;
 8000a20:	4b0e      	ldr	r3, [pc, #56]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a22:	f240 52f4 	movw	r2, #1524	@ 0x5f4
 8000a26:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN MACADDRESS */

  /* USER CODE END MACADDRESS */

  if (HAL_ETH_Init(&heth) != HAL_OK)
 8000a28:	480c      	ldr	r0, [pc, #48]	@ (8000a5c <MX_ETH_Init+0x84>)
 8000a2a:	f000 fe3d 	bl	80016a8 <HAL_ETH_Init>
 8000a2e:	4603      	mov	r3, r0
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d001      	beq.n	8000a38 <MX_ETH_Init+0x60>
  {
    Error_Handler();
 8000a34:	f000 f92c 	bl	8000c90 <Error_Handler>
  }

  memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 8000a38:	2238      	movs	r2, #56	@ 0x38
 8000a3a:	2100      	movs	r1, #0
 8000a3c:	480c      	ldr	r0, [pc, #48]	@ (8000a70 <MX_ETH_Init+0x98>)
 8000a3e:	f003 fa6d 	bl	8003f1c <memset>
  TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 8000a42:	4b0b      	ldr	r3, [pc, #44]	@ (8000a70 <MX_ETH_Init+0x98>)
 8000a44:	2221      	movs	r2, #33	@ 0x21
 8000a46:	601a      	str	r2, [r3, #0]
  TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 8000a48:	4b09      	ldr	r3, [pc, #36]	@ (8000a70 <MX_ETH_Init+0x98>)
 8000a4a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
 8000a4e:	615a      	str	r2, [r3, #20]
  TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 8000a50:	4b07      	ldr	r3, [pc, #28]	@ (8000a70 <MX_ETH_Init+0x98>)
 8000a52:	2200      	movs	r2, #0
 8000a54:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN ETH_Init 2 */

  /* USER CODE END ETH_Init 2 */

}
 8000a56:	bf00      	nop
 8000a58:	bd80      	pop	{r7, pc}
 8000a5a:	bf00      	nop
 8000a5c:	200002f8 	.word	0x200002f8
 8000a60:	40028000 	.word	0x40028000
 8000a64:	200008d4 	.word	0x200008d4
 8000a68:	20000258 	.word	0x20000258
 8000a6c:	200001b8 	.word	0x200001b8
 8000a70:	20000180 	.word	0x20000180

08000a74 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8000a78:	4b11      	ldr	r3, [pc, #68]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a7a:	4a12      	ldr	r2, [pc, #72]	@ (8000ac4 <MX_USART3_UART_Init+0x50>)
 8000a7c:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8000a7e:	4b10      	ldr	r3, [pc, #64]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a80:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000a84:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8000a86:	4b0e      	ldr	r3, [pc, #56]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000a8c:	4b0c      	ldr	r3, [pc, #48]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000a92:	4b0b      	ldr	r3, [pc, #44]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000a98:	4b09      	ldr	r3, [pc, #36]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000a9a:	220c      	movs	r2, #12
 8000a9c:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a9e:	4b08      	ldr	r3, [pc, #32]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000aa4:	4b06      	ldr	r3, [pc, #24]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000aaa:	4805      	ldr	r0, [pc, #20]	@ (8000ac0 <MX_USART3_UART_Init+0x4c>)
 8000aac:	f002 f8c2 	bl	8002c34 <HAL_UART_Init>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d001      	beq.n	8000aba <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000ab6:	f000 f8eb 	bl	8000c90 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000aba:	bf00      	nop
 8000abc:	bd80      	pop	{r7, pc}
 8000abe:	bf00      	nop
 8000ac0:	200003a8 	.word	0x200003a8
 8000ac4:	40004800 	.word	0x40004800

08000ac8 <MX_USB_OTG_FS_PCD_Init>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8000acc:	4b14      	ldr	r3, [pc, #80]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000ace:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 8000ad2:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8000ad4:	4b12      	ldr	r3, [pc, #72]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000ad6:	2204      	movs	r2, #4
 8000ad8:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8000ada:	4b11      	ldr	r3, [pc, #68]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000adc:	2202      	movs	r2, #2
 8000ade:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8000ae0:	4b0f      	ldr	r3, [pc, #60]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	719a      	strb	r2, [r3, #6]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8000ae6:	4b0e      	ldr	r3, [pc, #56]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000ae8:	2202      	movs	r2, #2
 8000aea:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 8000aec:	4b0c      	ldr	r3, [pc, #48]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000aee:	2201      	movs	r2, #1
 8000af0:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8000af2:	4b0b      	ldr	r3, [pc, #44]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000af4:	2200      	movs	r2, #0
 8000af6:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8000af8:	4b09      	ldr	r3, [pc, #36]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000afa:	2200      	movs	r2, #0
 8000afc:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 8000afe:	4b08      	ldr	r3, [pc, #32]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000b00:	2201      	movs	r2, #1
 8000b02:	739a      	strb	r2, [r3, #14]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8000b04:	4b06      	ldr	r3, [pc, #24]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8000b0a:	4805      	ldr	r0, [pc, #20]	@ (8000b20 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000b0c:	f001 faea 	bl	80020e4 <HAL_PCD_Init>
 8000b10:	4603      	mov	r3, r0
 8000b12:	2b00      	cmp	r3, #0
 8000b14:	d001      	beq.n	8000b1a <MX_USB_OTG_FS_PCD_Init+0x52>
  {
    Error_Handler();
 8000b16:	f000 f8bb 	bl	8000c90 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 8000b1a:	bf00      	nop
 8000b1c:	bd80      	pop	{r7, pc}
 8000b1e:	bf00      	nop
 8000b20:	200003f0 	.word	0x200003f0

08000b24 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000b24:	b580      	push	{r7, lr}
 8000b26:	b08c      	sub	sp, #48	@ 0x30
 8000b28:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b2a:	f107 031c 	add.w	r3, r7, #28
 8000b2e:	2200      	movs	r2, #0
 8000b30:	601a      	str	r2, [r3, #0]
 8000b32:	605a      	str	r2, [r3, #4]
 8000b34:	609a      	str	r2, [r3, #8]
 8000b36:	60da      	str	r2, [r3, #12]
 8000b38:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	61bb      	str	r3, [r7, #24]
 8000b3e:	4b50      	ldr	r3, [pc, #320]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b42:	4a4f      	ldr	r2, [pc, #316]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b44:	f043 0304 	orr.w	r3, r3, #4
 8000b48:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b4a:	4b4d      	ldr	r3, [pc, #308]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b4e:	f003 0304 	and.w	r3, r3, #4
 8000b52:	61bb      	str	r3, [r7, #24]
 8000b54:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b56:	2300      	movs	r3, #0
 8000b58:	617b      	str	r3, [r7, #20]
 8000b5a:	4b49      	ldr	r3, [pc, #292]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b5e:	4a48      	ldr	r2, [pc, #288]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b60:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000b64:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b66:	4b46      	ldr	r3, [pc, #280]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b6a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000b6e:	617b      	str	r3, [r7, #20]
 8000b70:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b72:	2300      	movs	r3, #0
 8000b74:	613b      	str	r3, [r7, #16]
 8000b76:	4b42      	ldr	r3, [pc, #264]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b7a:	4a41      	ldr	r2, [pc, #260]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b7c:	f043 0301 	orr.w	r3, r3, #1
 8000b80:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b82:	4b3f      	ldr	r3, [pc, #252]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b86:	f003 0301 	and.w	r3, r3, #1
 8000b8a:	613b      	str	r3, [r7, #16]
 8000b8c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b8e:	2300      	movs	r3, #0
 8000b90:	60fb      	str	r3, [r7, #12]
 8000b92:	4b3b      	ldr	r3, [pc, #236]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b96:	4a3a      	ldr	r2, [pc, #232]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000b98:	f043 0302 	orr.w	r3, r3, #2
 8000b9c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b9e:	4b38      	ldr	r3, [pc, #224]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000ba0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ba2:	f003 0302 	and.w	r3, r3, #2
 8000ba6:	60fb      	str	r3, [r7, #12]
 8000ba8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000baa:	2300      	movs	r3, #0
 8000bac:	60bb      	str	r3, [r7, #8]
 8000bae:	4b34      	ldr	r3, [pc, #208]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bb2:	4a33      	ldr	r2, [pc, #204]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bb4:	f043 0308 	orr.w	r3, r3, #8
 8000bb8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bba:	4b31      	ldr	r3, [pc, #196]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bbe:	f003 0308 	and.w	r3, r3, #8
 8000bc2:	60bb      	str	r3, [r7, #8]
 8000bc4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bc6:	2300      	movs	r3, #0
 8000bc8:	607b      	str	r3, [r7, #4]
 8000bca:	4b2d      	ldr	r3, [pc, #180]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bcc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bce:	4a2c      	ldr	r2, [pc, #176]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bd0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000bd4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bd6:	4b2a      	ldr	r3, [pc, #168]	@ (8000c80 <MX_GPIO_Init+0x15c>)
 8000bd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bda:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000bde:	607b      	str	r3, [r7, #4]
 8000be0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 8000be2:	2200      	movs	r2, #0
 8000be4:	f244 0181 	movw	r1, #16513	@ 0x4081
 8000be8:	4826      	ldr	r0, [pc, #152]	@ (8000c84 <MX_GPIO_Init+0x160>)
 8000bea:	f001 fa49 	bl	8002080 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 8000bee:	2200      	movs	r2, #0
 8000bf0:	2140      	movs	r1, #64	@ 0x40
 8000bf2:	4825      	ldr	r0, [pc, #148]	@ (8000c88 <MX_GPIO_Init+0x164>)
 8000bf4:	f001 fa44 	bl	8002080 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000bf8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000bfc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000bfe:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8000c02:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c04:	2300      	movs	r3, #0
 8000c06:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c08:	f107 031c 	add.w	r3, r7, #28
 8000c0c:	4619      	mov	r1, r3
 8000c0e:	481f      	ldr	r0, [pc, #124]	@ (8000c8c <MX_GPIO_Init+0x168>)
 8000c10:	f001 f872 	bl	8001cf8 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 8000c14:	f244 0381 	movw	r3, #16513	@ 0x4081
 8000c18:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1a:	2301      	movs	r3, #1
 8000c1c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c1e:	2300      	movs	r3, #0
 8000c20:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c22:	2300      	movs	r3, #0
 8000c24:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c26:	f107 031c 	add.w	r3, r7, #28
 8000c2a:	4619      	mov	r1, r3
 8000c2c:	4815      	ldr	r0, [pc, #84]	@ (8000c84 <MX_GPIO_Init+0x160>)
 8000c2e:	f001 f863 	bl	8001cf8 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 8000c32:	2340      	movs	r3, #64	@ 0x40
 8000c34:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c36:	2301      	movs	r3, #1
 8000c38:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c3e:	2300      	movs	r3, #0
 8000c40:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 8000c42:	f107 031c 	add.w	r3, r7, #28
 8000c46:	4619      	mov	r1, r3
 8000c48:	480f      	ldr	r0, [pc, #60]	@ (8000c88 <MX_GPIO_Init+0x164>)
 8000c4a:	f001 f855 	bl	8001cf8 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_OverCurrent_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 8000c4e:	2380      	movs	r3, #128	@ 0x80
 8000c50:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c52:	2300      	movs	r3, #0
 8000c54:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c56:	2300      	movs	r3, #0
 8000c58:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8000c5a:	f107 031c 	add.w	r3, r7, #28
 8000c5e:	4619      	mov	r1, r3
 8000c60:	4809      	ldr	r0, [pc, #36]	@ (8000c88 <MX_GPIO_Init+0x164>)
 8000c62:	f001 f849 	bl	8001cf8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 15, 0);
 8000c66:	2200      	movs	r2, #0
 8000c68:	210f      	movs	r1, #15
 8000c6a:	2028      	movs	r0, #40	@ 0x28
 8000c6c:	f000 fce5 	bl	800163a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000c70:	2028      	movs	r0, #40	@ 0x28
 8000c72:	f000 fcfe 	bl	8001672 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000c76:	bf00      	nop
 8000c78:	3730      	adds	r7, #48	@ 0x30
 8000c7a:	46bd      	mov	sp, r7
 8000c7c:	bd80      	pop	{r7, pc}
 8000c7e:	bf00      	nop
 8000c80:	40023800 	.word	0x40023800
 8000c84:	40020400 	.word	0x40020400
 8000c88:	40021800 	.word	0x40021800
 8000c8c:	40020800 	.word	0x40020800

08000c90 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c90:	b480      	push	{r7}
 8000c92:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c94:	b672      	cpsid	i
}
 8000c96:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c98:	bf00      	nop
 8000c9a:	e7fd      	b.n	8000c98 <Error_Handler+0x8>

08000c9c <polling_init>:
	{ .period = 500, 	.cbf = adc_thread		},
	{ .cbf = NULL			}
};

void polling_init(void)
{
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	af00      	add	r7, sp, #0
	adc_init();
 8000ca0:	f7ff fcbe 	bl	8000620 <adc_init>
	adc_regcbf(0, adc_callback);
 8000ca4:	4902      	ldr	r1, [pc, #8]	@ (8000cb0 <polling_init+0x14>)
 8000ca6:	2000      	movs	r0, #0
 8000ca8:	f7ff fc6a 	bl	8000580 <adc_regcbf>
}
 8000cac:	bf00      	nop
 8000cae:	bd80      	pop	{r7, pc}
 8000cb0:	08000d29 	.word	0x08000d29

08000cb4 <polling_thread>:

void polling_thread(void *arg)
{
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	b082      	sub	sp, #8
 8000cb8:	af00      	add	r7, sp, #0
 8000cba:	6078      	str	r0, [r7, #4]
	static uint16_t thr_idx = 0;

	if (gThrObjs[thr_idx].flag == true) {
 8000cbc:	4b18      	ldr	r3, [pc, #96]	@ (8000d20 <polling_thread+0x6c>)
 8000cbe:	881b      	ldrh	r3, [r3, #0]
 8000cc0:	4a18      	ldr	r2, [pc, #96]	@ (8000d24 <polling_thread+0x70>)
 8000cc2:	011b      	lsls	r3, r3, #4
 8000cc4:	4413      	add	r3, r2
 8000cc6:	3308      	adds	r3, #8
 8000cc8:	781b      	ldrb	r3, [r3, #0]
 8000cca:	b2db      	uxtb	r3, r3
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d010      	beq.n	8000cf2 <polling_thread+0x3e>
		gThrObjs[thr_idx].flag = false;
 8000cd0:	4b13      	ldr	r3, [pc, #76]	@ (8000d20 <polling_thread+0x6c>)
 8000cd2:	881b      	ldrh	r3, [r3, #0]
 8000cd4:	4a13      	ldr	r2, [pc, #76]	@ (8000d24 <polling_thread+0x70>)
 8000cd6:	011b      	lsls	r3, r3, #4
 8000cd8:	4413      	add	r3, r2
 8000cda:	3308      	adds	r3, #8
 8000cdc:	2200      	movs	r2, #0
 8000cde:	701a      	strb	r2, [r3, #0]
		gThrObjs[thr_idx].cbf(NULL);
 8000ce0:	4b0f      	ldr	r3, [pc, #60]	@ (8000d20 <polling_thread+0x6c>)
 8000ce2:	881b      	ldrh	r3, [r3, #0]
 8000ce4:	4a0f      	ldr	r2, [pc, #60]	@ (8000d24 <polling_thread+0x70>)
 8000ce6:	011b      	lsls	r3, r3, #4
 8000ce8:	4413      	add	r3, r2
 8000cea:	330c      	adds	r3, #12
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	2000      	movs	r0, #0
 8000cf0:	4798      	blx	r3
	}
	thr_idx++;
 8000cf2:	4b0b      	ldr	r3, [pc, #44]	@ (8000d20 <polling_thread+0x6c>)
 8000cf4:	881b      	ldrh	r3, [r3, #0]
 8000cf6:	3301      	adds	r3, #1
 8000cf8:	b29a      	uxth	r2, r3
 8000cfa:	4b09      	ldr	r3, [pc, #36]	@ (8000d20 <polling_thread+0x6c>)
 8000cfc:	801a      	strh	r2, [r3, #0]
	if (gThrObjs[thr_idx].cbf == NULL) thr_idx = 0;
 8000cfe:	4b08      	ldr	r3, [pc, #32]	@ (8000d20 <polling_thread+0x6c>)
 8000d00:	881b      	ldrh	r3, [r3, #0]
 8000d02:	4a08      	ldr	r2, [pc, #32]	@ (8000d24 <polling_thread+0x70>)
 8000d04:	011b      	lsls	r3, r3, #4
 8000d06:	4413      	add	r3, r2
 8000d08:	330c      	adds	r3, #12
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d102      	bne.n	8000d16 <polling_thread+0x62>
 8000d10:	4b03      	ldr	r3, [pc, #12]	@ (8000d20 <polling_thread+0x6c>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	801a      	strh	r2, [r3, #0]
}
 8000d16:	bf00      	nop
 8000d18:	3708      	adds	r7, #8
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	bd80      	pop	{r7, pc}
 8000d1e:	bf00      	nop
 8000d20:	200008da 	.word	0x200008da
 8000d24:	20000014 	.word	0x20000014

08000d28 <adc_callback>:

static void adc_callback(void *arg)
{
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	b082      	sub	sp, #8
 8000d2c:	af00      	add	r7, sp, #0
 8000d2e:	6078      	str	r0, [r7, #4]
	printf("adc value = %d\r\n", *(uint16_t *)arg);
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	881b      	ldrh	r3, [r3, #0]
 8000d34:	4619      	mov	r1, r3
 8000d36:	4803      	ldr	r0, [pc, #12]	@ (8000d44 <adc_callback+0x1c>)
 8000d38:	f002 ffa8 	bl	8003c8c <iprintf>
}
 8000d3c:	bf00      	nop
 8000d3e:	3708      	adds	r7, #8
 8000d40:	46bd      	mov	sp, r7
 8000d42:	bd80      	pop	{r7, pc}
 8000d44:	08004a58 	.word	0x08004a58

08000d48 <polling_update>:

// io.c 파일 HAL_IncTick() 함수에서 호출
// HAL_IncTick() 함수는 systick irq handler에서 호출됨(인터럽트 서비스 루틴임)
// 1ms 마다 호출됨
void polling_update(void)
{
 8000d48:	b480      	push	{r7}
 8000d4a:	b083      	sub	sp, #12
 8000d4c:	af00      	add	r7, sp, #0
	for (int i=0; gThrObjs[i].cbf != NULL; i++) {
 8000d4e:	2300      	movs	r3, #0
 8000d50:	607b      	str	r3, [r7, #4]
 8000d52:	e034      	b.n	8000dbe <polling_update+0x76>
		gThrObjs[i].count++;
 8000d54:	4a21      	ldr	r2, [pc, #132]	@ (8000ddc <polling_update+0x94>)
 8000d56:	687b      	ldr	r3, [r7, #4]
 8000d58:	011b      	lsls	r3, r3, #4
 8000d5a:	4413      	add	r3, r2
 8000d5c:	3304      	adds	r3, #4
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	1c5a      	adds	r2, r3, #1
 8000d62:	491e      	ldr	r1, [pc, #120]	@ (8000ddc <polling_update+0x94>)
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	011b      	lsls	r3, r3, #4
 8000d68:	440b      	add	r3, r1
 8000d6a:	3304      	adds	r3, #4
 8000d6c:	601a      	str	r2, [r3, #0]
		gThrObjs[i].count %= gThrObjs[i].period;
 8000d6e:	4a1b      	ldr	r2, [pc, #108]	@ (8000ddc <polling_update+0x94>)
 8000d70:	687b      	ldr	r3, [r7, #4]
 8000d72:	011b      	lsls	r3, r3, #4
 8000d74:	4413      	add	r3, r2
 8000d76:	681a      	ldr	r2, [r3, #0]
 8000d78:	4918      	ldr	r1, [pc, #96]	@ (8000ddc <polling_update+0x94>)
 8000d7a:	687b      	ldr	r3, [r7, #4]
 8000d7c:	011b      	lsls	r3, r3, #4
 8000d7e:	440b      	add	r3, r1
 8000d80:	3304      	adds	r3, #4
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	fbb3 f1f2 	udiv	r1, r3, r2
 8000d88:	fb01 f202 	mul.w	r2, r1, r2
 8000d8c:	1a9a      	subs	r2, r3, r2
 8000d8e:	4913      	ldr	r1, [pc, #76]	@ (8000ddc <polling_update+0x94>)
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	011b      	lsls	r3, r3, #4
 8000d94:	440b      	add	r3, r1
 8000d96:	3304      	adds	r3, #4
 8000d98:	601a      	str	r2, [r3, #0]
		if (gThrObjs[i].count == 0) gThrObjs[i].flag = true;
 8000d9a:	4a10      	ldr	r2, [pc, #64]	@ (8000ddc <polling_update+0x94>)
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	011b      	lsls	r3, r3, #4
 8000da0:	4413      	add	r3, r2
 8000da2:	3304      	adds	r3, #4
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d106      	bne.n	8000db8 <polling_update+0x70>
 8000daa:	4a0c      	ldr	r2, [pc, #48]	@ (8000ddc <polling_update+0x94>)
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	011b      	lsls	r3, r3, #4
 8000db0:	4413      	add	r3, r2
 8000db2:	3308      	adds	r3, #8
 8000db4:	2201      	movs	r2, #1
 8000db6:	701a      	strb	r2, [r3, #0]
	for (int i=0; gThrObjs[i].cbf != NULL; i++) {
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	3301      	adds	r3, #1
 8000dbc:	607b      	str	r3, [r7, #4]
 8000dbe:	4a07      	ldr	r2, [pc, #28]	@ (8000ddc <polling_update+0x94>)
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	011b      	lsls	r3, r3, #4
 8000dc4:	4413      	add	r3, r2
 8000dc6:	330c      	adds	r3, #12
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	d1c2      	bne.n	8000d54 <polling_update+0xc>
	}
}
 8000dce:	bf00      	nop
 8000dd0:	bf00      	nop
 8000dd2:	370c      	adds	r7, #12
 8000dd4:	46bd      	mov	sp, r7
 8000dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dda:	4770      	bx	lr
 8000ddc:	20000014 	.word	0x20000014

08000de0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000de0:	b480      	push	{r7}
 8000de2:	b083      	sub	sp, #12
 8000de4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000de6:	2300      	movs	r3, #0
 8000de8:	607b      	str	r3, [r7, #4]
 8000dea:	4b10      	ldr	r3, [pc, #64]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000dec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000dee:	4a0f      	ldr	r2, [pc, #60]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000df0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000df4:	6453      	str	r3, [r2, #68]	@ 0x44
 8000df6:	4b0d      	ldr	r3, [pc, #52]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000df8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000dfa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000dfe:	607b      	str	r3, [r7, #4]
 8000e00:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e02:	2300      	movs	r3, #0
 8000e04:	603b      	str	r3, [r7, #0]
 8000e06:	4b09      	ldr	r3, [pc, #36]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000e08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e0a:	4a08      	ldr	r2, [pc, #32]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000e0c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000e10:	6413      	str	r3, [r2, #64]	@ 0x40
 8000e12:	4b06      	ldr	r3, [pc, #24]	@ (8000e2c <HAL_MspInit+0x4c>)
 8000e14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e16:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000e1a:	603b      	str	r3, [r7, #0]
 8000e1c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e1e:	bf00      	nop
 8000e20:	370c      	adds	r7, #12
 8000e22:	46bd      	mov	sp, r7
 8000e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e28:	4770      	bx	lr
 8000e2a:	bf00      	nop
 8000e2c:	40023800 	.word	0x40023800

08000e30 <HAL_ETH_MspInit>:
* This function configures the hardware resources used in this example
* @param heth: ETH handle pointer
* @retval None
*/
void HAL_ETH_MspInit(ETH_HandleTypeDef* heth)
{
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b08e      	sub	sp, #56	@ 0x38
 8000e34:	af00      	add	r7, sp, #0
 8000e36:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e38:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	601a      	str	r2, [r3, #0]
 8000e40:	605a      	str	r2, [r3, #4]
 8000e42:	609a      	str	r2, [r3, #8]
 8000e44:	60da      	str	r2, [r3, #12]
 8000e46:	611a      	str	r2, [r3, #16]
  if(heth->Instance==ETH)
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	4a55      	ldr	r2, [pc, #340]	@ (8000fa4 <HAL_ETH_MspInit+0x174>)
 8000e4e:	4293      	cmp	r3, r2
 8000e50:	f040 80a4 	bne.w	8000f9c <HAL_ETH_MspInit+0x16c>
  {
  /* USER CODE BEGIN ETH_MspInit 0 */

  /* USER CODE END ETH_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ETH_CLK_ENABLE();
 8000e54:	2300      	movs	r3, #0
 8000e56:	623b      	str	r3, [r7, #32]
 8000e58:	4b53      	ldr	r3, [pc, #332]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e5c:	4a52      	ldr	r2, [pc, #328]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e5e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000e62:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e64:	4b50      	ldr	r3, [pc, #320]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e68:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000e6c:	623b      	str	r3, [r7, #32]
 8000e6e:	6a3b      	ldr	r3, [r7, #32]
 8000e70:	2300      	movs	r3, #0
 8000e72:	61fb      	str	r3, [r7, #28]
 8000e74:	4b4c      	ldr	r3, [pc, #304]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e78:	4a4b      	ldr	r2, [pc, #300]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e7a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000e7e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e80:	4b49      	ldr	r3, [pc, #292]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e84:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8000e88:	61fb      	str	r3, [r7, #28]
 8000e8a:	69fb      	ldr	r3, [r7, #28]
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	61bb      	str	r3, [r7, #24]
 8000e90:	4b45      	ldr	r3, [pc, #276]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e94:	4a44      	ldr	r2, [pc, #272]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e96:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8000e9a:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e9c:	4b42      	ldr	r3, [pc, #264]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000e9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ea0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8000ea4:	61bb      	str	r3, [r7, #24]
 8000ea6:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	617b      	str	r3, [r7, #20]
 8000eac:	4b3e      	ldr	r3, [pc, #248]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000eae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eb0:	4a3d      	ldr	r2, [pc, #244]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000eb2:	f043 0304 	orr.w	r3, r3, #4
 8000eb6:	6313      	str	r3, [r2, #48]	@ 0x30
 8000eb8:	4b3b      	ldr	r3, [pc, #236]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000eba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ebc:	f003 0304 	and.w	r3, r3, #4
 8000ec0:	617b      	str	r3, [r7, #20]
 8000ec2:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	613b      	str	r3, [r7, #16]
 8000ec8:	4b37      	ldr	r3, [pc, #220]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000eca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ecc:	4a36      	ldr	r2, [pc, #216]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000ece:	f043 0301 	orr.w	r3, r3, #1
 8000ed2:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ed4:	4b34      	ldr	r3, [pc, #208]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000ed6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ed8:	f003 0301 	and.w	r3, r3, #1
 8000edc:	613b      	str	r3, [r7, #16]
 8000ede:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	60fb      	str	r3, [r7, #12]
 8000ee4:	4b30      	ldr	r3, [pc, #192]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000ee6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ee8:	4a2f      	ldr	r2, [pc, #188]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000eea:	f043 0302 	orr.w	r3, r3, #2
 8000eee:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ef0:	4b2d      	ldr	r3, [pc, #180]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000ef2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ef4:	f003 0302 	and.w	r3, r3, #2
 8000ef8:	60fb      	str	r3, [r7, #12]
 8000efa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000efc:	2300      	movs	r3, #0
 8000efe:	60bb      	str	r3, [r7, #8]
 8000f00:	4b29      	ldr	r3, [pc, #164]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000f02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f04:	4a28      	ldr	r2, [pc, #160]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000f06:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f0a:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f0c:	4b26      	ldr	r3, [pc, #152]	@ (8000fa8 <HAL_ETH_MspInit+0x178>)
 8000f0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000f14:	60bb      	str	r3, [r7, #8]
 8000f16:	68bb      	ldr	r3, [r7, #8]
    PC5     ------> ETH_RXD1
    PB13     ------> ETH_TXD1
    PG11     ------> ETH_TX_EN
    PG13     ------> ETH_TXD0
    */
    GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 8000f18:	2332      	movs	r3, #50	@ 0x32
 8000f1a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f1c:	2302      	movs	r3, #2
 8000f1e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f20:	2300      	movs	r3, #0
 8000f22:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f24:	2303      	movs	r3, #3
 8000f26:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000f28:	230b      	movs	r3, #11
 8000f2a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000f2c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f30:	4619      	mov	r1, r3
 8000f32:	481e      	ldr	r0, [pc, #120]	@ (8000fac <HAL_ETH_MspInit+0x17c>)
 8000f34:	f000 fee0 	bl	8001cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 8000f38:	2386      	movs	r3, #134	@ 0x86
 8000f3a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3c:	2302      	movs	r3, #2
 8000f3e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f40:	2300      	movs	r3, #0
 8000f42:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f44:	2303      	movs	r3, #3
 8000f46:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000f48:	230b      	movs	r3, #11
 8000f4a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f4c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f50:	4619      	mov	r1, r3
 8000f52:	4817      	ldr	r0, [pc, #92]	@ (8000fb0 <HAL_ETH_MspInit+0x180>)
 8000f54:	f000 fed0 	bl	8001cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 8000f58:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000f5c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f5e:	2302      	movs	r3, #2
 8000f60:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f62:	2300      	movs	r3, #0
 8000f64:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f66:	2303      	movs	r3, #3
 8000f68:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000f6a:	230b      	movs	r3, #11
 8000f6c:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 8000f6e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f72:	4619      	mov	r1, r3
 8000f74:	480f      	ldr	r0, [pc, #60]	@ (8000fb4 <HAL_ETH_MspInit+0x184>)
 8000f76:	f000 febf 	bl	8001cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 8000f7a:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
 8000f7e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f80:	2302      	movs	r3, #2
 8000f82:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f84:	2300      	movs	r3, #0
 8000f86:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f88:	2303      	movs	r3, #3
 8000f8a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000f8c:	230b      	movs	r3, #11
 8000f8e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f90:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f94:	4619      	mov	r1, r3
 8000f96:	4808      	ldr	r0, [pc, #32]	@ (8000fb8 <HAL_ETH_MspInit+0x188>)
 8000f98:	f000 feae 	bl	8001cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN ETH_MspInit 1 */

  /* USER CODE END ETH_MspInit 1 */
  }

}
 8000f9c:	bf00      	nop
 8000f9e:	3738      	adds	r7, #56	@ 0x38
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	bd80      	pop	{r7, pc}
 8000fa4:	40028000 	.word	0x40028000
 8000fa8:	40023800 	.word	0x40023800
 8000fac:	40020800 	.word	0x40020800
 8000fb0:	40020000 	.word	0x40020000
 8000fb4:	40020400 	.word	0x40020400
 8000fb8:	40021800 	.word	0x40021800

08000fbc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b08a      	sub	sp, #40	@ 0x28
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000fc4:	f107 0314 	add.w	r3, r7, #20
 8000fc8:	2200      	movs	r2, #0
 8000fca:	601a      	str	r2, [r3, #0]
 8000fcc:	605a      	str	r2, [r3, #4]
 8000fce:	609a      	str	r2, [r3, #8]
 8000fd0:	60da      	str	r2, [r3, #12]
 8000fd2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART3)
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	4a19      	ldr	r2, [pc, #100]	@ (8001040 <HAL_UART_MspInit+0x84>)
 8000fda:	4293      	cmp	r3, r2
 8000fdc:	d12c      	bne.n	8001038 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8000fde:	2300      	movs	r3, #0
 8000fe0:	613b      	str	r3, [r7, #16]
 8000fe2:	4b18      	ldr	r3, [pc, #96]	@ (8001044 <HAL_UART_MspInit+0x88>)
 8000fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000fe6:	4a17      	ldr	r2, [pc, #92]	@ (8001044 <HAL_UART_MspInit+0x88>)
 8000fe8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000fec:	6413      	str	r3, [r2, #64]	@ 0x40
 8000fee:	4b15      	ldr	r3, [pc, #84]	@ (8001044 <HAL_UART_MspInit+0x88>)
 8000ff0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ff2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8000ff6:	613b      	str	r3, [r7, #16]
 8000ff8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	60fb      	str	r3, [r7, #12]
 8000ffe:	4b11      	ldr	r3, [pc, #68]	@ (8001044 <HAL_UART_MspInit+0x88>)
 8001000:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001002:	4a10      	ldr	r2, [pc, #64]	@ (8001044 <HAL_UART_MspInit+0x88>)
 8001004:	f043 0308 	orr.w	r3, r3, #8
 8001008:	6313      	str	r3, [r2, #48]	@ 0x30
 800100a:	4b0e      	ldr	r3, [pc, #56]	@ (8001044 <HAL_UART_MspInit+0x88>)
 800100c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800100e:	f003 0308 	and.w	r3, r3, #8
 8001012:	60fb      	str	r3, [r7, #12]
 8001014:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration
    PD8     ------> USART3_TX
    PD9     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 8001016:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800101a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800101c:	2302      	movs	r3, #2
 800101e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001020:	2300      	movs	r3, #0
 8001022:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001024:	2303      	movs	r3, #3
 8001026:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8001028:	2307      	movs	r3, #7
 800102a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800102c:	f107 0314 	add.w	r3, r7, #20
 8001030:	4619      	mov	r1, r3
 8001032:	4805      	ldr	r0, [pc, #20]	@ (8001048 <HAL_UART_MspInit+0x8c>)
 8001034:	f000 fe60 	bl	8001cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8001038:	bf00      	nop
 800103a:	3728      	adds	r7, #40	@ 0x28
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	40004800 	.word	0x40004800
 8001044:	40023800 	.word	0x40023800
 8001048:	40020c00 	.word	0x40020c00

0800104c <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 800104c:	b580      	push	{r7, lr}
 800104e:	b08a      	sub	sp, #40	@ 0x28
 8001050:	af00      	add	r7, sp, #0
 8001052:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001054:	f107 0314 	add.w	r3, r7, #20
 8001058:	2200      	movs	r2, #0
 800105a:	601a      	str	r2, [r3, #0]
 800105c:	605a      	str	r2, [r3, #4]
 800105e:	609a      	str	r2, [r3, #8]
 8001060:	60da      	str	r2, [r3, #12]
 8001062:	611a      	str	r2, [r3, #16]
  if(hpcd->Instance==USB_OTG_FS)
 8001064:	687b      	ldr	r3, [r7, #4]
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800106c:	d13f      	bne.n	80010ee <HAL_PCD_MspInit+0xa2>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800106e:	2300      	movs	r3, #0
 8001070:	613b      	str	r3, [r7, #16]
 8001072:	4b21      	ldr	r3, [pc, #132]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 8001074:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001076:	4a20      	ldr	r2, [pc, #128]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 8001078:	f043 0301 	orr.w	r3, r3, #1
 800107c:	6313      	str	r3, [r2, #48]	@ 0x30
 800107e:	4b1e      	ldr	r3, [pc, #120]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 8001080:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001082:	f003 0301 	and.w	r3, r3, #1
 8001086:	613b      	str	r3, [r7, #16]
 8001088:	693b      	ldr	r3, [r7, #16]
    PA9     ------> USB_OTG_FS_VBUS
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 800108a:	f44f 53e8 	mov.w	r3, #7424	@ 0x1d00
 800108e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001090:	2302      	movs	r3, #2
 8001092:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001094:	2300      	movs	r3, #0
 8001096:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001098:	2303      	movs	r3, #3
 800109a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800109c:	230a      	movs	r3, #10
 800109e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010a0:	f107 0314 	add.w	r3, r7, #20
 80010a4:	4619      	mov	r1, r3
 80010a6:	4815      	ldr	r0, [pc, #84]	@ (80010fc <HAL_PCD_MspInit+0xb0>)
 80010a8:	f000 fe26 	bl	8001cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = USB_VBUS_Pin;
 80010ac:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80010b0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80010b2:	2300      	movs	r3, #0
 80010b4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010b6:	2300      	movs	r3, #0
 80010b8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 80010ba:	f107 0314 	add.w	r3, r7, #20
 80010be:	4619      	mov	r1, r3
 80010c0:	480e      	ldr	r0, [pc, #56]	@ (80010fc <HAL_PCD_MspInit+0xb0>)
 80010c2:	f000 fe19 	bl	8001cf8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 80010c6:	4b0c      	ldr	r3, [pc, #48]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 80010c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80010ca:	4a0b      	ldr	r2, [pc, #44]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 80010cc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80010d0:	6353      	str	r3, [r2, #52]	@ 0x34
 80010d2:	2300      	movs	r3, #0
 80010d4:	60fb      	str	r3, [r7, #12]
 80010d6:	4b08      	ldr	r3, [pc, #32]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 80010d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010da:	4a07      	ldr	r2, [pc, #28]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 80010dc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80010e0:	6453      	str	r3, [r2, #68]	@ 0x44
 80010e2:	4b05      	ldr	r3, [pc, #20]	@ (80010f8 <HAL_PCD_MspInit+0xac>)
 80010e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010e6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80010ea:	60fb      	str	r3, [r7, #12]
 80010ec:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 80010ee:	bf00      	nop
 80010f0:	3728      	adds	r7, #40	@ 0x28
 80010f2:	46bd      	mov	sp, r7
 80010f4:	bd80      	pop	{r7, pc}
 80010f6:	bf00      	nop
 80010f8:	40023800 	.word	0x40023800
 80010fc:	40020000 	.word	0x40020000

08001100 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001100:	b480      	push	{r7}
 8001102:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001104:	bf00      	nop
 8001106:	e7fd      	b.n	8001104 <NMI_Handler+0x4>

08001108 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001108:	b480      	push	{r7}
 800110a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800110c:	bf00      	nop
 800110e:	e7fd      	b.n	800110c <HardFault_Handler+0x4>

08001110 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001110:	b480      	push	{r7}
 8001112:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001114:	bf00      	nop
 8001116:	e7fd      	b.n	8001114 <MemManage_Handler+0x4>

08001118 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001118:	b480      	push	{r7}
 800111a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800111c:	bf00      	nop
 800111e:	e7fd      	b.n	800111c <BusFault_Handler+0x4>

08001120 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001120:	b480      	push	{r7}
 8001122:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001124:	bf00      	nop
 8001126:	e7fd      	b.n	8001124 <UsageFault_Handler+0x4>

08001128 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001128:	b480      	push	{r7}
 800112a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800112c:	bf00      	nop
 800112e:	46bd      	mov	sp, r7
 8001130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001134:	4770      	bx	lr

08001136 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001136:	b480      	push	{r7}
 8001138:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800113a:	bf00      	nop
 800113c:	46bd      	mov	sp, r7
 800113e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001142:	4770      	bx	lr

08001144 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001144:	b480      	push	{r7}
 8001146:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001148:	bf00      	nop
 800114a:	46bd      	mov	sp, r7
 800114c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001150:	4770      	bx	lr

08001152 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001152:	b580      	push	{r7, lr}
 8001154:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001156:	f7ff fafd 	bl	8000754 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800115a:	bf00      	nop
 800115c:	bd80      	pop	{r7, pc}

0800115e <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 800115e:	b580      	push	{r7, lr}
 8001160:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 8001162:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001166:	f000 ffa5 	bl	80020b4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800116a:	bf00      	nop
 800116c:	bd80      	pop	{r7, pc}

0800116e <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800116e:	b580      	push	{r7, lr}
 8001170:	b086      	sub	sp, #24
 8001172:	af00      	add	r7, sp, #0
 8001174:	60f8      	str	r0, [r7, #12]
 8001176:	60b9      	str	r1, [r7, #8]
 8001178:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800117a:	2300      	movs	r3, #0
 800117c:	617b      	str	r3, [r7, #20]
 800117e:	e00a      	b.n	8001196 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001180:	f3af 8000 	nop.w
 8001184:	4601      	mov	r1, r0
 8001186:	68bb      	ldr	r3, [r7, #8]
 8001188:	1c5a      	adds	r2, r3, #1
 800118a:	60ba      	str	r2, [r7, #8]
 800118c:	b2ca      	uxtb	r2, r1
 800118e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001190:	697b      	ldr	r3, [r7, #20]
 8001192:	3301      	adds	r3, #1
 8001194:	617b      	str	r3, [r7, #20]
 8001196:	697a      	ldr	r2, [r7, #20]
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	429a      	cmp	r2, r3
 800119c:	dbf0      	blt.n	8001180 <_read+0x12>
  }

  return len;
 800119e:	687b      	ldr	r3, [r7, #4]
}
 80011a0:	4618      	mov	r0, r3
 80011a2:	3718      	adds	r7, #24
 80011a4:	46bd      	mov	sp, r7
 80011a6:	bd80      	pop	{r7, pc}

080011a8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b086      	sub	sp, #24
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	60f8      	str	r0, [r7, #12]
 80011b0:	60b9      	str	r1, [r7, #8]
 80011b2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011b4:	2300      	movs	r3, #0
 80011b6:	617b      	str	r3, [r7, #20]
 80011b8:	e009      	b.n	80011ce <_write+0x26>
  {
    __io_putchar(*ptr++);
 80011ba:	68bb      	ldr	r3, [r7, #8]
 80011bc:	1c5a      	adds	r2, r3, #1
 80011be:	60ba      	str	r2, [r7, #8]
 80011c0:	781b      	ldrb	r3, [r3, #0]
 80011c2:	4618      	mov	r0, r3
 80011c4:	f7ff fab4 	bl	8000730 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011c8:	697b      	ldr	r3, [r7, #20]
 80011ca:	3301      	adds	r3, #1
 80011cc:	617b      	str	r3, [r7, #20]
 80011ce:	697a      	ldr	r2, [r7, #20]
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	429a      	cmp	r2, r3
 80011d4:	dbf1      	blt.n	80011ba <_write+0x12>
  }
  return len;
 80011d6:	687b      	ldr	r3, [r7, #4]
}
 80011d8:	4618      	mov	r0, r3
 80011da:	3718      	adds	r7, #24
 80011dc:	46bd      	mov	sp, r7
 80011de:	bd80      	pop	{r7, pc}

080011e0 <_close>:

int _close(int file)
{
 80011e0:	b480      	push	{r7}
 80011e2:	b083      	sub	sp, #12
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80011e8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011ec:	4618      	mov	r0, r3
 80011ee:	370c      	adds	r7, #12
 80011f0:	46bd      	mov	sp, r7
 80011f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f6:	4770      	bx	lr

080011f8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80011f8:	b480      	push	{r7}
 80011fa:	b083      	sub	sp, #12
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
 8001200:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001202:	683b      	ldr	r3, [r7, #0]
 8001204:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001208:	605a      	str	r2, [r3, #4]
  return 0;
 800120a:	2300      	movs	r3, #0
}
 800120c:	4618      	mov	r0, r3
 800120e:	370c      	adds	r7, #12
 8001210:	46bd      	mov	sp, r7
 8001212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001216:	4770      	bx	lr

08001218 <_isatty>:

int _isatty(int file)
{
 8001218:	b480      	push	{r7}
 800121a:	b083      	sub	sp, #12
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001220:	2301      	movs	r3, #1
}
 8001222:	4618      	mov	r0, r3
 8001224:	370c      	adds	r7, #12
 8001226:	46bd      	mov	sp, r7
 8001228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122c:	4770      	bx	lr

0800122e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800122e:	b480      	push	{r7}
 8001230:	b085      	sub	sp, #20
 8001232:	af00      	add	r7, sp, #0
 8001234:	60f8      	str	r0, [r7, #12]
 8001236:	60b9      	str	r1, [r7, #8]
 8001238:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800123a:	2300      	movs	r3, #0
}
 800123c:	4618      	mov	r0, r3
 800123e:	3714      	adds	r7, #20
 8001240:	46bd      	mov	sp, r7
 8001242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001246:	4770      	bx	lr

08001248 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b086      	sub	sp, #24
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001250:	4a14      	ldr	r2, [pc, #80]	@ (80012a4 <_sbrk+0x5c>)
 8001252:	4b15      	ldr	r3, [pc, #84]	@ (80012a8 <_sbrk+0x60>)
 8001254:	1ad3      	subs	r3, r2, r3
 8001256:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001258:	697b      	ldr	r3, [r7, #20]
 800125a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800125c:	4b13      	ldr	r3, [pc, #76]	@ (80012ac <_sbrk+0x64>)
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	2b00      	cmp	r3, #0
 8001262:	d102      	bne.n	800126a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001264:	4b11      	ldr	r3, [pc, #68]	@ (80012ac <_sbrk+0x64>)
 8001266:	4a12      	ldr	r2, [pc, #72]	@ (80012b0 <_sbrk+0x68>)
 8001268:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800126a:	4b10      	ldr	r3, [pc, #64]	@ (80012ac <_sbrk+0x64>)
 800126c:	681a      	ldr	r2, [r3, #0]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	4413      	add	r3, r2
 8001272:	693a      	ldr	r2, [r7, #16]
 8001274:	429a      	cmp	r2, r3
 8001276:	d207      	bcs.n	8001288 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001278:	f002 fe9e 	bl	8003fb8 <__errno>
 800127c:	4603      	mov	r3, r0
 800127e:	220c      	movs	r2, #12
 8001280:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001282:	f04f 33ff 	mov.w	r3, #4294967295
 8001286:	e009      	b.n	800129c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001288:	4b08      	ldr	r3, [pc, #32]	@ (80012ac <_sbrk+0x64>)
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800128e:	4b07      	ldr	r3, [pc, #28]	@ (80012ac <_sbrk+0x64>)
 8001290:	681a      	ldr	r2, [r3, #0]
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	4413      	add	r3, r2
 8001296:	4a05      	ldr	r2, [pc, #20]	@ (80012ac <_sbrk+0x64>)
 8001298:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800129a:	68fb      	ldr	r3, [r7, #12]
}
 800129c:	4618      	mov	r0, r3
 800129e:	3718      	adds	r7, #24
 80012a0:	46bd      	mov	sp, r7
 80012a2:	bd80      	pop	{r7, pc}
 80012a4:	20030000 	.word	0x20030000
 80012a8:	00000400 	.word	0x00000400
 80012ac:	200008dc 	.word	0x200008dc
 80012b0:	20000a38 	.word	0x20000a38

080012b4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80012b8:	4b06      	ldr	r3, [pc, #24]	@ (80012d4 <SystemInit+0x20>)
 80012ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012be:	4a05      	ldr	r2, [pc, #20]	@ (80012d4 <SystemInit+0x20>)
 80012c0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012c4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80012c8:	bf00      	nop
 80012ca:	46bd      	mov	sp, r7
 80012cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012d0:	4770      	bx	lr
 80012d2:	bf00      	nop
 80012d4:	e000ed00 	.word	0xe000ed00

080012d8 <uart_init>:
static bool rxd_flag = false;

#define D_BUF_MAX 100

void uart_init(void)
{
 80012d8:	b580      	push	{r7, lr}
 80012da:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart3, (uint8_t *)&rxd, 1);
 80012dc:	2201      	movs	r2, #1
 80012de:	4903      	ldr	r1, [pc, #12]	@ (80012ec <uart_init+0x14>)
 80012e0:	4803      	ldr	r0, [pc, #12]	@ (80012f0 <uart_init+0x18>)
 80012e2:	f001 fd82 	bl	8002dea <HAL_UART_Receive_IT>
}
 80012e6:	bf00      	nop
 80012e8:	bd80      	pop	{r7, pc}
 80012ea:	bf00      	nop
 80012ec:	200008e0 	.word	0x200008e0
 80012f0:	200003a8 	.word	0x200003a8

080012f4 <uart_thread>:

void uart_thread(void *arg)
{
 80012f4:	b580      	push	{r7, lr}
 80012f6:	b082      	sub	sp, #8
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	6078      	str	r0, [r7, #4]
	if(rxd_flag == true){
 80012fc:	4b08      	ldr	r3, [pc, #32]	@ (8001320 <uart_thread+0x2c>)
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d008      	beq.n	8001316 <uart_thread+0x22>
		rxd_flag = false;
 8001304:	4b06      	ldr	r3, [pc, #24]	@ (8001320 <uart_thread+0x2c>)
 8001306:	2200      	movs	r2, #0
 8001308:	701a      	strb	r2, [r3, #0]
		printf("rxd: %c \r\n",rxd);
 800130a:	4b06      	ldr	r3, [pc, #24]	@ (8001324 <uart_thread+0x30>)
 800130c:	781b      	ldrb	r3, [r3, #0]
 800130e:	4619      	mov	r1, r3
 8001310:	4805      	ldr	r0, [pc, #20]	@ (8001328 <uart_thread+0x34>)
 8001312:	f002 fcbb 	bl	8003c8c <iprintf>
	}
}
 8001316:	bf00      	nop
 8001318:	3708      	adds	r7, #8
 800131a:	46bd      	mov	sp, r7
 800131c:	bd80      	pop	{r7, pc}
 800131e:	bf00      	nop
 8001320:	200008e1 	.word	0x200008e1
 8001324:	200008e0 	.word	0x200008e0
 8001328:	08004a6c 	.word	0x08004a6c

0800132c <Reset_Handler>:
 800132c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001364 <LoopFillZerobss+0xe>
 8001330:	f7ff ffc0 	bl	80012b4 <SystemInit>
 8001334:	480c      	ldr	r0, [pc, #48]	@ (8001368 <LoopFillZerobss+0x12>)
 8001336:	490d      	ldr	r1, [pc, #52]	@ (800136c <LoopFillZerobss+0x16>)
 8001338:	4a0d      	ldr	r2, [pc, #52]	@ (8001370 <LoopFillZerobss+0x1a>)
 800133a:	2300      	movs	r3, #0
 800133c:	e002      	b.n	8001344 <LoopCopyDataInit>

0800133e <CopyDataInit>:
 800133e:	58d4      	ldr	r4, [r2, r3]
 8001340:	50c4      	str	r4, [r0, r3]
 8001342:	3304      	adds	r3, #4

08001344 <LoopCopyDataInit>:
 8001344:	18c4      	adds	r4, r0, r3
 8001346:	428c      	cmp	r4, r1
 8001348:	d3f9      	bcc.n	800133e <CopyDataInit>
 800134a:	4a0a      	ldr	r2, [pc, #40]	@ (8001374 <LoopFillZerobss+0x1e>)
 800134c:	4c0a      	ldr	r4, [pc, #40]	@ (8001378 <LoopFillZerobss+0x22>)
 800134e:	2300      	movs	r3, #0
 8001350:	e001      	b.n	8001356 <LoopFillZerobss>

08001352 <FillZerobss>:
 8001352:	6013      	str	r3, [r2, #0]
 8001354:	3204      	adds	r2, #4

08001356 <LoopFillZerobss>:
 8001356:	42a2      	cmp	r2, r4
 8001358:	d3fb      	bcc.n	8001352 <FillZerobss>
 800135a:	f002 fe33 	bl	8003fc4 <__libc_init_array>
 800135e:	f7ff fabf 	bl	80008e0 <main>
 8001362:	4770      	bx	lr
 8001364:	20030000 	.word	0x20030000
 8001368:	20000000 	.word	0x20000000
 800136c:	2000009c 	.word	0x2000009c
 8001370:	08004ad4 	.word	0x08004ad4
 8001374:	2000009c 	.word	0x2000009c
 8001378:	20000a34 	.word	0x20000a34

0800137c <ADC_IRQHandler>:
 800137c:	e7fe      	b.n	800137c <ADC_IRQHandler>
	...

08001380 <HAL_Init>:
 8001380:	b580      	push	{r7, lr}
 8001382:	af00      	add	r7, sp, #0
 8001384:	4b0e      	ldr	r3, [pc, #56]	@ (80013c0 <HAL_Init+0x40>)
 8001386:	681b      	ldr	r3, [r3, #0]
 8001388:	4a0d      	ldr	r2, [pc, #52]	@ (80013c0 <HAL_Init+0x40>)
 800138a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800138e:	6013      	str	r3, [r2, #0]
 8001390:	4b0b      	ldr	r3, [pc, #44]	@ (80013c0 <HAL_Init+0x40>)
 8001392:	681b      	ldr	r3, [r3, #0]
 8001394:	4a0a      	ldr	r2, [pc, #40]	@ (80013c0 <HAL_Init+0x40>)
 8001396:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800139a:	6013      	str	r3, [r2, #0]
 800139c:	4b08      	ldr	r3, [pc, #32]	@ (80013c0 <HAL_Init+0x40>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	4a07      	ldr	r2, [pc, #28]	@ (80013c0 <HAL_Init+0x40>)
 80013a2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80013a6:	6013      	str	r3, [r2, #0]
 80013a8:	2003      	movs	r0, #3
 80013aa:	f000 f93b 	bl	8001624 <HAL_NVIC_SetPriorityGrouping>
 80013ae:	2000      	movs	r0, #0
 80013b0:	f000 f808 	bl	80013c4 <HAL_InitTick>
 80013b4:	f7ff fd14 	bl	8000de0 <HAL_MspInit>
 80013b8:	2300      	movs	r3, #0
 80013ba:	4618      	mov	r0, r3
 80013bc:	bd80      	pop	{r7, pc}
 80013be:	bf00      	nop
 80013c0:	40023c00 	.word	0x40023c00

080013c4 <HAL_InitTick>:
 80013c4:	b580      	push	{r7, lr}
 80013c6:	b082      	sub	sp, #8
 80013c8:	af00      	add	r7, sp, #0
 80013ca:	6078      	str	r0, [r7, #4]
 80013cc:	4b12      	ldr	r3, [pc, #72]	@ (8001418 <HAL_InitTick+0x54>)
 80013ce:	681a      	ldr	r2, [r3, #0]
 80013d0:	4b12      	ldr	r3, [pc, #72]	@ (800141c <HAL_InitTick+0x58>)
 80013d2:	781b      	ldrb	r3, [r3, #0]
 80013d4:	4619      	mov	r1, r3
 80013d6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80013da:	fbb3 f3f1 	udiv	r3, r3, r1
 80013de:	fbb2 f3f3 	udiv	r3, r2, r3
 80013e2:	4618      	mov	r0, r3
 80013e4:	f000 f953 	bl	800168e <HAL_SYSTICK_Config>
 80013e8:	4603      	mov	r3, r0
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d001      	beq.n	80013f2 <HAL_InitTick+0x2e>
 80013ee:	2301      	movs	r3, #1
 80013f0:	e00e      	b.n	8001410 <HAL_InitTick+0x4c>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	2b0f      	cmp	r3, #15
 80013f6:	d80a      	bhi.n	800140e <HAL_InitTick+0x4a>
 80013f8:	2200      	movs	r2, #0
 80013fa:	6879      	ldr	r1, [r7, #4]
 80013fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001400:	f000 f91b 	bl	800163a <HAL_NVIC_SetPriority>
 8001404:	4a06      	ldr	r2, [pc, #24]	@ (8001420 <HAL_InitTick+0x5c>)
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	6013      	str	r3, [r2, #0]
 800140a:	2300      	movs	r3, #0
 800140c:	e000      	b.n	8001410 <HAL_InitTick+0x4c>
 800140e:	2301      	movs	r3, #1
 8001410:	4618      	mov	r0, r3
 8001412:	3708      	adds	r7, #8
 8001414:	46bd      	mov	sp, r7
 8001416:	bd80      	pop	{r7, pc}
 8001418:	20000034 	.word	0x20000034
 800141c:	2000003c 	.word	0x2000003c
 8001420:	20000038 	.word	0x20000038

08001424 <HAL_GetTick>:
 8001424:	b480      	push	{r7}
 8001426:	af00      	add	r7, sp, #0
 8001428:	4b03      	ldr	r3, [pc, #12]	@ (8001438 <HAL_GetTick+0x14>)
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	4618      	mov	r0, r3
 800142e:	46bd      	mov	sp, r7
 8001430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001434:	4770      	bx	lr
 8001436:	bf00      	nop
 8001438:	200008e4 	.word	0x200008e4

0800143c <HAL_Delay>:
 800143c:	b580      	push	{r7, lr}
 800143e:	b084      	sub	sp, #16
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
 8001444:	f7ff ffee 	bl	8001424 <HAL_GetTick>
 8001448:	60b8      	str	r0, [r7, #8]
 800144a:	687b      	ldr	r3, [r7, #4]
 800144c:	60fb      	str	r3, [r7, #12]
 800144e:	68fb      	ldr	r3, [r7, #12]
 8001450:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001454:	d005      	beq.n	8001462 <HAL_Delay+0x26>
 8001456:	4b0a      	ldr	r3, [pc, #40]	@ (8001480 <HAL_Delay+0x44>)
 8001458:	781b      	ldrb	r3, [r3, #0]
 800145a:	461a      	mov	r2, r3
 800145c:	68fb      	ldr	r3, [r7, #12]
 800145e:	4413      	add	r3, r2
 8001460:	60fb      	str	r3, [r7, #12]
 8001462:	bf00      	nop
 8001464:	f7ff ffde 	bl	8001424 <HAL_GetTick>
 8001468:	4602      	mov	r2, r0
 800146a:	68bb      	ldr	r3, [r7, #8]
 800146c:	1ad3      	subs	r3, r2, r3
 800146e:	68fa      	ldr	r2, [r7, #12]
 8001470:	429a      	cmp	r2, r3
 8001472:	d8f7      	bhi.n	8001464 <HAL_Delay+0x28>
 8001474:	bf00      	nop
 8001476:	bf00      	nop
 8001478:	3710      	adds	r7, #16
 800147a:	46bd      	mov	sp, r7
 800147c:	bd80      	pop	{r7, pc}
 800147e:	bf00      	nop
 8001480:	2000003c 	.word	0x2000003c

08001484 <__NVIC_SetPriorityGrouping>:
 8001484:	b480      	push	{r7}
 8001486:	b085      	sub	sp, #20
 8001488:	af00      	add	r7, sp, #0
 800148a:	6078      	str	r0, [r7, #4]
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	f003 0307 	and.w	r3, r3, #7
 8001492:	60fb      	str	r3, [r7, #12]
 8001494:	4b0c      	ldr	r3, [pc, #48]	@ (80014c8 <__NVIC_SetPriorityGrouping+0x44>)
 8001496:	68db      	ldr	r3, [r3, #12]
 8001498:	60bb      	str	r3, [r7, #8]
 800149a:	68ba      	ldr	r2, [r7, #8]
 800149c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80014a0:	4013      	ands	r3, r2
 80014a2:	60bb      	str	r3, [r7, #8]
 80014a4:	68fb      	ldr	r3, [r7, #12]
 80014a6:	021a      	lsls	r2, r3, #8
 80014a8:	68bb      	ldr	r3, [r7, #8]
 80014aa:	4313      	orrs	r3, r2
 80014ac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80014b0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014b4:	60bb      	str	r3, [r7, #8]
 80014b6:	4a04      	ldr	r2, [pc, #16]	@ (80014c8 <__NVIC_SetPriorityGrouping+0x44>)
 80014b8:	68bb      	ldr	r3, [r7, #8]
 80014ba:	60d3      	str	r3, [r2, #12]
 80014bc:	bf00      	nop
 80014be:	3714      	adds	r7, #20
 80014c0:	46bd      	mov	sp, r7
 80014c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c6:	4770      	bx	lr
 80014c8:	e000ed00 	.word	0xe000ed00

080014cc <__NVIC_GetPriorityGrouping>:
 80014cc:	b480      	push	{r7}
 80014ce:	af00      	add	r7, sp, #0
 80014d0:	4b04      	ldr	r3, [pc, #16]	@ (80014e4 <__NVIC_GetPriorityGrouping+0x18>)
 80014d2:	68db      	ldr	r3, [r3, #12]
 80014d4:	0a1b      	lsrs	r3, r3, #8
 80014d6:	f003 0307 	and.w	r3, r3, #7
 80014da:	4618      	mov	r0, r3
 80014dc:	46bd      	mov	sp, r7
 80014de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014e2:	4770      	bx	lr
 80014e4:	e000ed00 	.word	0xe000ed00

080014e8 <__NVIC_EnableIRQ>:
 80014e8:	b480      	push	{r7}
 80014ea:	b083      	sub	sp, #12
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	4603      	mov	r3, r0
 80014f0:	71fb      	strb	r3, [r7, #7]
 80014f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	db0b      	blt.n	8001512 <__NVIC_EnableIRQ+0x2a>
 80014fa:	79fb      	ldrb	r3, [r7, #7]
 80014fc:	f003 021f 	and.w	r2, r3, #31
 8001500:	4907      	ldr	r1, [pc, #28]	@ (8001520 <__NVIC_EnableIRQ+0x38>)
 8001502:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001506:	095b      	lsrs	r3, r3, #5
 8001508:	2001      	movs	r0, #1
 800150a:	fa00 f202 	lsl.w	r2, r0, r2
 800150e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001512:	bf00      	nop
 8001514:	370c      	adds	r7, #12
 8001516:	46bd      	mov	sp, r7
 8001518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151c:	4770      	bx	lr
 800151e:	bf00      	nop
 8001520:	e000e100 	.word	0xe000e100

08001524 <__NVIC_SetPriority>:
 8001524:	b480      	push	{r7}
 8001526:	b083      	sub	sp, #12
 8001528:	af00      	add	r7, sp, #0
 800152a:	4603      	mov	r3, r0
 800152c:	6039      	str	r1, [r7, #0]
 800152e:	71fb      	strb	r3, [r7, #7]
 8001530:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001534:	2b00      	cmp	r3, #0
 8001536:	db0a      	blt.n	800154e <__NVIC_SetPriority+0x2a>
 8001538:	683b      	ldr	r3, [r7, #0]
 800153a:	b2da      	uxtb	r2, r3
 800153c:	490c      	ldr	r1, [pc, #48]	@ (8001570 <__NVIC_SetPriority+0x4c>)
 800153e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001542:	0112      	lsls	r2, r2, #4
 8001544:	b2d2      	uxtb	r2, r2
 8001546:	440b      	add	r3, r1
 8001548:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800154c:	e00a      	b.n	8001564 <__NVIC_SetPriority+0x40>
 800154e:	683b      	ldr	r3, [r7, #0]
 8001550:	b2da      	uxtb	r2, r3
 8001552:	4908      	ldr	r1, [pc, #32]	@ (8001574 <__NVIC_SetPriority+0x50>)
 8001554:	79fb      	ldrb	r3, [r7, #7]
 8001556:	f003 030f 	and.w	r3, r3, #15
 800155a:	3b04      	subs	r3, #4
 800155c:	0112      	lsls	r2, r2, #4
 800155e:	b2d2      	uxtb	r2, r2
 8001560:	440b      	add	r3, r1
 8001562:	761a      	strb	r2, [r3, #24]
 8001564:	bf00      	nop
 8001566:	370c      	adds	r7, #12
 8001568:	46bd      	mov	sp, r7
 800156a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800156e:	4770      	bx	lr
 8001570:	e000e100 	.word	0xe000e100
 8001574:	e000ed00 	.word	0xe000ed00

08001578 <NVIC_EncodePriority>:
 8001578:	b480      	push	{r7}
 800157a:	b089      	sub	sp, #36	@ 0x24
 800157c:	af00      	add	r7, sp, #0
 800157e:	60f8      	str	r0, [r7, #12]
 8001580:	60b9      	str	r1, [r7, #8]
 8001582:	607a      	str	r2, [r7, #4]
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	f003 0307 	and.w	r3, r3, #7
 800158a:	61fb      	str	r3, [r7, #28]
 800158c:	69fb      	ldr	r3, [r7, #28]
 800158e:	f1c3 0307 	rsb	r3, r3, #7
 8001592:	2b04      	cmp	r3, #4
 8001594:	bf28      	it	cs
 8001596:	2304      	movcs	r3, #4
 8001598:	61bb      	str	r3, [r7, #24]
 800159a:	69fb      	ldr	r3, [r7, #28]
 800159c:	3304      	adds	r3, #4
 800159e:	2b06      	cmp	r3, #6
 80015a0:	d902      	bls.n	80015a8 <NVIC_EncodePriority+0x30>
 80015a2:	69fb      	ldr	r3, [r7, #28]
 80015a4:	3b03      	subs	r3, #3
 80015a6:	e000      	b.n	80015aa <NVIC_EncodePriority+0x32>
 80015a8:	2300      	movs	r3, #0
 80015aa:	617b      	str	r3, [r7, #20]
 80015ac:	f04f 32ff 	mov.w	r2, #4294967295
 80015b0:	69bb      	ldr	r3, [r7, #24]
 80015b2:	fa02 f303 	lsl.w	r3, r2, r3
 80015b6:	43da      	mvns	r2, r3
 80015b8:	68bb      	ldr	r3, [r7, #8]
 80015ba:	401a      	ands	r2, r3
 80015bc:	697b      	ldr	r3, [r7, #20]
 80015be:	409a      	lsls	r2, r3
 80015c0:	f04f 31ff 	mov.w	r1, #4294967295
 80015c4:	697b      	ldr	r3, [r7, #20]
 80015c6:	fa01 f303 	lsl.w	r3, r1, r3
 80015ca:	43d9      	mvns	r1, r3
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	400b      	ands	r3, r1
 80015d0:	4313      	orrs	r3, r2
 80015d2:	4618      	mov	r0, r3
 80015d4:	3724      	adds	r7, #36	@ 0x24
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr
	...

080015e0 <SysTick_Config>:
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b082      	sub	sp, #8
 80015e4:	af00      	add	r7, sp, #0
 80015e6:	6078      	str	r0, [r7, #4]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	3b01      	subs	r3, #1
 80015ec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80015f0:	d301      	bcc.n	80015f6 <SysTick_Config+0x16>
 80015f2:	2301      	movs	r3, #1
 80015f4:	e00f      	b.n	8001616 <SysTick_Config+0x36>
 80015f6:	4a0a      	ldr	r2, [pc, #40]	@ (8001620 <SysTick_Config+0x40>)
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	3b01      	subs	r3, #1
 80015fc:	6053      	str	r3, [r2, #4]
 80015fe:	210f      	movs	r1, #15
 8001600:	f04f 30ff 	mov.w	r0, #4294967295
 8001604:	f7ff ff8e 	bl	8001524 <__NVIC_SetPriority>
 8001608:	4b05      	ldr	r3, [pc, #20]	@ (8001620 <SysTick_Config+0x40>)
 800160a:	2200      	movs	r2, #0
 800160c:	609a      	str	r2, [r3, #8]
 800160e:	4b04      	ldr	r3, [pc, #16]	@ (8001620 <SysTick_Config+0x40>)
 8001610:	2207      	movs	r2, #7
 8001612:	601a      	str	r2, [r3, #0]
 8001614:	2300      	movs	r3, #0
 8001616:	4618      	mov	r0, r3
 8001618:	3708      	adds	r7, #8
 800161a:	46bd      	mov	sp, r7
 800161c:	bd80      	pop	{r7, pc}
 800161e:	bf00      	nop
 8001620:	e000e010 	.word	0xe000e010

08001624 <HAL_NVIC_SetPriorityGrouping>:
 8001624:	b580      	push	{r7, lr}
 8001626:	b082      	sub	sp, #8
 8001628:	af00      	add	r7, sp, #0
 800162a:	6078      	str	r0, [r7, #4]
 800162c:	6878      	ldr	r0, [r7, #4]
 800162e:	f7ff ff29 	bl	8001484 <__NVIC_SetPriorityGrouping>
 8001632:	bf00      	nop
 8001634:	3708      	adds	r7, #8
 8001636:	46bd      	mov	sp, r7
 8001638:	bd80      	pop	{r7, pc}

0800163a <HAL_NVIC_SetPriority>:
 800163a:	b580      	push	{r7, lr}
 800163c:	b086      	sub	sp, #24
 800163e:	af00      	add	r7, sp, #0
 8001640:	4603      	mov	r3, r0
 8001642:	60b9      	str	r1, [r7, #8]
 8001644:	607a      	str	r2, [r7, #4]
 8001646:	73fb      	strb	r3, [r7, #15]
 8001648:	2300      	movs	r3, #0
 800164a:	617b      	str	r3, [r7, #20]
 800164c:	f7ff ff3e 	bl	80014cc <__NVIC_GetPriorityGrouping>
 8001650:	6178      	str	r0, [r7, #20]
 8001652:	687a      	ldr	r2, [r7, #4]
 8001654:	68b9      	ldr	r1, [r7, #8]
 8001656:	6978      	ldr	r0, [r7, #20]
 8001658:	f7ff ff8e 	bl	8001578 <NVIC_EncodePriority>
 800165c:	4602      	mov	r2, r0
 800165e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001662:	4611      	mov	r1, r2
 8001664:	4618      	mov	r0, r3
 8001666:	f7ff ff5d 	bl	8001524 <__NVIC_SetPriority>
 800166a:	bf00      	nop
 800166c:	3718      	adds	r7, #24
 800166e:	46bd      	mov	sp, r7
 8001670:	bd80      	pop	{r7, pc}

08001672 <HAL_NVIC_EnableIRQ>:
 8001672:	b580      	push	{r7, lr}
 8001674:	b082      	sub	sp, #8
 8001676:	af00      	add	r7, sp, #0
 8001678:	4603      	mov	r3, r0
 800167a:	71fb      	strb	r3, [r7, #7]
 800167c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001680:	4618      	mov	r0, r3
 8001682:	f7ff ff31 	bl	80014e8 <__NVIC_EnableIRQ>
 8001686:	bf00      	nop
 8001688:	3708      	adds	r7, #8
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}

0800168e <HAL_SYSTICK_Config>:
 800168e:	b580      	push	{r7, lr}
 8001690:	b082      	sub	sp, #8
 8001692:	af00      	add	r7, sp, #0
 8001694:	6078      	str	r0, [r7, #4]
 8001696:	6878      	ldr	r0, [r7, #4]
 8001698:	f7ff ffa2 	bl	80015e0 <SysTick_Config>
 800169c:	4603      	mov	r3, r0
 800169e:	4618      	mov	r0, r3
 80016a0:	3708      	adds	r7, #8
 80016a2:	46bd      	mov	sp, r7
 80016a4:	bd80      	pop	{r7, pc}
	...

080016a8 <HAL_ETH_Init>:
 80016a8:	b580      	push	{r7, lr}
 80016aa:	b084      	sub	sp, #16
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d101      	bne.n	80016ba <HAL_ETH_Init+0x12>
 80016b6:	2301      	movs	r3, #1
 80016b8:	e06c      	b.n	8001794 <HAL_ETH_Init+0xec>
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d106      	bne.n	80016d2 <HAL_ETH_Init+0x2a>
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	2223      	movs	r2, #35	@ 0x23
 80016c8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80016cc:	6878      	ldr	r0, [r7, #4]
 80016ce:	f7ff fbaf 	bl	8000e30 <HAL_ETH_MspInit>
 80016d2:	2300      	movs	r3, #0
 80016d4:	60bb      	str	r3, [r7, #8]
 80016d6:	4b31      	ldr	r3, [pc, #196]	@ (800179c <HAL_ETH_Init+0xf4>)
 80016d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016da:	4a30      	ldr	r2, [pc, #192]	@ (800179c <HAL_ETH_Init+0xf4>)
 80016dc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80016e0:	6453      	str	r3, [r2, #68]	@ 0x44
 80016e2:	4b2e      	ldr	r3, [pc, #184]	@ (800179c <HAL_ETH_Init+0xf4>)
 80016e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016e6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80016ea:	60bb      	str	r3, [r7, #8]
 80016ec:	68bb      	ldr	r3, [r7, #8]
 80016ee:	4b2c      	ldr	r3, [pc, #176]	@ (80017a0 <HAL_ETH_Init+0xf8>)
 80016f0:	685b      	ldr	r3, [r3, #4]
 80016f2:	4a2b      	ldr	r2, [pc, #172]	@ (80017a0 <HAL_ETH_Init+0xf8>)
 80016f4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80016f8:	6053      	str	r3, [r2, #4]
 80016fa:	4b29      	ldr	r3, [pc, #164]	@ (80017a0 <HAL_ETH_Init+0xf8>)
 80016fc:	685a      	ldr	r2, [r3, #4]
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	689b      	ldr	r3, [r3, #8]
 8001702:	4927      	ldr	r1, [pc, #156]	@ (80017a0 <HAL_ETH_Init+0xf8>)
 8001704:	4313      	orrs	r3, r2
 8001706:	604b      	str	r3, [r1, #4]
 8001708:	4b25      	ldr	r3, [pc, #148]	@ (80017a0 <HAL_ETH_Init+0xf8>)
 800170a:	685b      	ldr	r3, [r3, #4]
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	681b      	ldr	r3, [r3, #0]
 8001710:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	687a      	ldr	r2, [r7, #4]
 8001718:	6812      	ldr	r2, [r2, #0]
 800171a:	f043 0301 	orr.w	r3, r3, #1
 800171e:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8001722:	6013      	str	r3, [r2, #0]
 8001724:	f7ff fe7e 	bl	8001424 <HAL_GetTick>
 8001728:	60f8      	str	r0, [r7, #12]
 800172a:	e011      	b.n	8001750 <HAL_ETH_Init+0xa8>
 800172c:	f7ff fe7a 	bl	8001424 <HAL_GetTick>
 8001730:	4602      	mov	r2, r0
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	1ad3      	subs	r3, r2, r3
 8001736:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800173a:	d909      	bls.n	8001750 <HAL_ETH_Init+0xa8>
 800173c:	687b      	ldr	r3, [r7, #4]
 800173e:	2204      	movs	r2, #4
 8001740:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	22e0      	movs	r2, #224	@ 0xe0
 8001748:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800174c:	2301      	movs	r3, #1
 800174e:	e021      	b.n	8001794 <HAL_ETH_Init+0xec>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	f003 0301 	and.w	r3, r3, #1
 800175e:	2b00      	cmp	r3, #0
 8001760:	d1e4      	bne.n	800172c <HAL_ETH_Init+0x84>
 8001762:	6878      	ldr	r0, [r7, #4]
 8001764:	f000 f958 	bl	8001a18 <ETH_MACDMAConfig>
 8001768:	6878      	ldr	r0, [r7, #4]
 800176a:	f000 f9ff 	bl	8001b6c <ETH_DMATxDescListInit>
 800176e:	6878      	ldr	r0, [r7, #4]
 8001770:	f000 fa55 	bl	8001c1e <ETH_DMARxDescListInit>
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	461a      	mov	r2, r3
 800177a:	2100      	movs	r1, #0
 800177c:	6878      	ldr	r0, [r7, #4]
 800177e:	f000 f9bd 	bl	8001afc <ETH_MACAddressConfig>
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	2200      	movs	r2, #0
 8001786:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	2210      	movs	r2, #16
 800178e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8001792:	2300      	movs	r3, #0
 8001794:	4618      	mov	r0, r3
 8001796:	3710      	adds	r7, #16
 8001798:	46bd      	mov	sp, r7
 800179a:	bd80      	pop	{r7, pc}
 800179c:	40023800 	.word	0x40023800
 80017a0:	40013800 	.word	0x40013800

080017a4 <ETH_SetMACConfig>:
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b084      	sub	sp, #16
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6039      	str	r1, [r7, #0]
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	60fb      	str	r3, [r7, #12]
 80017b6:	68fa      	ldr	r2, [r7, #12]
 80017b8:	4b51      	ldr	r3, [pc, #324]	@ (8001900 <ETH_SetMACConfig+0x15c>)
 80017ba:	4013      	ands	r3, r2
 80017bc:	60fb      	str	r3, [r7, #12]
 80017be:	683b      	ldr	r3, [r7, #0]
 80017c0:	7c1b      	ldrb	r3, [r3, #16]
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d102      	bne.n	80017cc <ETH_SetMACConfig+0x28>
 80017c6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80017ca:	e000      	b.n	80017ce <ETH_SetMACConfig+0x2a>
 80017cc:	2200      	movs	r2, #0
 80017ce:	683b      	ldr	r3, [r7, #0]
 80017d0:	7c5b      	ldrb	r3, [r3, #17]
 80017d2:	2b00      	cmp	r3, #0
 80017d4:	d102      	bne.n	80017dc <ETH_SetMACConfig+0x38>
 80017d6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80017da:	e000      	b.n	80017de <ETH_SetMACConfig+0x3a>
 80017dc:	2300      	movs	r3, #0
 80017de:	431a      	orrs	r2, r3
 80017e0:	683b      	ldr	r3, [r7, #0]
 80017e2:	689b      	ldr	r3, [r3, #8]
 80017e4:	431a      	orrs	r2, r3
 80017e6:	683b      	ldr	r3, [r7, #0]
 80017e8:	7fdb      	ldrb	r3, [r3, #31]
 80017ea:	041b      	lsls	r3, r3, #16
 80017ec:	431a      	orrs	r2, r3
 80017ee:	683b      	ldr	r3, [r7, #0]
 80017f0:	695b      	ldr	r3, [r3, #20]
 80017f2:	4313      	orrs	r3, r2
 80017f4:	683a      	ldr	r2, [r7, #0]
 80017f6:	7f92      	ldrb	r2, [r2, #30]
 80017f8:	2a00      	cmp	r2, #0
 80017fa:	d102      	bne.n	8001802 <ETH_SetMACConfig+0x5e>
 80017fc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001800:	e000      	b.n	8001804 <ETH_SetMACConfig+0x60>
 8001802:	2200      	movs	r2, #0
 8001804:	431a      	orrs	r2, r3
 8001806:	683b      	ldr	r3, [r7, #0]
 8001808:	7f1b      	ldrb	r3, [r3, #28]
 800180a:	031b      	lsls	r3, r3, #12
 800180c:	431a      	orrs	r2, r3
 800180e:	683b      	ldr	r3, [r7, #0]
 8001810:	699b      	ldr	r3, [r3, #24]
 8001812:	431a      	orrs	r2, r3
 8001814:	683b      	ldr	r3, [r7, #0]
 8001816:	791b      	ldrb	r3, [r3, #4]
 8001818:	029b      	lsls	r3, r3, #10
 800181a:	4313      	orrs	r3, r2
 800181c:	683a      	ldr	r2, [r7, #0]
 800181e:	f892 2020 	ldrb.w	r2, [r2, #32]
 8001822:	2a00      	cmp	r2, #0
 8001824:	d102      	bne.n	800182c <ETH_SetMACConfig+0x88>
 8001826:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800182a:	e000      	b.n	800182e <ETH_SetMACConfig+0x8a>
 800182c:	2200      	movs	r2, #0
 800182e:	431a      	orrs	r2, r3
 8001830:	683b      	ldr	r3, [r7, #0]
 8001832:	7bdb      	ldrb	r3, [r3, #15]
 8001834:	01db      	lsls	r3, r3, #7
 8001836:	431a      	orrs	r2, r3
 8001838:	683b      	ldr	r3, [r7, #0]
 800183a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800183c:	431a      	orrs	r2, r3
 800183e:	683b      	ldr	r3, [r7, #0]
 8001840:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001844:	011b      	lsls	r3, r3, #4
 8001846:	4313      	orrs	r3, r2
 8001848:	68fa      	ldr	r2, [r7, #12]
 800184a:	4313      	orrs	r3, r2
 800184c:	60fb      	str	r3, [r7, #12]
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	68fa      	ldr	r2, [r7, #12]
 8001854:	601a      	str	r2, [r3, #0]
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	60fb      	str	r3, [r7, #12]
 800185e:	2001      	movs	r0, #1
 8001860:	f7ff fdec 	bl	800143c <HAL_Delay>
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	68fa      	ldr	r2, [r7, #12]
 800186a:	601a      	str	r2, [r3, #0]
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	699b      	ldr	r3, [r3, #24]
 8001872:	60fb      	str	r3, [r7, #12]
 8001874:	68fa      	ldr	r2, [r7, #12]
 8001876:	f64f 7341 	movw	r3, #65345	@ 0xff41
 800187a:	4013      	ands	r3, r2
 800187c:	60fb      	str	r3, [r7, #12]
 800187e:	683b      	ldr	r3, [r7, #0]
 8001880:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001882:	041b      	lsls	r3, r3, #16
 8001884:	683a      	ldr	r2, [r7, #0]
 8001886:	f892 204c 	ldrb.w	r2, [r2, #76]	@ 0x4c
 800188a:	2a00      	cmp	r2, #0
 800188c:	d101      	bne.n	8001892 <ETH_SetMACConfig+0xee>
 800188e:	2280      	movs	r2, #128	@ 0x80
 8001890:	e000      	b.n	8001894 <ETH_SetMACConfig+0xf0>
 8001892:	2200      	movs	r2, #0
 8001894:	431a      	orrs	r2, r3
 8001896:	683b      	ldr	r3, [r7, #0]
 8001898:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800189a:	4313      	orrs	r3, r2
 800189c:	683a      	ldr	r2, [r7, #0]
 800189e:	f892 2055 	ldrb.w	r2, [r2, #85]	@ 0x55
 80018a2:	2a01      	cmp	r2, #1
 80018a4:	d101      	bne.n	80018aa <ETH_SetMACConfig+0x106>
 80018a6:	2208      	movs	r2, #8
 80018a8:	e000      	b.n	80018ac <ETH_SetMACConfig+0x108>
 80018aa:	2200      	movs	r2, #0
 80018ac:	4313      	orrs	r3, r2
 80018ae:	683a      	ldr	r2, [r7, #0]
 80018b0:	f892 2056 	ldrb.w	r2, [r2, #86]	@ 0x56
 80018b4:	2a01      	cmp	r2, #1
 80018b6:	d101      	bne.n	80018bc <ETH_SetMACConfig+0x118>
 80018b8:	2204      	movs	r2, #4
 80018ba:	e000      	b.n	80018be <ETH_SetMACConfig+0x11a>
 80018bc:	2200      	movs	r2, #0
 80018be:	4313      	orrs	r3, r2
 80018c0:	683a      	ldr	r2, [r7, #0]
 80018c2:	f892 2054 	ldrb.w	r2, [r2, #84]	@ 0x54
 80018c6:	2a01      	cmp	r2, #1
 80018c8:	d101      	bne.n	80018ce <ETH_SetMACConfig+0x12a>
 80018ca:	2202      	movs	r2, #2
 80018cc:	e000      	b.n	80018d0 <ETH_SetMACConfig+0x12c>
 80018ce:	2200      	movs	r2, #0
 80018d0:	4313      	orrs	r3, r2
 80018d2:	68fa      	ldr	r2, [r7, #12]
 80018d4:	4313      	orrs	r3, r2
 80018d6:	60fb      	str	r3, [r7, #12]
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	68fa      	ldr	r2, [r7, #12]
 80018de:	619a      	str	r2, [r3, #24]
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	699b      	ldr	r3, [r3, #24]
 80018e6:	60fb      	str	r3, [r7, #12]
 80018e8:	2001      	movs	r0, #1
 80018ea:	f7ff fda7 	bl	800143c <HAL_Delay>
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	68fa      	ldr	r2, [r7, #12]
 80018f4:	619a      	str	r2, [r3, #24]
 80018f6:	bf00      	nop
 80018f8:	3710      	adds	r7, #16
 80018fa:	46bd      	mov	sp, r7
 80018fc:	bd80      	pop	{r7, pc}
 80018fe:	bf00      	nop
 8001900:	ff20810f 	.word	0xff20810f

08001904 <ETH_SetDMAConfig>:
 8001904:	b580      	push	{r7, lr}
 8001906:	b084      	sub	sp, #16
 8001908:	af00      	add	r7, sp, #0
 800190a:	6078      	str	r0, [r7, #4]
 800190c:	6039      	str	r1, [r7, #0]
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001916:	699b      	ldr	r3, [r3, #24]
 8001918:	60fb      	str	r3, [r7, #12]
 800191a:	68fa      	ldr	r2, [r7, #12]
 800191c:	4b3d      	ldr	r3, [pc, #244]	@ (8001a14 <ETH_SetDMAConfig+0x110>)
 800191e:	4013      	ands	r3, r2
 8001920:	60fb      	str	r3, [r7, #12]
 8001922:	683b      	ldr	r3, [r7, #0]
 8001924:	7b1b      	ldrb	r3, [r3, #12]
 8001926:	2b00      	cmp	r3, #0
 8001928:	d102      	bne.n	8001930 <ETH_SetDMAConfig+0x2c>
 800192a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800192e:	e000      	b.n	8001932 <ETH_SetDMAConfig+0x2e>
 8001930:	2200      	movs	r2, #0
 8001932:	683b      	ldr	r3, [r7, #0]
 8001934:	7b5b      	ldrb	r3, [r3, #13]
 8001936:	065b      	lsls	r3, r3, #25
 8001938:	4313      	orrs	r3, r2
 800193a:	683a      	ldr	r2, [r7, #0]
 800193c:	7f52      	ldrb	r2, [r2, #29]
 800193e:	2a00      	cmp	r2, #0
 8001940:	d102      	bne.n	8001948 <ETH_SetDMAConfig+0x44>
 8001942:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8001946:	e000      	b.n	800194a <ETH_SetDMAConfig+0x46>
 8001948:	2200      	movs	r2, #0
 800194a:	431a      	orrs	r2, r3
 800194c:	683b      	ldr	r3, [r7, #0]
 800194e:	7b9b      	ldrb	r3, [r3, #14]
 8001950:	055b      	lsls	r3, r3, #21
 8001952:	431a      	orrs	r2, r3
 8001954:	683b      	ldr	r3, [r7, #0]
 8001956:	695b      	ldr	r3, [r3, #20]
 8001958:	431a      	orrs	r2, r3
 800195a:	683b      	ldr	r3, [r7, #0]
 800195c:	7f1b      	ldrb	r3, [r3, #28]
 800195e:	01db      	lsls	r3, r3, #7
 8001960:	431a      	orrs	r2, r3
 8001962:	683b      	ldr	r3, [r7, #0]
 8001964:	7f9b      	ldrb	r3, [r3, #30]
 8001966:	019b      	lsls	r3, r3, #6
 8001968:	431a      	orrs	r2, r3
 800196a:	683b      	ldr	r3, [r7, #0]
 800196c:	6a1b      	ldr	r3, [r3, #32]
 800196e:	431a      	orrs	r2, r3
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001976:	009b      	lsls	r3, r3, #2
 8001978:	4313      	orrs	r3, r2
 800197a:	68fa      	ldr	r2, [r7, #12]
 800197c:	4313      	orrs	r3, r2
 800197e:	60fb      	str	r3, [r7, #12]
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001988:	461a      	mov	r2, r3
 800198a:	68fb      	ldr	r3, [r7, #12]
 800198c:	6193      	str	r3, [r2, #24]
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001996:	699b      	ldr	r3, [r3, #24]
 8001998:	60fb      	str	r3, [r7, #12]
 800199a:	2001      	movs	r0, #1
 800199c:	f7ff fd4e 	bl	800143c <HAL_Delay>
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80019a8:	461a      	mov	r2, r3
 80019aa:	68fb      	ldr	r3, [r7, #12]
 80019ac:	6193      	str	r3, [r2, #24]
 80019ae:	683b      	ldr	r3, [r7, #0]
 80019b0:	791b      	ldrb	r3, [r3, #4]
 80019b2:	065a      	lsls	r2, r3, #25
 80019b4:	683b      	ldr	r3, [r7, #0]
 80019b6:	689b      	ldr	r3, [r3, #8]
 80019b8:	431a      	orrs	r2, r3
 80019ba:	683b      	ldr	r3, [r7, #0]
 80019bc:	699b      	ldr	r3, [r3, #24]
 80019be:	431a      	orrs	r2, r3
 80019c0:	683b      	ldr	r3, [r7, #0]
 80019c2:	691b      	ldr	r3, [r3, #16]
 80019c4:	431a      	orrs	r2, r3
 80019c6:	683b      	ldr	r3, [r7, #0]
 80019c8:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80019cc:	01db      	lsls	r3, r3, #7
 80019ce:	431a      	orrs	r2, r3
 80019d0:	683b      	ldr	r3, [r7, #0]
 80019d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80019d4:	009b      	lsls	r3, r3, #2
 80019d6:	431a      	orrs	r2, r3
 80019d8:	683b      	ldr	r3, [r7, #0]
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	4313      	orrs	r3, r2
 80019de:	687a      	ldr	r2, [r7, #4]
 80019e0:	6812      	ldr	r2, [r2, #0]
 80019e2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80019e6:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80019ea:	6013      	str	r3, [r2, #0]
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	60fb      	str	r3, [r7, #12]
 80019f8:	2001      	movs	r0, #1
 80019fa:	f7ff fd1f 	bl	800143c <HAL_Delay>
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001a06:	461a      	mov	r2, r3
 8001a08:	68fb      	ldr	r3, [r7, #12]
 8001a0a:	6013      	str	r3, [r2, #0]
 8001a0c:	bf00      	nop
 8001a0e:	3710      	adds	r7, #16
 8001a10:	46bd      	mov	sp, r7
 8001a12:	bd80      	pop	{r7, pc}
 8001a14:	f8de3f23 	.word	0xf8de3f23

08001a18 <ETH_MACDMAConfig>:
 8001a18:	b580      	push	{r7, lr}
 8001a1a:	b0a6      	sub	sp, #152	@ 0x98
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
 8001a20:	2301      	movs	r3, #1
 8001a22:	f887 3044 	strb.w	r3, [r7, #68]	@ 0x44
 8001a26:	2301      	movs	r3, #1
 8001a28:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
 8001a2c:	2300      	movs	r3, #0
 8001a2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001a30:	2300      	movs	r3, #0
 8001a32:	f887 3053 	strb.w	r3, [r7, #83]	@ 0x53
 8001a36:	2301      	movs	r3, #1
 8001a38:	f887 3052 	strb.w	r3, [r7, #82]	@ 0x52
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
 8001a42:	2301      	movs	r3, #1
 8001a44:	f887 3038 	strb.w	r3, [r7, #56]	@ 0x38
 8001a48:	2300      	movs	r3, #0
 8001a4a:	f887 3054 	strb.w	r3, [r7, #84]	@ 0x54
 8001a4e:	2300      	movs	r3, #0
 8001a50:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8001a54:	2300      	movs	r3, #0
 8001a56:	65bb      	str	r3, [r7, #88]	@ 0x58
 8001a58:	2300      	movs	r3, #0
 8001a5a:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 8001a5e:	2300      	movs	r3, #0
 8001a60:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8001a62:	2300      	movs	r3, #0
 8001a64:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
 8001a68:	2300      	movs	r3, #0
 8001a6a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8001a6e:	2300      	movs	r3, #0
 8001a70:	f887 308a 	strb.w	r3, [r7, #138]	@ 0x8a
 8001a74:	2300      	movs	r3, #0
 8001a76:	f887 3088 	strb.w	r3, [r7, #136]	@ 0x88
 8001a7a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8001a7e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001a80:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8001a84:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001a86:	2300      	movs	r3, #0
 8001a88:	f887 3089 	strb.w	r3, [r7, #137]	@ 0x89
 8001a8c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001a90:	4619      	mov	r1, r3
 8001a92:	6878      	ldr	r0, [r7, #4]
 8001a94:	f7ff fe86 	bl	80017a4 <ETH_SetMACConfig>
 8001a98:	2301      	movs	r3, #1
 8001a9a:	753b      	strb	r3, [r7, #20]
 8001a9c:	2301      	movs	r3, #1
 8001a9e:	757b      	strb	r3, [r7, #21]
 8001aa0:	2301      	movs	r3, #1
 8001aa2:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 8001aa6:	2301      	movs	r3, #1
 8001aa8:	75bb      	strb	r3, [r7, #22]
 8001aaa:	2300      	movs	r3, #0
 8001aac:	61fb      	str	r3, [r7, #28]
 8001aae:	2300      	movs	r3, #0
 8001ab0:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001aba:	2300      	movs	r3, #0
 8001abc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001abe:	2301      	movs	r3, #1
 8001ac0:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
 8001ac4:	2301      	movs	r3, #1
 8001ac6:	733b      	strb	r3, [r7, #12]
 8001ac8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001acc:	613b      	str	r3, [r7, #16]
 8001ace:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001ad2:	623b      	str	r3, [r7, #32]
 8001ad4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001ad8:	61bb      	str	r3, [r7, #24]
 8001ada:	2301      	movs	r3, #1
 8001adc:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
 8001ae0:	2300      	movs	r3, #0
 8001ae2:	633b      	str	r3, [r7, #48]	@ 0x30
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	60bb      	str	r3, [r7, #8]
 8001ae8:	f107 0308 	add.w	r3, r7, #8
 8001aec:	4619      	mov	r1, r3
 8001aee:	6878      	ldr	r0, [r7, #4]
 8001af0:	f7ff ff08 	bl	8001904 <ETH_SetDMAConfig>
 8001af4:	bf00      	nop
 8001af6:	3798      	adds	r7, #152	@ 0x98
 8001af8:	46bd      	mov	sp, r7
 8001afa:	bd80      	pop	{r7, pc}

08001afc <ETH_MACAddressConfig>:
 8001afc:	b480      	push	{r7}
 8001afe:	b087      	sub	sp, #28
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	60f8      	str	r0, [r7, #12]
 8001b04:	60b9      	str	r1, [r7, #8]
 8001b06:	607a      	str	r2, [r7, #4]
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	3305      	adds	r3, #5
 8001b0c:	781b      	ldrb	r3, [r3, #0]
 8001b0e:	021b      	lsls	r3, r3, #8
 8001b10:	687a      	ldr	r2, [r7, #4]
 8001b12:	3204      	adds	r2, #4
 8001b14:	7812      	ldrb	r2, [r2, #0]
 8001b16:	4313      	orrs	r3, r2
 8001b18:	617b      	str	r3, [r7, #20]
 8001b1a:	68ba      	ldr	r2, [r7, #8]
 8001b1c:	4b11      	ldr	r3, [pc, #68]	@ (8001b64 <ETH_MACAddressConfig+0x68>)
 8001b1e:	4413      	add	r3, r2
 8001b20:	461a      	mov	r2, r3
 8001b22:	697b      	ldr	r3, [r7, #20]
 8001b24:	6013      	str	r3, [r2, #0]
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	3303      	adds	r3, #3
 8001b2a:	781b      	ldrb	r3, [r3, #0]
 8001b2c:	061a      	lsls	r2, r3, #24
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	3302      	adds	r3, #2
 8001b32:	781b      	ldrb	r3, [r3, #0]
 8001b34:	041b      	lsls	r3, r3, #16
 8001b36:	431a      	orrs	r2, r3
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	3301      	adds	r3, #1
 8001b3c:	781b      	ldrb	r3, [r3, #0]
 8001b3e:	021b      	lsls	r3, r3, #8
 8001b40:	4313      	orrs	r3, r2
 8001b42:	687a      	ldr	r2, [r7, #4]
 8001b44:	7812      	ldrb	r2, [r2, #0]
 8001b46:	4313      	orrs	r3, r2
 8001b48:	617b      	str	r3, [r7, #20]
 8001b4a:	68ba      	ldr	r2, [r7, #8]
 8001b4c:	4b06      	ldr	r3, [pc, #24]	@ (8001b68 <ETH_MACAddressConfig+0x6c>)
 8001b4e:	4413      	add	r3, r2
 8001b50:	461a      	mov	r2, r3
 8001b52:	697b      	ldr	r3, [r7, #20]
 8001b54:	6013      	str	r3, [r2, #0]
 8001b56:	bf00      	nop
 8001b58:	371c      	adds	r7, #28
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop
 8001b64:	40028040 	.word	0x40028040
 8001b68:	40028044 	.word	0x40028044

08001b6c <ETH_DMATxDescListInit>:
 8001b6c:	b480      	push	{r7}
 8001b6e:	b085      	sub	sp, #20
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	6078      	str	r0, [r7, #4]
 8001b74:	2300      	movs	r3, #0
 8001b76:	60fb      	str	r3, [r7, #12]
 8001b78:	e03e      	b.n	8001bf8 <ETH_DMATxDescListInit+0x8c>
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	68d9      	ldr	r1, [r3, #12]
 8001b7e:	68fa      	ldr	r2, [r7, #12]
 8001b80:	4613      	mov	r3, r2
 8001b82:	009b      	lsls	r3, r3, #2
 8001b84:	4413      	add	r3, r2
 8001b86:	00db      	lsls	r3, r3, #3
 8001b88:	440b      	add	r3, r1
 8001b8a:	60bb      	str	r3, [r7, #8]
 8001b8c:	68bb      	ldr	r3, [r7, #8]
 8001b8e:	2200      	movs	r2, #0
 8001b90:	601a      	str	r2, [r3, #0]
 8001b92:	68bb      	ldr	r3, [r7, #8]
 8001b94:	2200      	movs	r2, #0
 8001b96:	605a      	str	r2, [r3, #4]
 8001b98:	68bb      	ldr	r3, [r7, #8]
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	609a      	str	r2, [r3, #8]
 8001b9e:	68bb      	ldr	r3, [r7, #8]
 8001ba0:	2200      	movs	r2, #0
 8001ba2:	60da      	str	r2, [r3, #12]
 8001ba4:	68b9      	ldr	r1, [r7, #8]
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	68fa      	ldr	r2, [r7, #12]
 8001baa:	3206      	adds	r2, #6
 8001bac:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001bb0:	68bb      	ldr	r3, [r7, #8]
 8001bb2:	681b      	ldr	r3, [r3, #0]
 8001bb4:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8001bb8:	68bb      	ldr	r3, [r7, #8]
 8001bba:	601a      	str	r2, [r3, #0]
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	2b02      	cmp	r3, #2
 8001bc0:	d80c      	bhi.n	8001bdc <ETH_DMATxDescListInit+0x70>
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	68d9      	ldr	r1, [r3, #12]
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	1c5a      	adds	r2, r3, #1
 8001bca:	4613      	mov	r3, r2
 8001bcc:	009b      	lsls	r3, r3, #2
 8001bce:	4413      	add	r3, r2
 8001bd0:	00db      	lsls	r3, r3, #3
 8001bd2:	440b      	add	r3, r1
 8001bd4:	461a      	mov	r2, r3
 8001bd6:	68bb      	ldr	r3, [r7, #8]
 8001bd8:	60da      	str	r2, [r3, #12]
 8001bda:	e004      	b.n	8001be6 <ETH_DMATxDescListInit+0x7a>
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	68db      	ldr	r3, [r3, #12]
 8001be0:	461a      	mov	r2, r3
 8001be2:	68bb      	ldr	r3, [r7, #8]
 8001be4:	60da      	str	r2, [r3, #12]
 8001be6:	68bb      	ldr	r3, [r7, #8]
 8001be8:	681b      	ldr	r3, [r3, #0]
 8001bea:	f443 0240 	orr.w	r2, r3, #12582912	@ 0xc00000
 8001bee:	68bb      	ldr	r3, [r7, #8]
 8001bf0:	601a      	str	r2, [r3, #0]
 8001bf2:	68fb      	ldr	r3, [r7, #12]
 8001bf4:	3301      	adds	r3, #1
 8001bf6:	60fb      	str	r3, [r7, #12]
 8001bf8:	68fb      	ldr	r3, [r7, #12]
 8001bfa:	2b03      	cmp	r3, #3
 8001bfc:	d9bd      	bls.n	8001b7a <ETH_DMATxDescListInit+0xe>
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	2200      	movs	r2, #0
 8001c02:	629a      	str	r2, [r3, #40]	@ 0x28
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	68da      	ldr	r2, [r3, #12]
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001c10:	611a      	str	r2, [r3, #16]
 8001c12:	bf00      	nop
 8001c14:	3714      	adds	r7, #20
 8001c16:	46bd      	mov	sp, r7
 8001c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1c:	4770      	bx	lr

08001c1e <ETH_DMARxDescListInit>:
 8001c1e:	b480      	push	{r7}
 8001c20:	b085      	sub	sp, #20
 8001c22:	af00      	add	r7, sp, #0
 8001c24:	6078      	str	r0, [r7, #4]
 8001c26:	2300      	movs	r3, #0
 8001c28:	60fb      	str	r3, [r7, #12]
 8001c2a:	e046      	b.n	8001cba <ETH_DMARxDescListInit+0x9c>
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	6919      	ldr	r1, [r3, #16]
 8001c30:	68fa      	ldr	r2, [r7, #12]
 8001c32:	4613      	mov	r3, r2
 8001c34:	009b      	lsls	r3, r3, #2
 8001c36:	4413      	add	r3, r2
 8001c38:	00db      	lsls	r3, r3, #3
 8001c3a:	440b      	add	r3, r1
 8001c3c:	60bb      	str	r3, [r7, #8]
 8001c3e:	68bb      	ldr	r3, [r7, #8]
 8001c40:	2200      	movs	r2, #0
 8001c42:	601a      	str	r2, [r3, #0]
 8001c44:	68bb      	ldr	r3, [r7, #8]
 8001c46:	2200      	movs	r2, #0
 8001c48:	605a      	str	r2, [r3, #4]
 8001c4a:	68bb      	ldr	r3, [r7, #8]
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	609a      	str	r2, [r3, #8]
 8001c50:	68bb      	ldr	r3, [r7, #8]
 8001c52:	2200      	movs	r2, #0
 8001c54:	60da      	str	r2, [r3, #12]
 8001c56:	68bb      	ldr	r3, [r7, #8]
 8001c58:	2200      	movs	r2, #0
 8001c5a:	621a      	str	r2, [r3, #32]
 8001c5c:	68bb      	ldr	r3, [r7, #8]
 8001c5e:	2200      	movs	r2, #0
 8001c60:	625a      	str	r2, [r3, #36]	@ 0x24
 8001c62:	68bb      	ldr	r3, [r7, #8]
 8001c64:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8001c68:	601a      	str	r2, [r3, #0]
 8001c6a:	68bb      	ldr	r3, [r7, #8]
 8001c6c:	f244 52f4 	movw	r2, #17908	@ 0x45f4
 8001c70:	605a      	str	r2, [r3, #4]
 8001c72:	68bb      	ldr	r3, [r7, #8]
 8001c74:	685b      	ldr	r3, [r3, #4]
 8001c76:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8001c7a:	68bb      	ldr	r3, [r7, #8]
 8001c7c:	605a      	str	r2, [r3, #4]
 8001c7e:	68b9      	ldr	r1, [r7, #8]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	68fa      	ldr	r2, [r7, #12]
 8001c84:	3212      	adds	r2, #18
 8001c86:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c8a:	68fb      	ldr	r3, [r7, #12]
 8001c8c:	2b02      	cmp	r3, #2
 8001c8e:	d80c      	bhi.n	8001caa <ETH_DMARxDescListInit+0x8c>
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	6919      	ldr	r1, [r3, #16]
 8001c94:	68fb      	ldr	r3, [r7, #12]
 8001c96:	1c5a      	adds	r2, r3, #1
 8001c98:	4613      	mov	r3, r2
 8001c9a:	009b      	lsls	r3, r3, #2
 8001c9c:	4413      	add	r3, r2
 8001c9e:	00db      	lsls	r3, r3, #3
 8001ca0:	440b      	add	r3, r1
 8001ca2:	461a      	mov	r2, r3
 8001ca4:	68bb      	ldr	r3, [r7, #8]
 8001ca6:	60da      	str	r2, [r3, #12]
 8001ca8:	e004      	b.n	8001cb4 <ETH_DMARxDescListInit+0x96>
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	691b      	ldr	r3, [r3, #16]
 8001cae:	461a      	mov	r2, r3
 8001cb0:	68bb      	ldr	r3, [r7, #8]
 8001cb2:	60da      	str	r2, [r3, #12]
 8001cb4:	68fb      	ldr	r3, [r7, #12]
 8001cb6:	3301      	adds	r3, #1
 8001cb8:	60fb      	str	r3, [r7, #12]
 8001cba:	68fb      	ldr	r3, [r7, #12]
 8001cbc:	2b03      	cmp	r3, #3
 8001cbe:	d9b5      	bls.n	8001c2c <ETH_DMARxDescListInit+0xe>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	2200      	movs	r2, #0
 8001cca:	661a      	str	r2, [r3, #96]	@ 0x60
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	2200      	movs	r2, #0
 8001cd0:	669a      	str	r2, [r3, #104]	@ 0x68
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	2200      	movs	r2, #0
 8001cd6:	66da      	str	r2, [r3, #108]	@ 0x6c
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	2200      	movs	r2, #0
 8001cdc:	659a      	str	r2, [r3, #88]	@ 0x58
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	691a      	ldr	r2, [r3, #16]
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8001cea:	60da      	str	r2, [r3, #12]
 8001cec:	bf00      	nop
 8001cee:	3714      	adds	r7, #20
 8001cf0:	46bd      	mov	sp, r7
 8001cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cf6:	4770      	bx	lr

08001cf8 <HAL_GPIO_Init>:
 8001cf8:	b480      	push	{r7}
 8001cfa:	b089      	sub	sp, #36	@ 0x24
 8001cfc:	af00      	add	r7, sp, #0
 8001cfe:	6078      	str	r0, [r7, #4]
 8001d00:	6039      	str	r1, [r7, #0]
 8001d02:	2300      	movs	r3, #0
 8001d04:	617b      	str	r3, [r7, #20]
 8001d06:	2300      	movs	r3, #0
 8001d08:	613b      	str	r3, [r7, #16]
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	61bb      	str	r3, [r7, #24]
 8001d0e:	2300      	movs	r3, #0
 8001d10:	61fb      	str	r3, [r7, #28]
 8001d12:	e177      	b.n	8002004 <HAL_GPIO_Init+0x30c>
 8001d14:	2201      	movs	r2, #1
 8001d16:	69fb      	ldr	r3, [r7, #28]
 8001d18:	fa02 f303 	lsl.w	r3, r2, r3
 8001d1c:	617b      	str	r3, [r7, #20]
 8001d1e:	683b      	ldr	r3, [r7, #0]
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	697a      	ldr	r2, [r7, #20]
 8001d24:	4013      	ands	r3, r2
 8001d26:	613b      	str	r3, [r7, #16]
 8001d28:	693a      	ldr	r2, [r7, #16]
 8001d2a:	697b      	ldr	r3, [r7, #20]
 8001d2c:	429a      	cmp	r2, r3
 8001d2e:	f040 8166 	bne.w	8001ffe <HAL_GPIO_Init+0x306>
 8001d32:	683b      	ldr	r3, [r7, #0]
 8001d34:	685b      	ldr	r3, [r3, #4]
 8001d36:	f003 0303 	and.w	r3, r3, #3
 8001d3a:	2b01      	cmp	r3, #1
 8001d3c:	d005      	beq.n	8001d4a <HAL_GPIO_Init+0x52>
 8001d3e:	683b      	ldr	r3, [r7, #0]
 8001d40:	685b      	ldr	r3, [r3, #4]
 8001d42:	f003 0303 	and.w	r3, r3, #3
 8001d46:	2b02      	cmp	r3, #2
 8001d48:	d130      	bne.n	8001dac <HAL_GPIO_Init+0xb4>
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	689b      	ldr	r3, [r3, #8]
 8001d4e:	61bb      	str	r3, [r7, #24]
 8001d50:	69fb      	ldr	r3, [r7, #28]
 8001d52:	005b      	lsls	r3, r3, #1
 8001d54:	2203      	movs	r2, #3
 8001d56:	fa02 f303 	lsl.w	r3, r2, r3
 8001d5a:	43db      	mvns	r3, r3
 8001d5c:	69ba      	ldr	r2, [r7, #24]
 8001d5e:	4013      	ands	r3, r2
 8001d60:	61bb      	str	r3, [r7, #24]
 8001d62:	683b      	ldr	r3, [r7, #0]
 8001d64:	68da      	ldr	r2, [r3, #12]
 8001d66:	69fb      	ldr	r3, [r7, #28]
 8001d68:	005b      	lsls	r3, r3, #1
 8001d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d6e:	69ba      	ldr	r2, [r7, #24]
 8001d70:	4313      	orrs	r3, r2
 8001d72:	61bb      	str	r3, [r7, #24]
 8001d74:	687b      	ldr	r3, [r7, #4]
 8001d76:	69ba      	ldr	r2, [r7, #24]
 8001d78:	609a      	str	r2, [r3, #8]
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	685b      	ldr	r3, [r3, #4]
 8001d7e:	61bb      	str	r3, [r7, #24]
 8001d80:	2201      	movs	r2, #1
 8001d82:	69fb      	ldr	r3, [r7, #28]
 8001d84:	fa02 f303 	lsl.w	r3, r2, r3
 8001d88:	43db      	mvns	r3, r3
 8001d8a:	69ba      	ldr	r2, [r7, #24]
 8001d8c:	4013      	ands	r3, r2
 8001d8e:	61bb      	str	r3, [r7, #24]
 8001d90:	683b      	ldr	r3, [r7, #0]
 8001d92:	685b      	ldr	r3, [r3, #4]
 8001d94:	091b      	lsrs	r3, r3, #4
 8001d96:	f003 0201 	and.w	r2, r3, #1
 8001d9a:	69fb      	ldr	r3, [r7, #28]
 8001d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8001da0:	69ba      	ldr	r2, [r7, #24]
 8001da2:	4313      	orrs	r3, r2
 8001da4:	61bb      	str	r3, [r7, #24]
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	69ba      	ldr	r2, [r7, #24]
 8001daa:	605a      	str	r2, [r3, #4]
 8001dac:	683b      	ldr	r3, [r7, #0]
 8001dae:	685b      	ldr	r3, [r3, #4]
 8001db0:	f003 0303 	and.w	r3, r3, #3
 8001db4:	2b03      	cmp	r3, #3
 8001db6:	d017      	beq.n	8001de8 <HAL_GPIO_Init+0xf0>
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	68db      	ldr	r3, [r3, #12]
 8001dbc:	61bb      	str	r3, [r7, #24]
 8001dbe:	69fb      	ldr	r3, [r7, #28]
 8001dc0:	005b      	lsls	r3, r3, #1
 8001dc2:	2203      	movs	r2, #3
 8001dc4:	fa02 f303 	lsl.w	r3, r2, r3
 8001dc8:	43db      	mvns	r3, r3
 8001dca:	69ba      	ldr	r2, [r7, #24]
 8001dcc:	4013      	ands	r3, r2
 8001dce:	61bb      	str	r3, [r7, #24]
 8001dd0:	683b      	ldr	r3, [r7, #0]
 8001dd2:	689a      	ldr	r2, [r3, #8]
 8001dd4:	69fb      	ldr	r3, [r7, #28]
 8001dd6:	005b      	lsls	r3, r3, #1
 8001dd8:	fa02 f303 	lsl.w	r3, r2, r3
 8001ddc:	69ba      	ldr	r2, [r7, #24]
 8001dde:	4313      	orrs	r3, r2
 8001de0:	61bb      	str	r3, [r7, #24]
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	69ba      	ldr	r2, [r7, #24]
 8001de6:	60da      	str	r2, [r3, #12]
 8001de8:	683b      	ldr	r3, [r7, #0]
 8001dea:	685b      	ldr	r3, [r3, #4]
 8001dec:	f003 0303 	and.w	r3, r3, #3
 8001df0:	2b02      	cmp	r3, #2
 8001df2:	d123      	bne.n	8001e3c <HAL_GPIO_Init+0x144>
 8001df4:	69fb      	ldr	r3, [r7, #28]
 8001df6:	08da      	lsrs	r2, r3, #3
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	3208      	adds	r2, #8
 8001dfc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e00:	61bb      	str	r3, [r7, #24]
 8001e02:	69fb      	ldr	r3, [r7, #28]
 8001e04:	f003 0307 	and.w	r3, r3, #7
 8001e08:	009b      	lsls	r3, r3, #2
 8001e0a:	220f      	movs	r2, #15
 8001e0c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e10:	43db      	mvns	r3, r3
 8001e12:	69ba      	ldr	r2, [r7, #24]
 8001e14:	4013      	ands	r3, r2
 8001e16:	61bb      	str	r3, [r7, #24]
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	691a      	ldr	r2, [r3, #16]
 8001e1c:	69fb      	ldr	r3, [r7, #28]
 8001e1e:	f003 0307 	and.w	r3, r3, #7
 8001e22:	009b      	lsls	r3, r3, #2
 8001e24:	fa02 f303 	lsl.w	r3, r2, r3
 8001e28:	69ba      	ldr	r2, [r7, #24]
 8001e2a:	4313      	orrs	r3, r2
 8001e2c:	61bb      	str	r3, [r7, #24]
 8001e2e:	69fb      	ldr	r3, [r7, #28]
 8001e30:	08da      	lsrs	r2, r3, #3
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	3208      	adds	r2, #8
 8001e36:	69b9      	ldr	r1, [r7, #24]
 8001e38:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	61bb      	str	r3, [r7, #24]
 8001e42:	69fb      	ldr	r3, [r7, #28]
 8001e44:	005b      	lsls	r3, r3, #1
 8001e46:	2203      	movs	r2, #3
 8001e48:	fa02 f303 	lsl.w	r3, r2, r3
 8001e4c:	43db      	mvns	r3, r3
 8001e4e:	69ba      	ldr	r2, [r7, #24]
 8001e50:	4013      	ands	r3, r2
 8001e52:	61bb      	str	r3, [r7, #24]
 8001e54:	683b      	ldr	r3, [r7, #0]
 8001e56:	685b      	ldr	r3, [r3, #4]
 8001e58:	f003 0203 	and.w	r2, r3, #3
 8001e5c:	69fb      	ldr	r3, [r7, #28]
 8001e5e:	005b      	lsls	r3, r3, #1
 8001e60:	fa02 f303 	lsl.w	r3, r2, r3
 8001e64:	69ba      	ldr	r2, [r7, #24]
 8001e66:	4313      	orrs	r3, r2
 8001e68:	61bb      	str	r3, [r7, #24]
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	69ba      	ldr	r2, [r7, #24]
 8001e6e:	601a      	str	r2, [r3, #0]
 8001e70:	683b      	ldr	r3, [r7, #0]
 8001e72:	685b      	ldr	r3, [r3, #4]
 8001e74:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001e78:	2b00      	cmp	r3, #0
 8001e7a:	f000 80c0 	beq.w	8001ffe <HAL_GPIO_Init+0x306>
 8001e7e:	2300      	movs	r3, #0
 8001e80:	60fb      	str	r3, [r7, #12]
 8001e82:	4b66      	ldr	r3, [pc, #408]	@ (800201c <HAL_GPIO_Init+0x324>)
 8001e84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e86:	4a65      	ldr	r2, [pc, #404]	@ (800201c <HAL_GPIO_Init+0x324>)
 8001e88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e8c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001e8e:	4b63      	ldr	r3, [pc, #396]	@ (800201c <HAL_GPIO_Init+0x324>)
 8001e90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e92:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e96:	60fb      	str	r3, [r7, #12]
 8001e98:	68fb      	ldr	r3, [r7, #12]
 8001e9a:	4a61      	ldr	r2, [pc, #388]	@ (8002020 <HAL_GPIO_Init+0x328>)
 8001e9c:	69fb      	ldr	r3, [r7, #28]
 8001e9e:	089b      	lsrs	r3, r3, #2
 8001ea0:	3302      	adds	r3, #2
 8001ea2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ea6:	61bb      	str	r3, [r7, #24]
 8001ea8:	69fb      	ldr	r3, [r7, #28]
 8001eaa:	f003 0303 	and.w	r3, r3, #3
 8001eae:	009b      	lsls	r3, r3, #2
 8001eb0:	220f      	movs	r2, #15
 8001eb2:	fa02 f303 	lsl.w	r3, r2, r3
 8001eb6:	43db      	mvns	r3, r3
 8001eb8:	69ba      	ldr	r2, [r7, #24]
 8001eba:	4013      	ands	r3, r2
 8001ebc:	61bb      	str	r3, [r7, #24]
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	4a58      	ldr	r2, [pc, #352]	@ (8002024 <HAL_GPIO_Init+0x32c>)
 8001ec2:	4293      	cmp	r3, r2
 8001ec4:	d037      	beq.n	8001f36 <HAL_GPIO_Init+0x23e>
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	4a57      	ldr	r2, [pc, #348]	@ (8002028 <HAL_GPIO_Init+0x330>)
 8001eca:	4293      	cmp	r3, r2
 8001ecc:	d031      	beq.n	8001f32 <HAL_GPIO_Init+0x23a>
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	4a56      	ldr	r2, [pc, #344]	@ (800202c <HAL_GPIO_Init+0x334>)
 8001ed2:	4293      	cmp	r3, r2
 8001ed4:	d02b      	beq.n	8001f2e <HAL_GPIO_Init+0x236>
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	4a55      	ldr	r2, [pc, #340]	@ (8002030 <HAL_GPIO_Init+0x338>)
 8001eda:	4293      	cmp	r3, r2
 8001edc:	d025      	beq.n	8001f2a <HAL_GPIO_Init+0x232>
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	4a54      	ldr	r2, [pc, #336]	@ (8002034 <HAL_GPIO_Init+0x33c>)
 8001ee2:	4293      	cmp	r3, r2
 8001ee4:	d01f      	beq.n	8001f26 <HAL_GPIO_Init+0x22e>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	4a53      	ldr	r2, [pc, #332]	@ (8002038 <HAL_GPIO_Init+0x340>)
 8001eea:	4293      	cmp	r3, r2
 8001eec:	d019      	beq.n	8001f22 <HAL_GPIO_Init+0x22a>
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	4a52      	ldr	r2, [pc, #328]	@ (800203c <HAL_GPIO_Init+0x344>)
 8001ef2:	4293      	cmp	r3, r2
 8001ef4:	d013      	beq.n	8001f1e <HAL_GPIO_Init+0x226>
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	4a51      	ldr	r2, [pc, #324]	@ (8002040 <HAL_GPIO_Init+0x348>)
 8001efa:	4293      	cmp	r3, r2
 8001efc:	d00d      	beq.n	8001f1a <HAL_GPIO_Init+0x222>
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	4a50      	ldr	r2, [pc, #320]	@ (8002044 <HAL_GPIO_Init+0x34c>)
 8001f02:	4293      	cmp	r3, r2
 8001f04:	d007      	beq.n	8001f16 <HAL_GPIO_Init+0x21e>
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	4a4f      	ldr	r2, [pc, #316]	@ (8002048 <HAL_GPIO_Init+0x350>)
 8001f0a:	4293      	cmp	r3, r2
 8001f0c:	d101      	bne.n	8001f12 <HAL_GPIO_Init+0x21a>
 8001f0e:	2309      	movs	r3, #9
 8001f10:	e012      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f12:	230a      	movs	r3, #10
 8001f14:	e010      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f16:	2308      	movs	r3, #8
 8001f18:	e00e      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f1a:	2307      	movs	r3, #7
 8001f1c:	e00c      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f1e:	2306      	movs	r3, #6
 8001f20:	e00a      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f22:	2305      	movs	r3, #5
 8001f24:	e008      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f26:	2304      	movs	r3, #4
 8001f28:	e006      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f2a:	2303      	movs	r3, #3
 8001f2c:	e004      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f2e:	2302      	movs	r3, #2
 8001f30:	e002      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f32:	2301      	movs	r3, #1
 8001f34:	e000      	b.n	8001f38 <HAL_GPIO_Init+0x240>
 8001f36:	2300      	movs	r3, #0
 8001f38:	69fa      	ldr	r2, [r7, #28]
 8001f3a:	f002 0203 	and.w	r2, r2, #3
 8001f3e:	0092      	lsls	r2, r2, #2
 8001f40:	4093      	lsls	r3, r2
 8001f42:	69ba      	ldr	r2, [r7, #24]
 8001f44:	4313      	orrs	r3, r2
 8001f46:	61bb      	str	r3, [r7, #24]
 8001f48:	4935      	ldr	r1, [pc, #212]	@ (8002020 <HAL_GPIO_Init+0x328>)
 8001f4a:	69fb      	ldr	r3, [r7, #28]
 8001f4c:	089b      	lsrs	r3, r3, #2
 8001f4e:	3302      	adds	r3, #2
 8001f50:	69ba      	ldr	r2, [r7, #24]
 8001f52:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001f56:	4b3d      	ldr	r3, [pc, #244]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001f58:	689b      	ldr	r3, [r3, #8]
 8001f5a:	61bb      	str	r3, [r7, #24]
 8001f5c:	693b      	ldr	r3, [r7, #16]
 8001f5e:	43db      	mvns	r3, r3
 8001f60:	69ba      	ldr	r2, [r7, #24]
 8001f62:	4013      	ands	r3, r2
 8001f64:	61bb      	str	r3, [r7, #24]
 8001f66:	683b      	ldr	r3, [r7, #0]
 8001f68:	685b      	ldr	r3, [r3, #4]
 8001f6a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d003      	beq.n	8001f7a <HAL_GPIO_Init+0x282>
 8001f72:	69ba      	ldr	r2, [r7, #24]
 8001f74:	693b      	ldr	r3, [r7, #16]
 8001f76:	4313      	orrs	r3, r2
 8001f78:	61bb      	str	r3, [r7, #24]
 8001f7a:	4a34      	ldr	r2, [pc, #208]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001f7c:	69bb      	ldr	r3, [r7, #24]
 8001f7e:	6093      	str	r3, [r2, #8]
 8001f80:	4b32      	ldr	r3, [pc, #200]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001f82:	68db      	ldr	r3, [r3, #12]
 8001f84:	61bb      	str	r3, [r7, #24]
 8001f86:	693b      	ldr	r3, [r7, #16]
 8001f88:	43db      	mvns	r3, r3
 8001f8a:	69ba      	ldr	r2, [r7, #24]
 8001f8c:	4013      	ands	r3, r2
 8001f8e:	61bb      	str	r3, [r7, #24]
 8001f90:	683b      	ldr	r3, [r7, #0]
 8001f92:	685b      	ldr	r3, [r3, #4]
 8001f94:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d003      	beq.n	8001fa4 <HAL_GPIO_Init+0x2ac>
 8001f9c:	69ba      	ldr	r2, [r7, #24]
 8001f9e:	693b      	ldr	r3, [r7, #16]
 8001fa0:	4313      	orrs	r3, r2
 8001fa2:	61bb      	str	r3, [r7, #24]
 8001fa4:	4a29      	ldr	r2, [pc, #164]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001fa6:	69bb      	ldr	r3, [r7, #24]
 8001fa8:	60d3      	str	r3, [r2, #12]
 8001faa:	4b28      	ldr	r3, [pc, #160]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001fac:	685b      	ldr	r3, [r3, #4]
 8001fae:	61bb      	str	r3, [r7, #24]
 8001fb0:	693b      	ldr	r3, [r7, #16]
 8001fb2:	43db      	mvns	r3, r3
 8001fb4:	69ba      	ldr	r2, [r7, #24]
 8001fb6:	4013      	ands	r3, r2
 8001fb8:	61bb      	str	r3, [r7, #24]
 8001fba:	683b      	ldr	r3, [r7, #0]
 8001fbc:	685b      	ldr	r3, [r3, #4]
 8001fbe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d003      	beq.n	8001fce <HAL_GPIO_Init+0x2d6>
 8001fc6:	69ba      	ldr	r2, [r7, #24]
 8001fc8:	693b      	ldr	r3, [r7, #16]
 8001fca:	4313      	orrs	r3, r2
 8001fcc:	61bb      	str	r3, [r7, #24]
 8001fce:	4a1f      	ldr	r2, [pc, #124]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001fd0:	69bb      	ldr	r3, [r7, #24]
 8001fd2:	6053      	str	r3, [r2, #4]
 8001fd4:	4b1d      	ldr	r3, [pc, #116]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	61bb      	str	r3, [r7, #24]
 8001fda:	693b      	ldr	r3, [r7, #16]
 8001fdc:	43db      	mvns	r3, r3
 8001fde:	69ba      	ldr	r2, [r7, #24]
 8001fe0:	4013      	ands	r3, r2
 8001fe2:	61bb      	str	r3, [r7, #24]
 8001fe4:	683b      	ldr	r3, [r7, #0]
 8001fe6:	685b      	ldr	r3, [r3, #4]
 8001fe8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001fec:	2b00      	cmp	r3, #0
 8001fee:	d003      	beq.n	8001ff8 <HAL_GPIO_Init+0x300>
 8001ff0:	69ba      	ldr	r2, [r7, #24]
 8001ff2:	693b      	ldr	r3, [r7, #16]
 8001ff4:	4313      	orrs	r3, r2
 8001ff6:	61bb      	str	r3, [r7, #24]
 8001ff8:	4a14      	ldr	r2, [pc, #80]	@ (800204c <HAL_GPIO_Init+0x354>)
 8001ffa:	69bb      	ldr	r3, [r7, #24]
 8001ffc:	6013      	str	r3, [r2, #0]
 8001ffe:	69fb      	ldr	r3, [r7, #28]
 8002000:	3301      	adds	r3, #1
 8002002:	61fb      	str	r3, [r7, #28]
 8002004:	69fb      	ldr	r3, [r7, #28]
 8002006:	2b0f      	cmp	r3, #15
 8002008:	f67f ae84 	bls.w	8001d14 <HAL_GPIO_Init+0x1c>
 800200c:	bf00      	nop
 800200e:	bf00      	nop
 8002010:	3724      	adds	r7, #36	@ 0x24
 8002012:	46bd      	mov	sp, r7
 8002014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop
 800201c:	40023800 	.word	0x40023800
 8002020:	40013800 	.word	0x40013800
 8002024:	40020000 	.word	0x40020000
 8002028:	40020400 	.word	0x40020400
 800202c:	40020800 	.word	0x40020800
 8002030:	40020c00 	.word	0x40020c00
 8002034:	40021000 	.word	0x40021000
 8002038:	40021400 	.word	0x40021400
 800203c:	40021800 	.word	0x40021800
 8002040:	40021c00 	.word	0x40021c00
 8002044:	40022000 	.word	0x40022000
 8002048:	40022400 	.word	0x40022400
 800204c:	40013c00 	.word	0x40013c00

08002050 <HAL_GPIO_ReadPin>:
 8002050:	b480      	push	{r7}
 8002052:	b085      	sub	sp, #20
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	460b      	mov	r3, r1
 800205a:	807b      	strh	r3, [r7, #2]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	691a      	ldr	r2, [r3, #16]
 8002060:	887b      	ldrh	r3, [r7, #2]
 8002062:	4013      	ands	r3, r2
 8002064:	2b00      	cmp	r3, #0
 8002066:	d002      	beq.n	800206e <HAL_GPIO_ReadPin+0x1e>
 8002068:	2301      	movs	r3, #1
 800206a:	73fb      	strb	r3, [r7, #15]
 800206c:	e001      	b.n	8002072 <HAL_GPIO_ReadPin+0x22>
 800206e:	2300      	movs	r3, #0
 8002070:	73fb      	strb	r3, [r7, #15]
 8002072:	7bfb      	ldrb	r3, [r7, #15]
 8002074:	4618      	mov	r0, r3
 8002076:	3714      	adds	r7, #20
 8002078:	46bd      	mov	sp, r7
 800207a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800207e:	4770      	bx	lr

08002080 <HAL_GPIO_WritePin>:
 8002080:	b480      	push	{r7}
 8002082:	b083      	sub	sp, #12
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
 8002088:	460b      	mov	r3, r1
 800208a:	807b      	strh	r3, [r7, #2]
 800208c:	4613      	mov	r3, r2
 800208e:	707b      	strb	r3, [r7, #1]
 8002090:	787b      	ldrb	r3, [r7, #1]
 8002092:	2b00      	cmp	r3, #0
 8002094:	d003      	beq.n	800209e <HAL_GPIO_WritePin+0x1e>
 8002096:	887a      	ldrh	r2, [r7, #2]
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	619a      	str	r2, [r3, #24]
 800209c:	e003      	b.n	80020a6 <HAL_GPIO_WritePin+0x26>
 800209e:	887b      	ldrh	r3, [r7, #2]
 80020a0:	041a      	lsls	r2, r3, #16
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	619a      	str	r2, [r3, #24]
 80020a6:	bf00      	nop
 80020a8:	370c      	adds	r7, #12
 80020aa:	46bd      	mov	sp, r7
 80020ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b0:	4770      	bx	lr
	...

080020b4 <HAL_GPIO_EXTI_IRQHandler>:
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b082      	sub	sp, #8
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	80fb      	strh	r3, [r7, #6]
 80020be:	4b08      	ldr	r3, [pc, #32]	@ (80020e0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80020c0:	695a      	ldr	r2, [r3, #20]
 80020c2:	88fb      	ldrh	r3, [r7, #6]
 80020c4:	4013      	ands	r3, r2
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d006      	beq.n	80020d8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80020ca:	4a05      	ldr	r2, [pc, #20]	@ (80020e0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80020cc:	88fb      	ldrh	r3, [r7, #6]
 80020ce:	6153      	str	r3, [r2, #20]
 80020d0:	88fb      	ldrh	r3, [r7, #6]
 80020d2:	4618      	mov	r0, r3
 80020d4:	f7fe fbac 	bl	8000830 <HAL_GPIO_EXTI_Callback>
 80020d8:	bf00      	nop
 80020da:	3708      	adds	r7, #8
 80020dc:	46bd      	mov	sp, r7
 80020de:	bd80      	pop	{r7, pc}
 80020e0:	40013c00 	.word	0x40013c00

080020e4 <HAL_PCD_Init>:
 80020e4:	b580      	push	{r7, lr}
 80020e6:	b086      	sub	sp, #24
 80020e8:	af02      	add	r7, sp, #8
 80020ea:	6078      	str	r0, [r7, #4]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d101      	bne.n	80020f6 <HAL_PCD_Init+0x12>
 80020f2:	2301      	movs	r3, #1
 80020f4:	e101      	b.n	80022fa <HAL_PCD_Init+0x216>
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	60bb      	str	r3, [r7, #8]
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 8002102:	b2db      	uxtb	r3, r3
 8002104:	2b00      	cmp	r3, #0
 8002106:	d106      	bne.n	8002116 <HAL_PCD_Init+0x32>
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	2200      	movs	r2, #0
 800210c:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8002110:	6878      	ldr	r0, [r7, #4]
 8002112:	f7fe ff9b 	bl	800104c <HAL_PCD_MspInit>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	2203      	movs	r2, #3
 800211a:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 800211e:	68bb      	ldr	r3, [r7, #8]
 8002120:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8002124:	d102      	bne.n	800212c <HAL_PCD_Init+0x48>
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	2200      	movs	r2, #0
 800212a:	719a      	strb	r2, [r3, #6]
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	4618      	mov	r0, r3
 8002132:	f001 fa4d 	bl	80035d0 <USB_DisableGlobalInt>
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	6818      	ldr	r0, [r3, #0]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	7c1a      	ldrb	r2, [r3, #16]
 800213e:	f88d 2000 	strb.w	r2, [sp]
 8002142:	3304      	adds	r3, #4
 8002144:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002146:	f001 f9df 	bl	8003508 <USB_CoreInit>
 800214a:	4603      	mov	r3, r0
 800214c:	2b00      	cmp	r3, #0
 800214e:	d005      	beq.n	800215c <HAL_PCD_Init+0x78>
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2202      	movs	r2, #2
 8002154:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8002158:	2301      	movs	r3, #1
 800215a:	e0ce      	b.n	80022fa <HAL_PCD_Init+0x216>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	2100      	movs	r1, #0
 8002162:	4618      	mov	r0, r3
 8002164:	f001 fa45 	bl	80035f2 <USB_SetCurrentMode>
 8002168:	4603      	mov	r3, r0
 800216a:	2b00      	cmp	r3, #0
 800216c:	d005      	beq.n	800217a <HAL_PCD_Init+0x96>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2202      	movs	r2, #2
 8002172:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8002176:	2301      	movs	r3, #1
 8002178:	e0bf      	b.n	80022fa <HAL_PCD_Init+0x216>
 800217a:	2300      	movs	r3, #0
 800217c:	73fb      	strb	r3, [r7, #15]
 800217e:	e04a      	b.n	8002216 <HAL_PCD_Init+0x132>
 8002180:	7bfa      	ldrb	r2, [r7, #15]
 8002182:	6879      	ldr	r1, [r7, #4]
 8002184:	4613      	mov	r3, r2
 8002186:	00db      	lsls	r3, r3, #3
 8002188:	4413      	add	r3, r2
 800218a:	009b      	lsls	r3, r3, #2
 800218c:	440b      	add	r3, r1
 800218e:	3315      	adds	r3, #21
 8002190:	2201      	movs	r2, #1
 8002192:	701a      	strb	r2, [r3, #0]
 8002194:	7bfa      	ldrb	r2, [r7, #15]
 8002196:	6879      	ldr	r1, [r7, #4]
 8002198:	4613      	mov	r3, r2
 800219a:	00db      	lsls	r3, r3, #3
 800219c:	4413      	add	r3, r2
 800219e:	009b      	lsls	r3, r3, #2
 80021a0:	440b      	add	r3, r1
 80021a2:	3314      	adds	r3, #20
 80021a4:	7bfa      	ldrb	r2, [r7, #15]
 80021a6:	701a      	strb	r2, [r3, #0]
 80021a8:	7bfa      	ldrb	r2, [r7, #15]
 80021aa:	7bfb      	ldrb	r3, [r7, #15]
 80021ac:	b298      	uxth	r0, r3
 80021ae:	6879      	ldr	r1, [r7, #4]
 80021b0:	4613      	mov	r3, r2
 80021b2:	00db      	lsls	r3, r3, #3
 80021b4:	4413      	add	r3, r2
 80021b6:	009b      	lsls	r3, r3, #2
 80021b8:	440b      	add	r3, r1
 80021ba:	332e      	adds	r3, #46	@ 0x2e
 80021bc:	4602      	mov	r2, r0
 80021be:	801a      	strh	r2, [r3, #0]
 80021c0:	7bfa      	ldrb	r2, [r7, #15]
 80021c2:	6879      	ldr	r1, [r7, #4]
 80021c4:	4613      	mov	r3, r2
 80021c6:	00db      	lsls	r3, r3, #3
 80021c8:	4413      	add	r3, r2
 80021ca:	009b      	lsls	r3, r3, #2
 80021cc:	440b      	add	r3, r1
 80021ce:	3318      	adds	r3, #24
 80021d0:	2200      	movs	r2, #0
 80021d2:	701a      	strb	r2, [r3, #0]
 80021d4:	7bfa      	ldrb	r2, [r7, #15]
 80021d6:	6879      	ldr	r1, [r7, #4]
 80021d8:	4613      	mov	r3, r2
 80021da:	00db      	lsls	r3, r3, #3
 80021dc:	4413      	add	r3, r2
 80021de:	009b      	lsls	r3, r3, #2
 80021e0:	440b      	add	r3, r1
 80021e2:	331c      	adds	r3, #28
 80021e4:	2200      	movs	r2, #0
 80021e6:	601a      	str	r2, [r3, #0]
 80021e8:	7bfa      	ldrb	r2, [r7, #15]
 80021ea:	6879      	ldr	r1, [r7, #4]
 80021ec:	4613      	mov	r3, r2
 80021ee:	00db      	lsls	r3, r3, #3
 80021f0:	4413      	add	r3, r2
 80021f2:	009b      	lsls	r3, r3, #2
 80021f4:	440b      	add	r3, r1
 80021f6:	3320      	adds	r3, #32
 80021f8:	2200      	movs	r2, #0
 80021fa:	601a      	str	r2, [r3, #0]
 80021fc:	7bfa      	ldrb	r2, [r7, #15]
 80021fe:	6879      	ldr	r1, [r7, #4]
 8002200:	4613      	mov	r3, r2
 8002202:	00db      	lsls	r3, r3, #3
 8002204:	4413      	add	r3, r2
 8002206:	009b      	lsls	r3, r3, #2
 8002208:	440b      	add	r3, r1
 800220a:	3324      	adds	r3, #36	@ 0x24
 800220c:	2200      	movs	r2, #0
 800220e:	601a      	str	r2, [r3, #0]
 8002210:	7bfb      	ldrb	r3, [r7, #15]
 8002212:	3301      	adds	r3, #1
 8002214:	73fb      	strb	r3, [r7, #15]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	791b      	ldrb	r3, [r3, #4]
 800221a:	7bfa      	ldrb	r2, [r7, #15]
 800221c:	429a      	cmp	r2, r3
 800221e:	d3af      	bcc.n	8002180 <HAL_PCD_Init+0x9c>
 8002220:	2300      	movs	r3, #0
 8002222:	73fb      	strb	r3, [r7, #15]
 8002224:	e044      	b.n	80022b0 <HAL_PCD_Init+0x1cc>
 8002226:	7bfa      	ldrb	r2, [r7, #15]
 8002228:	6879      	ldr	r1, [r7, #4]
 800222a:	4613      	mov	r3, r2
 800222c:	00db      	lsls	r3, r3, #3
 800222e:	4413      	add	r3, r2
 8002230:	009b      	lsls	r3, r3, #2
 8002232:	440b      	add	r3, r1
 8002234:	f203 2355 	addw	r3, r3, #597	@ 0x255
 8002238:	2200      	movs	r2, #0
 800223a:	701a      	strb	r2, [r3, #0]
 800223c:	7bfa      	ldrb	r2, [r7, #15]
 800223e:	6879      	ldr	r1, [r7, #4]
 8002240:	4613      	mov	r3, r2
 8002242:	00db      	lsls	r3, r3, #3
 8002244:	4413      	add	r3, r2
 8002246:	009b      	lsls	r3, r3, #2
 8002248:	440b      	add	r3, r1
 800224a:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800224e:	7bfa      	ldrb	r2, [r7, #15]
 8002250:	701a      	strb	r2, [r3, #0]
 8002252:	7bfa      	ldrb	r2, [r7, #15]
 8002254:	6879      	ldr	r1, [r7, #4]
 8002256:	4613      	mov	r3, r2
 8002258:	00db      	lsls	r3, r3, #3
 800225a:	4413      	add	r3, r2
 800225c:	009b      	lsls	r3, r3, #2
 800225e:	440b      	add	r3, r1
 8002260:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 8002264:	2200      	movs	r2, #0
 8002266:	701a      	strb	r2, [r3, #0]
 8002268:	7bfa      	ldrb	r2, [r7, #15]
 800226a:	6879      	ldr	r1, [r7, #4]
 800226c:	4613      	mov	r3, r2
 800226e:	00db      	lsls	r3, r3, #3
 8002270:	4413      	add	r3, r2
 8002272:	009b      	lsls	r3, r3, #2
 8002274:	440b      	add	r3, r1
 8002276:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 800227a:	2200      	movs	r2, #0
 800227c:	601a      	str	r2, [r3, #0]
 800227e:	7bfa      	ldrb	r2, [r7, #15]
 8002280:	6879      	ldr	r1, [r7, #4]
 8002282:	4613      	mov	r3, r2
 8002284:	00db      	lsls	r3, r3, #3
 8002286:	4413      	add	r3, r2
 8002288:	009b      	lsls	r3, r3, #2
 800228a:	440b      	add	r3, r1
 800228c:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8002290:	2200      	movs	r2, #0
 8002292:	601a      	str	r2, [r3, #0]
 8002294:	7bfa      	ldrb	r2, [r7, #15]
 8002296:	6879      	ldr	r1, [r7, #4]
 8002298:	4613      	mov	r3, r2
 800229a:	00db      	lsls	r3, r3, #3
 800229c:	4413      	add	r3, r2
 800229e:	009b      	lsls	r3, r3, #2
 80022a0:	440b      	add	r3, r1
 80022a2:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 80022a6:	2200      	movs	r2, #0
 80022a8:	601a      	str	r2, [r3, #0]
 80022aa:	7bfb      	ldrb	r3, [r7, #15]
 80022ac:	3301      	adds	r3, #1
 80022ae:	73fb      	strb	r3, [r7, #15]
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	791b      	ldrb	r3, [r3, #4]
 80022b4:	7bfa      	ldrb	r2, [r7, #15]
 80022b6:	429a      	cmp	r2, r3
 80022b8:	d3b5      	bcc.n	8002226 <HAL_PCD_Init+0x142>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	6818      	ldr	r0, [r3, #0]
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	7c1a      	ldrb	r2, [r3, #16]
 80022c2:	f88d 2000 	strb.w	r2, [sp]
 80022c6:	3304      	adds	r3, #4
 80022c8:	cb0e      	ldmia	r3, {r1, r2, r3}
 80022ca:	f001 f9df 	bl	800368c <USB_DevInit>
 80022ce:	4603      	mov	r3, r0
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d005      	beq.n	80022e0 <HAL_PCD_Init+0x1fc>
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	2202      	movs	r2, #2
 80022d8:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80022dc:	2301      	movs	r3, #1
 80022de:	e00c      	b.n	80022fa <HAL_PCD_Init+0x216>
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	2200      	movs	r2, #0
 80022e4:	745a      	strb	r2, [r3, #17]
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	2201      	movs	r2, #1
 80022ea:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	4618      	mov	r0, r3
 80022f4:	f001 fba7 	bl	8003a46 <USB_DevDisconnect>
 80022f8:	2300      	movs	r3, #0
 80022fa:	4618      	mov	r0, r3
 80022fc:	3710      	adds	r7, #16
 80022fe:	46bd      	mov	sp, r7
 8002300:	bd80      	pop	{r7, pc}
	...

08002304 <HAL_RCC_OscConfig>:
 8002304:	b580      	push	{r7, lr}
 8002306:	b086      	sub	sp, #24
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	2b00      	cmp	r3, #0
 8002310:	d101      	bne.n	8002316 <HAL_RCC_OscConfig+0x12>
 8002312:	2301      	movs	r3, #1
 8002314:	e267      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f003 0301 	and.w	r3, r3, #1
 800231e:	2b00      	cmp	r3, #0
 8002320:	d075      	beq.n	800240e <HAL_RCC_OscConfig+0x10a>
 8002322:	4b88      	ldr	r3, [pc, #544]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002324:	689b      	ldr	r3, [r3, #8]
 8002326:	f003 030c 	and.w	r3, r3, #12
 800232a:	2b04      	cmp	r3, #4
 800232c:	d00c      	beq.n	8002348 <HAL_RCC_OscConfig+0x44>
 800232e:	4b85      	ldr	r3, [pc, #532]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002330:	689b      	ldr	r3, [r3, #8]
 8002332:	f003 030c 	and.w	r3, r3, #12
 8002336:	2b08      	cmp	r3, #8
 8002338:	d112      	bne.n	8002360 <HAL_RCC_OscConfig+0x5c>
 800233a:	4b82      	ldr	r3, [pc, #520]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002342:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002346:	d10b      	bne.n	8002360 <HAL_RCC_OscConfig+0x5c>
 8002348:	4b7e      	ldr	r3, [pc, #504]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002350:	2b00      	cmp	r3, #0
 8002352:	d05b      	beq.n	800240c <HAL_RCC_OscConfig+0x108>
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	685b      	ldr	r3, [r3, #4]
 8002358:	2b00      	cmp	r3, #0
 800235a:	d157      	bne.n	800240c <HAL_RCC_OscConfig+0x108>
 800235c:	2301      	movs	r3, #1
 800235e:	e242      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	685b      	ldr	r3, [r3, #4]
 8002364:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002368:	d106      	bne.n	8002378 <HAL_RCC_OscConfig+0x74>
 800236a:	4b76      	ldr	r3, [pc, #472]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4a75      	ldr	r2, [pc, #468]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002370:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002374:	6013      	str	r3, [r2, #0]
 8002376:	e01d      	b.n	80023b4 <HAL_RCC_OscConfig+0xb0>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	685b      	ldr	r3, [r3, #4]
 800237c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002380:	d10c      	bne.n	800239c <HAL_RCC_OscConfig+0x98>
 8002382:	4b70      	ldr	r3, [pc, #448]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4a6f      	ldr	r2, [pc, #444]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002388:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800238c:	6013      	str	r3, [r2, #0]
 800238e:	4b6d      	ldr	r3, [pc, #436]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	4a6c      	ldr	r2, [pc, #432]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002394:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002398:	6013      	str	r3, [r2, #0]
 800239a:	e00b      	b.n	80023b4 <HAL_RCC_OscConfig+0xb0>
 800239c:	4b69      	ldr	r3, [pc, #420]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a68      	ldr	r2, [pc, #416]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80023a2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80023a6:	6013      	str	r3, [r2, #0]
 80023a8:	4b66      	ldr	r3, [pc, #408]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	4a65      	ldr	r2, [pc, #404]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80023ae:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80023b2:	6013      	str	r3, [r2, #0]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	685b      	ldr	r3, [r3, #4]
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	d013      	beq.n	80023e4 <HAL_RCC_OscConfig+0xe0>
 80023bc:	f7ff f832 	bl	8001424 <HAL_GetTick>
 80023c0:	6138      	str	r0, [r7, #16]
 80023c2:	e008      	b.n	80023d6 <HAL_RCC_OscConfig+0xd2>
 80023c4:	f7ff f82e 	bl	8001424 <HAL_GetTick>
 80023c8:	4602      	mov	r2, r0
 80023ca:	693b      	ldr	r3, [r7, #16]
 80023cc:	1ad3      	subs	r3, r2, r3
 80023ce:	2b64      	cmp	r3, #100	@ 0x64
 80023d0:	d901      	bls.n	80023d6 <HAL_RCC_OscConfig+0xd2>
 80023d2:	2303      	movs	r3, #3
 80023d4:	e207      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80023d6:	4b5b      	ldr	r3, [pc, #364]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d0f0      	beq.n	80023c4 <HAL_RCC_OscConfig+0xc0>
 80023e2:	e014      	b.n	800240e <HAL_RCC_OscConfig+0x10a>
 80023e4:	f7ff f81e 	bl	8001424 <HAL_GetTick>
 80023e8:	6138      	str	r0, [r7, #16]
 80023ea:	e008      	b.n	80023fe <HAL_RCC_OscConfig+0xfa>
 80023ec:	f7ff f81a 	bl	8001424 <HAL_GetTick>
 80023f0:	4602      	mov	r2, r0
 80023f2:	693b      	ldr	r3, [r7, #16]
 80023f4:	1ad3      	subs	r3, r2, r3
 80023f6:	2b64      	cmp	r3, #100	@ 0x64
 80023f8:	d901      	bls.n	80023fe <HAL_RCC_OscConfig+0xfa>
 80023fa:	2303      	movs	r3, #3
 80023fc:	e1f3      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80023fe:	4b51      	ldr	r3, [pc, #324]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002406:	2b00      	cmp	r3, #0
 8002408:	d1f0      	bne.n	80023ec <HAL_RCC_OscConfig+0xe8>
 800240a:	e000      	b.n	800240e <HAL_RCC_OscConfig+0x10a>
 800240c:	bf00      	nop
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f003 0302 	and.w	r3, r3, #2
 8002416:	2b00      	cmp	r3, #0
 8002418:	d063      	beq.n	80024e2 <HAL_RCC_OscConfig+0x1de>
 800241a:	4b4a      	ldr	r3, [pc, #296]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 800241c:	689b      	ldr	r3, [r3, #8]
 800241e:	f003 030c 	and.w	r3, r3, #12
 8002422:	2b00      	cmp	r3, #0
 8002424:	d00b      	beq.n	800243e <HAL_RCC_OscConfig+0x13a>
 8002426:	4b47      	ldr	r3, [pc, #284]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002428:	689b      	ldr	r3, [r3, #8]
 800242a:	f003 030c 	and.w	r3, r3, #12
 800242e:	2b08      	cmp	r3, #8
 8002430:	d11c      	bne.n	800246c <HAL_RCC_OscConfig+0x168>
 8002432:	4b44      	ldr	r3, [pc, #272]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002434:	685b      	ldr	r3, [r3, #4]
 8002436:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800243a:	2b00      	cmp	r3, #0
 800243c:	d116      	bne.n	800246c <HAL_RCC_OscConfig+0x168>
 800243e:	4b41      	ldr	r3, [pc, #260]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	f003 0302 	and.w	r3, r3, #2
 8002446:	2b00      	cmp	r3, #0
 8002448:	d005      	beq.n	8002456 <HAL_RCC_OscConfig+0x152>
 800244a:	687b      	ldr	r3, [r7, #4]
 800244c:	68db      	ldr	r3, [r3, #12]
 800244e:	2b01      	cmp	r3, #1
 8002450:	d001      	beq.n	8002456 <HAL_RCC_OscConfig+0x152>
 8002452:	2301      	movs	r3, #1
 8002454:	e1c7      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002456:	4b3b      	ldr	r3, [pc, #236]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	691b      	ldr	r3, [r3, #16]
 8002462:	00db      	lsls	r3, r3, #3
 8002464:	4937      	ldr	r1, [pc, #220]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002466:	4313      	orrs	r3, r2
 8002468:	600b      	str	r3, [r1, #0]
 800246a:	e03a      	b.n	80024e2 <HAL_RCC_OscConfig+0x1de>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	68db      	ldr	r3, [r3, #12]
 8002470:	2b00      	cmp	r3, #0
 8002472:	d020      	beq.n	80024b6 <HAL_RCC_OscConfig+0x1b2>
 8002474:	4b34      	ldr	r3, [pc, #208]	@ (8002548 <HAL_RCC_OscConfig+0x244>)
 8002476:	2201      	movs	r2, #1
 8002478:	601a      	str	r2, [r3, #0]
 800247a:	f7fe ffd3 	bl	8001424 <HAL_GetTick>
 800247e:	6138      	str	r0, [r7, #16]
 8002480:	e008      	b.n	8002494 <HAL_RCC_OscConfig+0x190>
 8002482:	f7fe ffcf 	bl	8001424 <HAL_GetTick>
 8002486:	4602      	mov	r2, r0
 8002488:	693b      	ldr	r3, [r7, #16]
 800248a:	1ad3      	subs	r3, r2, r3
 800248c:	2b02      	cmp	r3, #2
 800248e:	d901      	bls.n	8002494 <HAL_RCC_OscConfig+0x190>
 8002490:	2303      	movs	r3, #3
 8002492:	e1a8      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002494:	4b2b      	ldr	r3, [pc, #172]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	f003 0302 	and.w	r3, r3, #2
 800249c:	2b00      	cmp	r3, #0
 800249e:	d0f0      	beq.n	8002482 <HAL_RCC_OscConfig+0x17e>
 80024a0:	4b28      	ldr	r3, [pc, #160]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	691b      	ldr	r3, [r3, #16]
 80024ac:	00db      	lsls	r3, r3, #3
 80024ae:	4925      	ldr	r1, [pc, #148]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80024b0:	4313      	orrs	r3, r2
 80024b2:	600b      	str	r3, [r1, #0]
 80024b4:	e015      	b.n	80024e2 <HAL_RCC_OscConfig+0x1de>
 80024b6:	4b24      	ldr	r3, [pc, #144]	@ (8002548 <HAL_RCC_OscConfig+0x244>)
 80024b8:	2200      	movs	r2, #0
 80024ba:	601a      	str	r2, [r3, #0]
 80024bc:	f7fe ffb2 	bl	8001424 <HAL_GetTick>
 80024c0:	6138      	str	r0, [r7, #16]
 80024c2:	e008      	b.n	80024d6 <HAL_RCC_OscConfig+0x1d2>
 80024c4:	f7fe ffae 	bl	8001424 <HAL_GetTick>
 80024c8:	4602      	mov	r2, r0
 80024ca:	693b      	ldr	r3, [r7, #16]
 80024cc:	1ad3      	subs	r3, r2, r3
 80024ce:	2b02      	cmp	r3, #2
 80024d0:	d901      	bls.n	80024d6 <HAL_RCC_OscConfig+0x1d2>
 80024d2:	2303      	movs	r3, #3
 80024d4:	e187      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80024d6:	4b1b      	ldr	r3, [pc, #108]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f003 0302 	and.w	r3, r3, #2
 80024de:	2b00      	cmp	r3, #0
 80024e0:	d1f0      	bne.n	80024c4 <HAL_RCC_OscConfig+0x1c0>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	f003 0308 	and.w	r3, r3, #8
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d036      	beq.n	800255c <HAL_RCC_OscConfig+0x258>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	695b      	ldr	r3, [r3, #20]
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d016      	beq.n	8002524 <HAL_RCC_OscConfig+0x220>
 80024f6:	4b15      	ldr	r3, [pc, #84]	@ (800254c <HAL_RCC_OscConfig+0x248>)
 80024f8:	2201      	movs	r2, #1
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	f7fe ff92 	bl	8001424 <HAL_GetTick>
 8002500:	6138      	str	r0, [r7, #16]
 8002502:	e008      	b.n	8002516 <HAL_RCC_OscConfig+0x212>
 8002504:	f7fe ff8e 	bl	8001424 <HAL_GetTick>
 8002508:	4602      	mov	r2, r0
 800250a:	693b      	ldr	r3, [r7, #16]
 800250c:	1ad3      	subs	r3, r2, r3
 800250e:	2b02      	cmp	r3, #2
 8002510:	d901      	bls.n	8002516 <HAL_RCC_OscConfig+0x212>
 8002512:	2303      	movs	r3, #3
 8002514:	e167      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002516:	4b0b      	ldr	r3, [pc, #44]	@ (8002544 <HAL_RCC_OscConfig+0x240>)
 8002518:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800251a:	f003 0302 	and.w	r3, r3, #2
 800251e:	2b00      	cmp	r3, #0
 8002520:	d0f0      	beq.n	8002504 <HAL_RCC_OscConfig+0x200>
 8002522:	e01b      	b.n	800255c <HAL_RCC_OscConfig+0x258>
 8002524:	4b09      	ldr	r3, [pc, #36]	@ (800254c <HAL_RCC_OscConfig+0x248>)
 8002526:	2200      	movs	r2, #0
 8002528:	601a      	str	r2, [r3, #0]
 800252a:	f7fe ff7b 	bl	8001424 <HAL_GetTick>
 800252e:	6138      	str	r0, [r7, #16]
 8002530:	e00e      	b.n	8002550 <HAL_RCC_OscConfig+0x24c>
 8002532:	f7fe ff77 	bl	8001424 <HAL_GetTick>
 8002536:	4602      	mov	r2, r0
 8002538:	693b      	ldr	r3, [r7, #16]
 800253a:	1ad3      	subs	r3, r2, r3
 800253c:	2b02      	cmp	r3, #2
 800253e:	d907      	bls.n	8002550 <HAL_RCC_OscConfig+0x24c>
 8002540:	2303      	movs	r3, #3
 8002542:	e150      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002544:	40023800 	.word	0x40023800
 8002548:	42470000 	.word	0x42470000
 800254c:	42470e80 	.word	0x42470e80
 8002550:	4b88      	ldr	r3, [pc, #544]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002552:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002554:	f003 0302 	and.w	r3, r3, #2
 8002558:	2b00      	cmp	r3, #0
 800255a:	d1ea      	bne.n	8002532 <HAL_RCC_OscConfig+0x22e>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f003 0304 	and.w	r3, r3, #4
 8002564:	2b00      	cmp	r3, #0
 8002566:	f000 8097 	beq.w	8002698 <HAL_RCC_OscConfig+0x394>
 800256a:	2300      	movs	r3, #0
 800256c:	75fb      	strb	r3, [r7, #23]
 800256e:	4b81      	ldr	r3, [pc, #516]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002570:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002572:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002576:	2b00      	cmp	r3, #0
 8002578:	d10f      	bne.n	800259a <HAL_RCC_OscConfig+0x296>
 800257a:	2300      	movs	r3, #0
 800257c:	60bb      	str	r3, [r7, #8]
 800257e:	4b7d      	ldr	r3, [pc, #500]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002580:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002582:	4a7c      	ldr	r2, [pc, #496]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002584:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002588:	6413      	str	r3, [r2, #64]	@ 0x40
 800258a:	4b7a      	ldr	r3, [pc, #488]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800258c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800258e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002592:	60bb      	str	r3, [r7, #8]
 8002594:	68bb      	ldr	r3, [r7, #8]
 8002596:	2301      	movs	r3, #1
 8002598:	75fb      	strb	r3, [r7, #23]
 800259a:	4b77      	ldr	r3, [pc, #476]	@ (8002778 <HAL_RCC_OscConfig+0x474>)
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	d118      	bne.n	80025d8 <HAL_RCC_OscConfig+0x2d4>
 80025a6:	4b74      	ldr	r3, [pc, #464]	@ (8002778 <HAL_RCC_OscConfig+0x474>)
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	4a73      	ldr	r2, [pc, #460]	@ (8002778 <HAL_RCC_OscConfig+0x474>)
 80025ac:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80025b0:	6013      	str	r3, [r2, #0]
 80025b2:	f7fe ff37 	bl	8001424 <HAL_GetTick>
 80025b6:	6138      	str	r0, [r7, #16]
 80025b8:	e008      	b.n	80025cc <HAL_RCC_OscConfig+0x2c8>
 80025ba:	f7fe ff33 	bl	8001424 <HAL_GetTick>
 80025be:	4602      	mov	r2, r0
 80025c0:	693b      	ldr	r3, [r7, #16]
 80025c2:	1ad3      	subs	r3, r2, r3
 80025c4:	2b02      	cmp	r3, #2
 80025c6:	d901      	bls.n	80025cc <HAL_RCC_OscConfig+0x2c8>
 80025c8:	2303      	movs	r3, #3
 80025ca:	e10c      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80025cc:	4b6a      	ldr	r3, [pc, #424]	@ (8002778 <HAL_RCC_OscConfig+0x474>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d0f0      	beq.n	80025ba <HAL_RCC_OscConfig+0x2b6>
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	689b      	ldr	r3, [r3, #8]
 80025dc:	2b01      	cmp	r3, #1
 80025de:	d106      	bne.n	80025ee <HAL_RCC_OscConfig+0x2ea>
 80025e0:	4b64      	ldr	r3, [pc, #400]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80025e2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80025e4:	4a63      	ldr	r2, [pc, #396]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80025e6:	f043 0301 	orr.w	r3, r3, #1
 80025ea:	6713      	str	r3, [r2, #112]	@ 0x70
 80025ec:	e01c      	b.n	8002628 <HAL_RCC_OscConfig+0x324>
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	689b      	ldr	r3, [r3, #8]
 80025f2:	2b05      	cmp	r3, #5
 80025f4:	d10c      	bne.n	8002610 <HAL_RCC_OscConfig+0x30c>
 80025f6:	4b5f      	ldr	r3, [pc, #380]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80025f8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80025fa:	4a5e      	ldr	r2, [pc, #376]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80025fc:	f043 0304 	orr.w	r3, r3, #4
 8002600:	6713      	str	r3, [r2, #112]	@ 0x70
 8002602:	4b5c      	ldr	r3, [pc, #368]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002604:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002606:	4a5b      	ldr	r2, [pc, #364]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002608:	f043 0301 	orr.w	r3, r3, #1
 800260c:	6713      	str	r3, [r2, #112]	@ 0x70
 800260e:	e00b      	b.n	8002628 <HAL_RCC_OscConfig+0x324>
 8002610:	4b58      	ldr	r3, [pc, #352]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002612:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002614:	4a57      	ldr	r2, [pc, #348]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002616:	f023 0301 	bic.w	r3, r3, #1
 800261a:	6713      	str	r3, [r2, #112]	@ 0x70
 800261c:	4b55      	ldr	r3, [pc, #340]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800261e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002620:	4a54      	ldr	r2, [pc, #336]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002622:	f023 0304 	bic.w	r3, r3, #4
 8002626:	6713      	str	r3, [r2, #112]	@ 0x70
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	689b      	ldr	r3, [r3, #8]
 800262c:	2b00      	cmp	r3, #0
 800262e:	d015      	beq.n	800265c <HAL_RCC_OscConfig+0x358>
 8002630:	f7fe fef8 	bl	8001424 <HAL_GetTick>
 8002634:	6138      	str	r0, [r7, #16]
 8002636:	e00a      	b.n	800264e <HAL_RCC_OscConfig+0x34a>
 8002638:	f7fe fef4 	bl	8001424 <HAL_GetTick>
 800263c:	4602      	mov	r2, r0
 800263e:	693b      	ldr	r3, [r7, #16]
 8002640:	1ad3      	subs	r3, r2, r3
 8002642:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002646:	4293      	cmp	r3, r2
 8002648:	d901      	bls.n	800264e <HAL_RCC_OscConfig+0x34a>
 800264a:	2303      	movs	r3, #3
 800264c:	e0cb      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 800264e:	4b49      	ldr	r3, [pc, #292]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002650:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002652:	f003 0302 	and.w	r3, r3, #2
 8002656:	2b00      	cmp	r3, #0
 8002658:	d0ee      	beq.n	8002638 <HAL_RCC_OscConfig+0x334>
 800265a:	e014      	b.n	8002686 <HAL_RCC_OscConfig+0x382>
 800265c:	f7fe fee2 	bl	8001424 <HAL_GetTick>
 8002660:	6138      	str	r0, [r7, #16]
 8002662:	e00a      	b.n	800267a <HAL_RCC_OscConfig+0x376>
 8002664:	f7fe fede 	bl	8001424 <HAL_GetTick>
 8002668:	4602      	mov	r2, r0
 800266a:	693b      	ldr	r3, [r7, #16]
 800266c:	1ad3      	subs	r3, r2, r3
 800266e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002672:	4293      	cmp	r3, r2
 8002674:	d901      	bls.n	800267a <HAL_RCC_OscConfig+0x376>
 8002676:	2303      	movs	r3, #3
 8002678:	e0b5      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 800267a:	4b3e      	ldr	r3, [pc, #248]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800267c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800267e:	f003 0302 	and.w	r3, r3, #2
 8002682:	2b00      	cmp	r3, #0
 8002684:	d1ee      	bne.n	8002664 <HAL_RCC_OscConfig+0x360>
 8002686:	7dfb      	ldrb	r3, [r7, #23]
 8002688:	2b01      	cmp	r3, #1
 800268a:	d105      	bne.n	8002698 <HAL_RCC_OscConfig+0x394>
 800268c:	4b39      	ldr	r3, [pc, #228]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800268e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002690:	4a38      	ldr	r2, [pc, #224]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002692:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002696:	6413      	str	r3, [r2, #64]	@ 0x40
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	699b      	ldr	r3, [r3, #24]
 800269c:	2b00      	cmp	r3, #0
 800269e:	f000 80a1 	beq.w	80027e4 <HAL_RCC_OscConfig+0x4e0>
 80026a2:	4b34      	ldr	r3, [pc, #208]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80026a4:	689b      	ldr	r3, [r3, #8]
 80026a6:	f003 030c 	and.w	r3, r3, #12
 80026aa:	2b08      	cmp	r3, #8
 80026ac:	d05c      	beq.n	8002768 <HAL_RCC_OscConfig+0x464>
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	699b      	ldr	r3, [r3, #24]
 80026b2:	2b02      	cmp	r3, #2
 80026b4:	d141      	bne.n	800273a <HAL_RCC_OscConfig+0x436>
 80026b6:	4b31      	ldr	r3, [pc, #196]	@ (800277c <HAL_RCC_OscConfig+0x478>)
 80026b8:	2200      	movs	r2, #0
 80026ba:	601a      	str	r2, [r3, #0]
 80026bc:	f7fe feb2 	bl	8001424 <HAL_GetTick>
 80026c0:	6138      	str	r0, [r7, #16]
 80026c2:	e008      	b.n	80026d6 <HAL_RCC_OscConfig+0x3d2>
 80026c4:	f7fe feae 	bl	8001424 <HAL_GetTick>
 80026c8:	4602      	mov	r2, r0
 80026ca:	693b      	ldr	r3, [r7, #16]
 80026cc:	1ad3      	subs	r3, r2, r3
 80026ce:	2b02      	cmp	r3, #2
 80026d0:	d901      	bls.n	80026d6 <HAL_RCC_OscConfig+0x3d2>
 80026d2:	2303      	movs	r3, #3
 80026d4:	e087      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80026d6:	4b27      	ldr	r3, [pc, #156]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d1f0      	bne.n	80026c4 <HAL_RCC_OscConfig+0x3c0>
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	69da      	ldr	r2, [r3, #28]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	6a1b      	ldr	r3, [r3, #32]
 80026ea:	431a      	orrs	r2, r3
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026f0:	019b      	lsls	r3, r3, #6
 80026f2:	431a      	orrs	r2, r3
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026f8:	085b      	lsrs	r3, r3, #1
 80026fa:	3b01      	subs	r3, #1
 80026fc:	041b      	lsls	r3, r3, #16
 80026fe:	431a      	orrs	r2, r3
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002704:	061b      	lsls	r3, r3, #24
 8002706:	491b      	ldr	r1, [pc, #108]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 8002708:	4313      	orrs	r3, r2
 800270a:	604b      	str	r3, [r1, #4]
 800270c:	4b1b      	ldr	r3, [pc, #108]	@ (800277c <HAL_RCC_OscConfig+0x478>)
 800270e:	2201      	movs	r2, #1
 8002710:	601a      	str	r2, [r3, #0]
 8002712:	f7fe fe87 	bl	8001424 <HAL_GetTick>
 8002716:	6138      	str	r0, [r7, #16]
 8002718:	e008      	b.n	800272c <HAL_RCC_OscConfig+0x428>
 800271a:	f7fe fe83 	bl	8001424 <HAL_GetTick>
 800271e:	4602      	mov	r2, r0
 8002720:	693b      	ldr	r3, [r7, #16]
 8002722:	1ad3      	subs	r3, r2, r3
 8002724:	2b02      	cmp	r3, #2
 8002726:	d901      	bls.n	800272c <HAL_RCC_OscConfig+0x428>
 8002728:	2303      	movs	r3, #3
 800272a:	e05c      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 800272c:	4b11      	ldr	r3, [pc, #68]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002734:	2b00      	cmp	r3, #0
 8002736:	d0f0      	beq.n	800271a <HAL_RCC_OscConfig+0x416>
 8002738:	e054      	b.n	80027e4 <HAL_RCC_OscConfig+0x4e0>
 800273a:	4b10      	ldr	r3, [pc, #64]	@ (800277c <HAL_RCC_OscConfig+0x478>)
 800273c:	2200      	movs	r2, #0
 800273e:	601a      	str	r2, [r3, #0]
 8002740:	f7fe fe70 	bl	8001424 <HAL_GetTick>
 8002744:	6138      	str	r0, [r7, #16]
 8002746:	e008      	b.n	800275a <HAL_RCC_OscConfig+0x456>
 8002748:	f7fe fe6c 	bl	8001424 <HAL_GetTick>
 800274c:	4602      	mov	r2, r0
 800274e:	693b      	ldr	r3, [r7, #16]
 8002750:	1ad3      	subs	r3, r2, r3
 8002752:	2b02      	cmp	r3, #2
 8002754:	d901      	bls.n	800275a <HAL_RCC_OscConfig+0x456>
 8002756:	2303      	movs	r3, #3
 8002758:	e045      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 800275a:	4b06      	ldr	r3, [pc, #24]	@ (8002774 <HAL_RCC_OscConfig+0x470>)
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002762:	2b00      	cmp	r3, #0
 8002764:	d1f0      	bne.n	8002748 <HAL_RCC_OscConfig+0x444>
 8002766:	e03d      	b.n	80027e4 <HAL_RCC_OscConfig+0x4e0>
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	699b      	ldr	r3, [r3, #24]
 800276c:	2b01      	cmp	r3, #1
 800276e:	d107      	bne.n	8002780 <HAL_RCC_OscConfig+0x47c>
 8002770:	2301      	movs	r3, #1
 8002772:	e038      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 8002774:	40023800 	.word	0x40023800
 8002778:	40007000 	.word	0x40007000
 800277c:	42470060 	.word	0x42470060
 8002780:	4b1b      	ldr	r3, [pc, #108]	@ (80027f0 <HAL_RCC_OscConfig+0x4ec>)
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	699b      	ldr	r3, [r3, #24]
 800278a:	2b01      	cmp	r3, #1
 800278c:	d028      	beq.n	80027e0 <HAL_RCC_OscConfig+0x4dc>
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	69db      	ldr	r3, [r3, #28]
 8002798:	429a      	cmp	r2, r3
 800279a:	d121      	bne.n	80027e0 <HAL_RCC_OscConfig+0x4dc>
 800279c:	68fb      	ldr	r3, [r7, #12]
 800279e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	6a1b      	ldr	r3, [r3, #32]
 80027a6:	429a      	cmp	r2, r3
 80027a8:	d11a      	bne.n	80027e0 <HAL_RCC_OscConfig+0x4dc>
 80027aa:	68fa      	ldr	r2, [r7, #12]
 80027ac:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80027b0:	4013      	ands	r3, r2
 80027b2:	687a      	ldr	r2, [r7, #4]
 80027b4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80027b6:	0192      	lsls	r2, r2, #6
 80027b8:	4293      	cmp	r3, r2
 80027ba:	d111      	bne.n	80027e0 <HAL_RCC_OscConfig+0x4dc>
 80027bc:	68fb      	ldr	r3, [r7, #12]
 80027be:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80027c6:	085b      	lsrs	r3, r3, #1
 80027c8:	3b01      	subs	r3, #1
 80027ca:	041b      	lsls	r3, r3, #16
 80027cc:	429a      	cmp	r2, r3
 80027ce:	d107      	bne.n	80027e0 <HAL_RCC_OscConfig+0x4dc>
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027da:	061b      	lsls	r3, r3, #24
 80027dc:	429a      	cmp	r2, r3
 80027de:	d001      	beq.n	80027e4 <HAL_RCC_OscConfig+0x4e0>
 80027e0:	2301      	movs	r3, #1
 80027e2:	e000      	b.n	80027e6 <HAL_RCC_OscConfig+0x4e2>
 80027e4:	2300      	movs	r3, #0
 80027e6:	4618      	mov	r0, r3
 80027e8:	3718      	adds	r7, #24
 80027ea:	46bd      	mov	sp, r7
 80027ec:	bd80      	pop	{r7, pc}
 80027ee:	bf00      	nop
 80027f0:	40023800 	.word	0x40023800

080027f4 <HAL_RCC_ClockConfig>:
 80027f4:	b580      	push	{r7, lr}
 80027f6:	b084      	sub	sp, #16
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	6039      	str	r1, [r7, #0]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	2b00      	cmp	r3, #0
 8002802:	d101      	bne.n	8002808 <HAL_RCC_ClockConfig+0x14>
 8002804:	2301      	movs	r3, #1
 8002806:	e0cc      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 8002808:	4b68      	ldr	r3, [pc, #416]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	f003 030f 	and.w	r3, r3, #15
 8002810:	683a      	ldr	r2, [r7, #0]
 8002812:	429a      	cmp	r2, r3
 8002814:	d90c      	bls.n	8002830 <HAL_RCC_ClockConfig+0x3c>
 8002816:	4b65      	ldr	r3, [pc, #404]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 8002818:	683a      	ldr	r2, [r7, #0]
 800281a:	b2d2      	uxtb	r2, r2
 800281c:	701a      	strb	r2, [r3, #0]
 800281e:	4b63      	ldr	r3, [pc, #396]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	f003 030f 	and.w	r3, r3, #15
 8002826:	683a      	ldr	r2, [r7, #0]
 8002828:	429a      	cmp	r2, r3
 800282a:	d001      	beq.n	8002830 <HAL_RCC_ClockConfig+0x3c>
 800282c:	2301      	movs	r3, #1
 800282e:	e0b8      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	f003 0302 	and.w	r3, r3, #2
 8002838:	2b00      	cmp	r3, #0
 800283a:	d020      	beq.n	800287e <HAL_RCC_ClockConfig+0x8a>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f003 0304 	and.w	r3, r3, #4
 8002844:	2b00      	cmp	r3, #0
 8002846:	d005      	beq.n	8002854 <HAL_RCC_ClockConfig+0x60>
 8002848:	4b59      	ldr	r3, [pc, #356]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 800284a:	689b      	ldr	r3, [r3, #8]
 800284c:	4a58      	ldr	r2, [pc, #352]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 800284e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002852:	6093      	str	r3, [r2, #8]
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	f003 0308 	and.w	r3, r3, #8
 800285c:	2b00      	cmp	r3, #0
 800285e:	d005      	beq.n	800286c <HAL_RCC_ClockConfig+0x78>
 8002860:	4b53      	ldr	r3, [pc, #332]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002862:	689b      	ldr	r3, [r3, #8]
 8002864:	4a52      	ldr	r2, [pc, #328]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002866:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800286a:	6093      	str	r3, [r2, #8]
 800286c:	4b50      	ldr	r3, [pc, #320]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 800286e:	689b      	ldr	r3, [r3, #8]
 8002870:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	689b      	ldr	r3, [r3, #8]
 8002878:	494d      	ldr	r1, [pc, #308]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 800287a:	4313      	orrs	r3, r2
 800287c:	608b      	str	r3, [r1, #8]
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	f003 0301 	and.w	r3, r3, #1
 8002886:	2b00      	cmp	r3, #0
 8002888:	d044      	beq.n	8002914 <HAL_RCC_ClockConfig+0x120>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	685b      	ldr	r3, [r3, #4]
 800288e:	2b01      	cmp	r3, #1
 8002890:	d107      	bne.n	80028a2 <HAL_RCC_ClockConfig+0xae>
 8002892:	4b47      	ldr	r3, [pc, #284]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800289a:	2b00      	cmp	r3, #0
 800289c:	d119      	bne.n	80028d2 <HAL_RCC_ClockConfig+0xde>
 800289e:	2301      	movs	r3, #1
 80028a0:	e07f      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	685b      	ldr	r3, [r3, #4]
 80028a6:	2b02      	cmp	r3, #2
 80028a8:	d003      	beq.n	80028b2 <HAL_RCC_ClockConfig+0xbe>
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	685b      	ldr	r3, [r3, #4]
 80028ae:	2b03      	cmp	r3, #3
 80028b0:	d107      	bne.n	80028c2 <HAL_RCC_ClockConfig+0xce>
 80028b2:	4b3f      	ldr	r3, [pc, #252]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d109      	bne.n	80028d2 <HAL_RCC_ClockConfig+0xde>
 80028be:	2301      	movs	r3, #1
 80028c0:	e06f      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 80028c2:	4b3b      	ldr	r3, [pc, #236]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 80028c4:	681b      	ldr	r3, [r3, #0]
 80028c6:	f003 0302 	and.w	r3, r3, #2
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d101      	bne.n	80028d2 <HAL_RCC_ClockConfig+0xde>
 80028ce:	2301      	movs	r3, #1
 80028d0:	e067      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 80028d2:	4b37      	ldr	r3, [pc, #220]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 80028d4:	689b      	ldr	r3, [r3, #8]
 80028d6:	f023 0203 	bic.w	r2, r3, #3
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	685b      	ldr	r3, [r3, #4]
 80028de:	4934      	ldr	r1, [pc, #208]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 80028e0:	4313      	orrs	r3, r2
 80028e2:	608b      	str	r3, [r1, #8]
 80028e4:	f7fe fd9e 	bl	8001424 <HAL_GetTick>
 80028e8:	60f8      	str	r0, [r7, #12]
 80028ea:	e00a      	b.n	8002902 <HAL_RCC_ClockConfig+0x10e>
 80028ec:	f7fe fd9a 	bl	8001424 <HAL_GetTick>
 80028f0:	4602      	mov	r2, r0
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	1ad3      	subs	r3, r2, r3
 80028f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80028fa:	4293      	cmp	r3, r2
 80028fc:	d901      	bls.n	8002902 <HAL_RCC_ClockConfig+0x10e>
 80028fe:	2303      	movs	r3, #3
 8002900:	e04f      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 8002902:	4b2b      	ldr	r3, [pc, #172]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002904:	689b      	ldr	r3, [r3, #8]
 8002906:	f003 020c 	and.w	r2, r3, #12
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	685b      	ldr	r3, [r3, #4]
 800290e:	009b      	lsls	r3, r3, #2
 8002910:	429a      	cmp	r2, r3
 8002912:	d1eb      	bne.n	80028ec <HAL_RCC_ClockConfig+0xf8>
 8002914:	4b25      	ldr	r3, [pc, #148]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	f003 030f 	and.w	r3, r3, #15
 800291c:	683a      	ldr	r2, [r7, #0]
 800291e:	429a      	cmp	r2, r3
 8002920:	d20c      	bcs.n	800293c <HAL_RCC_ClockConfig+0x148>
 8002922:	4b22      	ldr	r3, [pc, #136]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 8002924:	683a      	ldr	r2, [r7, #0]
 8002926:	b2d2      	uxtb	r2, r2
 8002928:	701a      	strb	r2, [r3, #0]
 800292a:	4b20      	ldr	r3, [pc, #128]	@ (80029ac <HAL_RCC_ClockConfig+0x1b8>)
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	f003 030f 	and.w	r3, r3, #15
 8002932:	683a      	ldr	r2, [r7, #0]
 8002934:	429a      	cmp	r2, r3
 8002936:	d001      	beq.n	800293c <HAL_RCC_ClockConfig+0x148>
 8002938:	2301      	movs	r3, #1
 800293a:	e032      	b.n	80029a2 <HAL_RCC_ClockConfig+0x1ae>
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	681b      	ldr	r3, [r3, #0]
 8002940:	f003 0304 	and.w	r3, r3, #4
 8002944:	2b00      	cmp	r3, #0
 8002946:	d008      	beq.n	800295a <HAL_RCC_ClockConfig+0x166>
 8002948:	4b19      	ldr	r3, [pc, #100]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 800294a:	689b      	ldr	r3, [r3, #8]
 800294c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	68db      	ldr	r3, [r3, #12]
 8002954:	4916      	ldr	r1, [pc, #88]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002956:	4313      	orrs	r3, r2
 8002958:	608b      	str	r3, [r1, #8]
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	f003 0308 	and.w	r3, r3, #8
 8002962:	2b00      	cmp	r3, #0
 8002964:	d009      	beq.n	800297a <HAL_RCC_ClockConfig+0x186>
 8002966:	4b12      	ldr	r3, [pc, #72]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002968:	689b      	ldr	r3, [r3, #8]
 800296a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	691b      	ldr	r3, [r3, #16]
 8002972:	00db      	lsls	r3, r3, #3
 8002974:	490e      	ldr	r1, [pc, #56]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002976:	4313      	orrs	r3, r2
 8002978:	608b      	str	r3, [r1, #8]
 800297a:	f000 f821 	bl	80029c0 <HAL_RCC_GetSysClockFreq>
 800297e:	4602      	mov	r2, r0
 8002980:	4b0b      	ldr	r3, [pc, #44]	@ (80029b0 <HAL_RCC_ClockConfig+0x1bc>)
 8002982:	689b      	ldr	r3, [r3, #8]
 8002984:	091b      	lsrs	r3, r3, #4
 8002986:	f003 030f 	and.w	r3, r3, #15
 800298a:	490a      	ldr	r1, [pc, #40]	@ (80029b4 <HAL_RCC_ClockConfig+0x1c0>)
 800298c:	5ccb      	ldrb	r3, [r1, r3]
 800298e:	fa22 f303 	lsr.w	r3, r2, r3
 8002992:	4a09      	ldr	r2, [pc, #36]	@ (80029b8 <HAL_RCC_ClockConfig+0x1c4>)
 8002994:	6013      	str	r3, [r2, #0]
 8002996:	4b09      	ldr	r3, [pc, #36]	@ (80029bc <HAL_RCC_ClockConfig+0x1c8>)
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	4618      	mov	r0, r3
 800299c:	f7fe fd12 	bl	80013c4 <HAL_InitTick>
 80029a0:	2300      	movs	r3, #0
 80029a2:	4618      	mov	r0, r3
 80029a4:	3710      	adds	r7, #16
 80029a6:	46bd      	mov	sp, r7
 80029a8:	bd80      	pop	{r7, pc}
 80029aa:	bf00      	nop
 80029ac:	40023c00 	.word	0x40023c00
 80029b0:	40023800 	.word	0x40023800
 80029b4:	08004a78 	.word	0x08004a78
 80029b8:	20000034 	.word	0x20000034
 80029bc:	20000038 	.word	0x20000038

080029c0 <HAL_RCC_GetSysClockFreq>:
 80029c0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80029c4:	b094      	sub	sp, #80	@ 0x50
 80029c6:	af00      	add	r7, sp, #0
 80029c8:	2300      	movs	r3, #0
 80029ca:	647b      	str	r3, [r7, #68]	@ 0x44
 80029cc:	2300      	movs	r3, #0
 80029ce:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80029d0:	2300      	movs	r3, #0
 80029d2:	643b      	str	r3, [r7, #64]	@ 0x40
 80029d4:	2300      	movs	r3, #0
 80029d6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80029d8:	4b79      	ldr	r3, [pc, #484]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 80029da:	689b      	ldr	r3, [r3, #8]
 80029dc:	f003 030c 	and.w	r3, r3, #12
 80029e0:	2b08      	cmp	r3, #8
 80029e2:	d00d      	beq.n	8002a00 <HAL_RCC_GetSysClockFreq+0x40>
 80029e4:	2b08      	cmp	r3, #8
 80029e6:	f200 80e1 	bhi.w	8002bac <HAL_RCC_GetSysClockFreq+0x1ec>
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d002      	beq.n	80029f4 <HAL_RCC_GetSysClockFreq+0x34>
 80029ee:	2b04      	cmp	r3, #4
 80029f0:	d003      	beq.n	80029fa <HAL_RCC_GetSysClockFreq+0x3a>
 80029f2:	e0db      	b.n	8002bac <HAL_RCC_GetSysClockFreq+0x1ec>
 80029f4:	4b73      	ldr	r3, [pc, #460]	@ (8002bc4 <HAL_RCC_GetSysClockFreq+0x204>)
 80029f6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80029f8:	e0db      	b.n	8002bb2 <HAL_RCC_GetSysClockFreq+0x1f2>
 80029fa:	4b73      	ldr	r3, [pc, #460]	@ (8002bc8 <HAL_RCC_GetSysClockFreq+0x208>)
 80029fc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80029fe:	e0d8      	b.n	8002bb2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8002a00:	4b6f      	ldr	r3, [pc, #444]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002a08:	647b      	str	r3, [r7, #68]	@ 0x44
 8002a0a:	4b6d      	ldr	r3, [pc, #436]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d063      	beq.n	8002ade <HAL_RCC_GetSysClockFreq+0x11e>
 8002a16:	4b6a      	ldr	r3, [pc, #424]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 8002a18:	685b      	ldr	r3, [r3, #4]
 8002a1a:	099b      	lsrs	r3, r3, #6
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002a20:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8002a22:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002a24:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a28:	633b      	str	r3, [r7, #48]	@ 0x30
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	637b      	str	r3, [r7, #52]	@ 0x34
 8002a2e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8002a32:	4622      	mov	r2, r4
 8002a34:	462b      	mov	r3, r5
 8002a36:	f04f 0000 	mov.w	r0, #0
 8002a3a:	f04f 0100 	mov.w	r1, #0
 8002a3e:	0159      	lsls	r1, r3, #5
 8002a40:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002a44:	0150      	lsls	r0, r2, #5
 8002a46:	4602      	mov	r2, r0
 8002a48:	460b      	mov	r3, r1
 8002a4a:	4621      	mov	r1, r4
 8002a4c:	1a51      	subs	r1, r2, r1
 8002a4e:	6139      	str	r1, [r7, #16]
 8002a50:	4629      	mov	r1, r5
 8002a52:	eb63 0301 	sbc.w	r3, r3, r1
 8002a56:	617b      	str	r3, [r7, #20]
 8002a58:	f04f 0200 	mov.w	r2, #0
 8002a5c:	f04f 0300 	mov.w	r3, #0
 8002a60:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002a64:	4659      	mov	r1, fp
 8002a66:	018b      	lsls	r3, r1, #6
 8002a68:	4651      	mov	r1, sl
 8002a6a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002a6e:	4651      	mov	r1, sl
 8002a70:	018a      	lsls	r2, r1, #6
 8002a72:	4651      	mov	r1, sl
 8002a74:	ebb2 0801 	subs.w	r8, r2, r1
 8002a78:	4659      	mov	r1, fp
 8002a7a:	eb63 0901 	sbc.w	r9, r3, r1
 8002a7e:	f04f 0200 	mov.w	r2, #0
 8002a82:	f04f 0300 	mov.w	r3, #0
 8002a86:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002a8a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002a8e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002a92:	4690      	mov	r8, r2
 8002a94:	4699      	mov	r9, r3
 8002a96:	4623      	mov	r3, r4
 8002a98:	eb18 0303 	adds.w	r3, r8, r3
 8002a9c:	60bb      	str	r3, [r7, #8]
 8002a9e:	462b      	mov	r3, r5
 8002aa0:	eb49 0303 	adc.w	r3, r9, r3
 8002aa4:	60fb      	str	r3, [r7, #12]
 8002aa6:	f04f 0200 	mov.w	r2, #0
 8002aaa:	f04f 0300 	mov.w	r3, #0
 8002aae:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002ab2:	4629      	mov	r1, r5
 8002ab4:	024b      	lsls	r3, r1, #9
 8002ab6:	4621      	mov	r1, r4
 8002ab8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002abc:	4621      	mov	r1, r4
 8002abe:	024a      	lsls	r2, r1, #9
 8002ac0:	4610      	mov	r0, r2
 8002ac2:	4619      	mov	r1, r3
 8002ac4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002aca:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002acc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8002ad0:	f7fd fbde 	bl	8000290 <__aeabi_uldivmod>
 8002ad4:	4602      	mov	r2, r0
 8002ad6:	460b      	mov	r3, r1
 8002ad8:	4613      	mov	r3, r2
 8002ada:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002adc:	e058      	b.n	8002b90 <HAL_RCC_GetSysClockFreq+0x1d0>
 8002ade:	4b38      	ldr	r3, [pc, #224]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ae0:	685b      	ldr	r3, [r3, #4]
 8002ae2:	099b      	lsrs	r3, r3, #6
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	4618      	mov	r0, r3
 8002ae8:	4611      	mov	r1, r2
 8002aea:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002aee:	623b      	str	r3, [r7, #32]
 8002af0:	2300      	movs	r3, #0
 8002af2:	627b      	str	r3, [r7, #36]	@ 0x24
 8002af4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002af8:	4642      	mov	r2, r8
 8002afa:	464b      	mov	r3, r9
 8002afc:	f04f 0000 	mov.w	r0, #0
 8002b00:	f04f 0100 	mov.w	r1, #0
 8002b04:	0159      	lsls	r1, r3, #5
 8002b06:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002b0a:	0150      	lsls	r0, r2, #5
 8002b0c:	4602      	mov	r2, r0
 8002b0e:	460b      	mov	r3, r1
 8002b10:	4641      	mov	r1, r8
 8002b12:	ebb2 0a01 	subs.w	sl, r2, r1
 8002b16:	4649      	mov	r1, r9
 8002b18:	eb63 0b01 	sbc.w	fp, r3, r1
 8002b1c:	f04f 0200 	mov.w	r2, #0
 8002b20:	f04f 0300 	mov.w	r3, #0
 8002b24:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002b28:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002b2c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002b30:	ebb2 040a 	subs.w	r4, r2, sl
 8002b34:	eb63 050b 	sbc.w	r5, r3, fp
 8002b38:	f04f 0200 	mov.w	r2, #0
 8002b3c:	f04f 0300 	mov.w	r3, #0
 8002b40:	00eb      	lsls	r3, r5, #3
 8002b42:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002b46:	00e2      	lsls	r2, r4, #3
 8002b48:	4614      	mov	r4, r2
 8002b4a:	461d      	mov	r5, r3
 8002b4c:	4643      	mov	r3, r8
 8002b4e:	18e3      	adds	r3, r4, r3
 8002b50:	603b      	str	r3, [r7, #0]
 8002b52:	464b      	mov	r3, r9
 8002b54:	eb45 0303 	adc.w	r3, r5, r3
 8002b58:	607b      	str	r3, [r7, #4]
 8002b5a:	f04f 0200 	mov.w	r2, #0
 8002b5e:	f04f 0300 	mov.w	r3, #0
 8002b62:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002b66:	4629      	mov	r1, r5
 8002b68:	028b      	lsls	r3, r1, #10
 8002b6a:	4621      	mov	r1, r4
 8002b6c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002b70:	4621      	mov	r1, r4
 8002b72:	028a      	lsls	r2, r1, #10
 8002b74:	4610      	mov	r0, r2
 8002b76:	4619      	mov	r1, r3
 8002b78:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	61bb      	str	r3, [r7, #24]
 8002b7e:	61fa      	str	r2, [r7, #28]
 8002b80:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002b84:	f7fd fb84 	bl	8000290 <__aeabi_uldivmod>
 8002b88:	4602      	mov	r2, r0
 8002b8a:	460b      	mov	r3, r1
 8002b8c:	4613      	mov	r3, r2
 8002b8e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002b90:	4b0b      	ldr	r3, [pc, #44]	@ (8002bc0 <HAL_RCC_GetSysClockFreq+0x200>)
 8002b92:	685b      	ldr	r3, [r3, #4]
 8002b94:	0c1b      	lsrs	r3, r3, #16
 8002b96:	f003 0303 	and.w	r3, r3, #3
 8002b9a:	3301      	adds	r3, #1
 8002b9c:	005b      	lsls	r3, r3, #1
 8002b9e:	643b      	str	r3, [r7, #64]	@ 0x40
 8002ba0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002ba2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8002ba4:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ba8:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002baa:	e002      	b.n	8002bb2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8002bac:	4b05      	ldr	r3, [pc, #20]	@ (8002bc4 <HAL_RCC_GetSysClockFreq+0x204>)
 8002bae:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002bb0:	bf00      	nop
 8002bb2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	3750      	adds	r7, #80	@ 0x50
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002bbe:	bf00      	nop
 8002bc0:	40023800 	.word	0x40023800
 8002bc4:	00f42400 	.word	0x00f42400
 8002bc8:	007a1200 	.word	0x007a1200

08002bcc <HAL_RCC_GetHCLKFreq>:
 8002bcc:	b480      	push	{r7}
 8002bce:	af00      	add	r7, sp, #0
 8002bd0:	4b03      	ldr	r3, [pc, #12]	@ (8002be0 <HAL_RCC_GetHCLKFreq+0x14>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bdc:	4770      	bx	lr
 8002bde:	bf00      	nop
 8002be0:	20000034 	.word	0x20000034

08002be4 <HAL_RCC_GetPCLK1Freq>:
 8002be4:	b580      	push	{r7, lr}
 8002be6:	af00      	add	r7, sp, #0
 8002be8:	f7ff fff0 	bl	8002bcc <HAL_RCC_GetHCLKFreq>
 8002bec:	4602      	mov	r2, r0
 8002bee:	4b05      	ldr	r3, [pc, #20]	@ (8002c04 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002bf0:	689b      	ldr	r3, [r3, #8]
 8002bf2:	0a9b      	lsrs	r3, r3, #10
 8002bf4:	f003 0307 	and.w	r3, r3, #7
 8002bf8:	4903      	ldr	r1, [pc, #12]	@ (8002c08 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002bfa:	5ccb      	ldrb	r3, [r1, r3]
 8002bfc:	fa22 f303 	lsr.w	r3, r2, r3
 8002c00:	4618      	mov	r0, r3
 8002c02:	bd80      	pop	{r7, pc}
 8002c04:	40023800 	.word	0x40023800
 8002c08:	08004a88 	.word	0x08004a88

08002c0c <HAL_RCC_GetPCLK2Freq>:
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	af00      	add	r7, sp, #0
 8002c10:	f7ff ffdc 	bl	8002bcc <HAL_RCC_GetHCLKFreq>
 8002c14:	4602      	mov	r2, r0
 8002c16:	4b05      	ldr	r3, [pc, #20]	@ (8002c2c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002c18:	689b      	ldr	r3, [r3, #8]
 8002c1a:	0b5b      	lsrs	r3, r3, #13
 8002c1c:	f003 0307 	and.w	r3, r3, #7
 8002c20:	4903      	ldr	r1, [pc, #12]	@ (8002c30 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002c22:	5ccb      	ldrb	r3, [r1, r3]
 8002c24:	fa22 f303 	lsr.w	r3, r2, r3
 8002c28:	4618      	mov	r0, r3
 8002c2a:	bd80      	pop	{r7, pc}
 8002c2c:	40023800 	.word	0x40023800
 8002c30:	08004a88 	.word	0x08004a88

08002c34 <HAL_UART_Init>:
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b082      	sub	sp, #8
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d101      	bne.n	8002c46 <HAL_UART_Init+0x12>
 8002c42:	2301      	movs	r3, #1
 8002c44:	e042      	b.n	8002ccc <HAL_UART_Init+0x98>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002c4c:	b2db      	uxtb	r3, r3
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d106      	bne.n	8002c60 <HAL_UART_Init+0x2c>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2200      	movs	r2, #0
 8002c56:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002c5a:	6878      	ldr	r0, [r7, #4]
 8002c5c:	f7fe f9ae 	bl	8000fbc <HAL_UART_MspInit>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	2224      	movs	r2, #36	@ 0x24
 8002c64:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	68da      	ldr	r2, [r3, #12]
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002c76:	60da      	str	r2, [r3, #12]
 8002c78:	6878      	ldr	r0, [r7, #4]
 8002c7a:	f000 f9d1 	bl	8003020 <UART_SetConfig>
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	691a      	ldr	r2, [r3, #16]
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002c8c:	611a      	str	r2, [r3, #16]
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	695a      	ldr	r2, [r3, #20]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002c9c:	615a      	str	r2, [r3, #20]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	68da      	ldr	r2, [r3, #12]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002cac:	60da      	str	r2, [r3, #12]
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	645a      	str	r2, [r3, #68]	@ 0x44
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	2220      	movs	r2, #32
 8002cb8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	2220      	movs	r2, #32
 8002cc0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	635a      	str	r2, [r3, #52]	@ 0x34
 8002cca:	2300      	movs	r3, #0
 8002ccc:	4618      	mov	r0, r3
 8002cce:	3708      	adds	r7, #8
 8002cd0:	46bd      	mov	sp, r7
 8002cd2:	bd80      	pop	{r7, pc}

08002cd4 <HAL_UART_Transmit>:
 8002cd4:	b580      	push	{r7, lr}
 8002cd6:	b08a      	sub	sp, #40	@ 0x28
 8002cd8:	af02      	add	r7, sp, #8
 8002cda:	60f8      	str	r0, [r7, #12]
 8002cdc:	60b9      	str	r1, [r7, #8]
 8002cde:	603b      	str	r3, [r7, #0]
 8002ce0:	4613      	mov	r3, r2
 8002ce2:	80fb      	strh	r3, [r7, #6]
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	617b      	str	r3, [r7, #20]
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002cee:	b2db      	uxtb	r3, r3
 8002cf0:	2b20      	cmp	r3, #32
 8002cf2:	d175      	bne.n	8002de0 <HAL_UART_Transmit+0x10c>
 8002cf4:	68bb      	ldr	r3, [r7, #8]
 8002cf6:	2b00      	cmp	r3, #0
 8002cf8:	d002      	beq.n	8002d00 <HAL_UART_Transmit+0x2c>
 8002cfa:	88fb      	ldrh	r3, [r7, #6]
 8002cfc:	2b00      	cmp	r3, #0
 8002cfe:	d101      	bne.n	8002d04 <HAL_UART_Transmit+0x30>
 8002d00:	2301      	movs	r3, #1
 8002d02:	e06e      	b.n	8002de2 <HAL_UART_Transmit+0x10e>
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	2200      	movs	r2, #0
 8002d08:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	2221      	movs	r2, #33	@ 0x21
 8002d0e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002d12:	f7fe fb87 	bl	8001424 <HAL_GetTick>
 8002d16:	6178      	str	r0, [r7, #20]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	88fa      	ldrh	r2, [r7, #6]
 8002d1c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002d1e:	68fb      	ldr	r3, [r7, #12]
 8002d20:	88fa      	ldrh	r2, [r7, #6]
 8002d22:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	689b      	ldr	r3, [r3, #8]
 8002d28:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002d2c:	d108      	bne.n	8002d40 <HAL_UART_Transmit+0x6c>
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	691b      	ldr	r3, [r3, #16]
 8002d32:	2b00      	cmp	r3, #0
 8002d34:	d104      	bne.n	8002d40 <HAL_UART_Transmit+0x6c>
 8002d36:	2300      	movs	r3, #0
 8002d38:	61fb      	str	r3, [r7, #28]
 8002d3a:	68bb      	ldr	r3, [r7, #8]
 8002d3c:	61bb      	str	r3, [r7, #24]
 8002d3e:	e003      	b.n	8002d48 <HAL_UART_Transmit+0x74>
 8002d40:	68bb      	ldr	r3, [r7, #8]
 8002d42:	61fb      	str	r3, [r7, #28]
 8002d44:	2300      	movs	r3, #0
 8002d46:	61bb      	str	r3, [r7, #24]
 8002d48:	e02e      	b.n	8002da8 <HAL_UART_Transmit+0xd4>
 8002d4a:	683b      	ldr	r3, [r7, #0]
 8002d4c:	9300      	str	r3, [sp, #0]
 8002d4e:	697b      	ldr	r3, [r7, #20]
 8002d50:	2200      	movs	r2, #0
 8002d52:	2180      	movs	r1, #128	@ 0x80
 8002d54:	68f8      	ldr	r0, [r7, #12]
 8002d56:	f000 f86d 	bl	8002e34 <UART_WaitOnFlagUntilTimeout>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d005      	beq.n	8002d6c <HAL_UART_Transmit+0x98>
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	2220      	movs	r2, #32
 8002d64:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e03a      	b.n	8002de2 <HAL_UART_Transmit+0x10e>
 8002d6c:	69fb      	ldr	r3, [r7, #28]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d10b      	bne.n	8002d8a <HAL_UART_Transmit+0xb6>
 8002d72:	69bb      	ldr	r3, [r7, #24]
 8002d74:	881b      	ldrh	r3, [r3, #0]
 8002d76:	461a      	mov	r2, r3
 8002d78:	68fb      	ldr	r3, [r7, #12]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002d80:	605a      	str	r2, [r3, #4]
 8002d82:	69bb      	ldr	r3, [r7, #24]
 8002d84:	3302      	adds	r3, #2
 8002d86:	61bb      	str	r3, [r7, #24]
 8002d88:	e007      	b.n	8002d9a <HAL_UART_Transmit+0xc6>
 8002d8a:	69fb      	ldr	r3, [r7, #28]
 8002d8c:	781a      	ldrb	r2, [r3, #0]
 8002d8e:	68fb      	ldr	r3, [r7, #12]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	605a      	str	r2, [r3, #4]
 8002d94:	69fb      	ldr	r3, [r7, #28]
 8002d96:	3301      	adds	r3, #1
 8002d98:	61fb      	str	r3, [r7, #28]
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002d9e:	b29b      	uxth	r3, r3
 8002da0:	3b01      	subs	r3, #1
 8002da2:	b29a      	uxth	r2, r3
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002dac:	b29b      	uxth	r3, r3
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d1cb      	bne.n	8002d4a <HAL_UART_Transmit+0x76>
 8002db2:	683b      	ldr	r3, [r7, #0]
 8002db4:	9300      	str	r3, [sp, #0]
 8002db6:	697b      	ldr	r3, [r7, #20]
 8002db8:	2200      	movs	r2, #0
 8002dba:	2140      	movs	r1, #64	@ 0x40
 8002dbc:	68f8      	ldr	r0, [r7, #12]
 8002dbe:	f000 f839 	bl	8002e34 <UART_WaitOnFlagUntilTimeout>
 8002dc2:	4603      	mov	r3, r0
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d005      	beq.n	8002dd4 <HAL_UART_Transmit+0x100>
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	2220      	movs	r2, #32
 8002dcc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002dd0:	2303      	movs	r3, #3
 8002dd2:	e006      	b.n	8002de2 <HAL_UART_Transmit+0x10e>
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	2220      	movs	r2, #32
 8002dd8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002ddc:	2300      	movs	r3, #0
 8002dde:	e000      	b.n	8002de2 <HAL_UART_Transmit+0x10e>
 8002de0:	2302      	movs	r3, #2
 8002de2:	4618      	mov	r0, r3
 8002de4:	3720      	adds	r7, #32
 8002de6:	46bd      	mov	sp, r7
 8002de8:	bd80      	pop	{r7, pc}

08002dea <HAL_UART_Receive_IT>:
 8002dea:	b580      	push	{r7, lr}
 8002dec:	b084      	sub	sp, #16
 8002dee:	af00      	add	r7, sp, #0
 8002df0:	60f8      	str	r0, [r7, #12]
 8002df2:	60b9      	str	r1, [r7, #8]
 8002df4:	4613      	mov	r3, r2
 8002df6:	80fb      	strh	r3, [r7, #6]
 8002df8:	68fb      	ldr	r3, [r7, #12]
 8002dfa:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002dfe:	b2db      	uxtb	r3, r3
 8002e00:	2b20      	cmp	r3, #32
 8002e02:	d112      	bne.n	8002e2a <HAL_UART_Receive_IT+0x40>
 8002e04:	68bb      	ldr	r3, [r7, #8]
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d002      	beq.n	8002e10 <HAL_UART_Receive_IT+0x26>
 8002e0a:	88fb      	ldrh	r3, [r7, #6]
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d101      	bne.n	8002e14 <HAL_UART_Receive_IT+0x2a>
 8002e10:	2301      	movs	r3, #1
 8002e12:	e00b      	b.n	8002e2c <HAL_UART_Receive_IT+0x42>
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	2200      	movs	r2, #0
 8002e18:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e1a:	88fb      	ldrh	r3, [r7, #6]
 8002e1c:	461a      	mov	r2, r3
 8002e1e:	68b9      	ldr	r1, [r7, #8]
 8002e20:	68f8      	ldr	r0, [r7, #12]
 8002e22:	f000 f860 	bl	8002ee6 <UART_Start_Receive_IT>
 8002e26:	4603      	mov	r3, r0
 8002e28:	e000      	b.n	8002e2c <HAL_UART_Receive_IT+0x42>
 8002e2a:	2302      	movs	r3, #2
 8002e2c:	4618      	mov	r0, r3
 8002e2e:	3710      	adds	r7, #16
 8002e30:	46bd      	mov	sp, r7
 8002e32:	bd80      	pop	{r7, pc}

08002e34 <UART_WaitOnFlagUntilTimeout>:
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b086      	sub	sp, #24
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	60f8      	str	r0, [r7, #12]
 8002e3c:	60b9      	str	r1, [r7, #8]
 8002e3e:	603b      	str	r3, [r7, #0]
 8002e40:	4613      	mov	r3, r2
 8002e42:	71fb      	strb	r3, [r7, #7]
 8002e44:	e03b      	b.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e46:	6a3b      	ldr	r3, [r7, #32]
 8002e48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e4c:	d037      	beq.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e4e:	f7fe fae9 	bl	8001424 <HAL_GetTick>
 8002e52:	4602      	mov	r2, r0
 8002e54:	683b      	ldr	r3, [r7, #0]
 8002e56:	1ad3      	subs	r3, r2, r3
 8002e58:	6a3a      	ldr	r2, [r7, #32]
 8002e5a:	429a      	cmp	r2, r3
 8002e5c:	d302      	bcc.n	8002e64 <UART_WaitOnFlagUntilTimeout+0x30>
 8002e5e:	6a3b      	ldr	r3, [r7, #32]
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d101      	bne.n	8002e68 <UART_WaitOnFlagUntilTimeout+0x34>
 8002e64:	2303      	movs	r3, #3
 8002e66:	e03a      	b.n	8002ede <UART_WaitOnFlagUntilTimeout+0xaa>
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	68db      	ldr	r3, [r3, #12]
 8002e6e:	f003 0304 	and.w	r3, r3, #4
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d023      	beq.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e76:	68bb      	ldr	r3, [r7, #8]
 8002e78:	2b80      	cmp	r3, #128	@ 0x80
 8002e7a:	d020      	beq.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e7c:	68bb      	ldr	r3, [r7, #8]
 8002e7e:	2b40      	cmp	r3, #64	@ 0x40
 8002e80:	d01d      	beq.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e82:	68fb      	ldr	r3, [r7, #12]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	f003 0308 	and.w	r3, r3, #8
 8002e8c:	2b08      	cmp	r3, #8
 8002e8e:	d116      	bne.n	8002ebe <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e90:	2300      	movs	r3, #0
 8002e92:	617b      	str	r3, [r7, #20]
 8002e94:	68fb      	ldr	r3, [r7, #12]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	617b      	str	r3, [r7, #20]
 8002e9c:	68fb      	ldr	r3, [r7, #12]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	685b      	ldr	r3, [r3, #4]
 8002ea2:	617b      	str	r3, [r7, #20]
 8002ea4:	697b      	ldr	r3, [r7, #20]
 8002ea6:	68f8      	ldr	r0, [r7, #12]
 8002ea8:	f000 f857 	bl	8002f5a <UART_EndRxTransfer>
 8002eac:	68fb      	ldr	r3, [r7, #12]
 8002eae:	2208      	movs	r2, #8
 8002eb0:	645a      	str	r2, [r3, #68]	@ 0x44
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	2200      	movs	r2, #0
 8002eb6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002eba:	2301      	movs	r3, #1
 8002ebc:	e00f      	b.n	8002ede <UART_WaitOnFlagUntilTimeout+0xaa>
 8002ebe:	68fb      	ldr	r3, [r7, #12]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	681a      	ldr	r2, [r3, #0]
 8002ec4:	68bb      	ldr	r3, [r7, #8]
 8002ec6:	4013      	ands	r3, r2
 8002ec8:	68ba      	ldr	r2, [r7, #8]
 8002eca:	429a      	cmp	r2, r3
 8002ecc:	bf0c      	ite	eq
 8002ece:	2301      	moveq	r3, #1
 8002ed0:	2300      	movne	r3, #0
 8002ed2:	b2db      	uxtb	r3, r3
 8002ed4:	461a      	mov	r2, r3
 8002ed6:	79fb      	ldrb	r3, [r7, #7]
 8002ed8:	429a      	cmp	r2, r3
 8002eda:	d0b4      	beq.n	8002e46 <UART_WaitOnFlagUntilTimeout+0x12>
 8002edc:	2300      	movs	r3, #0
 8002ede:	4618      	mov	r0, r3
 8002ee0:	3718      	adds	r7, #24
 8002ee2:	46bd      	mov	sp, r7
 8002ee4:	bd80      	pop	{r7, pc}

08002ee6 <UART_Start_Receive_IT>:
 8002ee6:	b480      	push	{r7}
 8002ee8:	b085      	sub	sp, #20
 8002eea:	af00      	add	r7, sp, #0
 8002eec:	60f8      	str	r0, [r7, #12]
 8002eee:	60b9      	str	r1, [r7, #8]
 8002ef0:	4613      	mov	r3, r2
 8002ef2:	80fb      	strh	r3, [r7, #6]
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	68ba      	ldr	r2, [r7, #8]
 8002ef8:	629a      	str	r2, [r3, #40]	@ 0x28
 8002efa:	68fb      	ldr	r3, [r7, #12]
 8002efc:	88fa      	ldrh	r2, [r7, #6]
 8002efe:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	88fa      	ldrh	r2, [r7, #6]
 8002f04:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	2200      	movs	r2, #0
 8002f0a:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	2222      	movs	r2, #34	@ 0x22
 8002f10:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002f14:	68fb      	ldr	r3, [r7, #12]
 8002f16:	691b      	ldr	r3, [r3, #16]
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d007      	beq.n	8002f2c <UART_Start_Receive_IT+0x46>
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	68da      	ldr	r2, [r3, #12]
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002f2a:	60da      	str	r2, [r3, #12]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	695a      	ldr	r2, [r3, #20]
 8002f32:	68fb      	ldr	r3, [r7, #12]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	f042 0201 	orr.w	r2, r2, #1
 8002f3a:	615a      	str	r2, [r3, #20]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	68da      	ldr	r2, [r3, #12]
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	f042 0220 	orr.w	r2, r2, #32
 8002f4a:	60da      	str	r2, [r3, #12]
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	4618      	mov	r0, r3
 8002f50:	3714      	adds	r7, #20
 8002f52:	46bd      	mov	sp, r7
 8002f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f58:	4770      	bx	lr

08002f5a <UART_EndRxTransfer>:
 8002f5a:	b480      	push	{r7}
 8002f5c:	b095      	sub	sp, #84	@ 0x54
 8002f5e:	af00      	add	r7, sp, #0
 8002f60:	6078      	str	r0, [r7, #4]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	330c      	adds	r3, #12
 8002f68:	637b      	str	r3, [r7, #52]	@ 0x34
 8002f6a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002f6c:	e853 3f00 	ldrex	r3, [r3]
 8002f70:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f72:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f74:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8002f78:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	330c      	adds	r3, #12
 8002f80:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002f82:	643a      	str	r2, [r7, #64]	@ 0x40
 8002f84:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002f86:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002f88:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8002f8a:	e841 2300 	strex	r3, r2, [r1]
 8002f8e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002f90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d1e5      	bne.n	8002f62 <UART_EndRxTransfer+0x8>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	3314      	adds	r3, #20
 8002f9c:	623b      	str	r3, [r7, #32]
 8002f9e:	6a3b      	ldr	r3, [r7, #32]
 8002fa0:	e853 3f00 	ldrex	r3, [r3]
 8002fa4:	61fb      	str	r3, [r7, #28]
 8002fa6:	69fb      	ldr	r3, [r7, #28]
 8002fa8:	f023 0301 	bic.w	r3, r3, #1
 8002fac:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	3314      	adds	r3, #20
 8002fb4:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8002fb6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002fb8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002fba:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002fbc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002fbe:	e841 2300 	strex	r3, r2, [r1]
 8002fc2:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	d1e5      	bne.n	8002f96 <UART_EndRxTransfer+0x3c>
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fce:	2b01      	cmp	r3, #1
 8002fd0:	d119      	bne.n	8003006 <UART_EndRxTransfer+0xac>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	330c      	adds	r3, #12
 8002fd8:	60fb      	str	r3, [r7, #12]
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	e853 3f00 	ldrex	r3, [r3]
 8002fe0:	60bb      	str	r3, [r7, #8]
 8002fe2:	68bb      	ldr	r3, [r7, #8]
 8002fe4:	f023 0310 	bic.w	r3, r3, #16
 8002fe8:	647b      	str	r3, [r7, #68]	@ 0x44
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	330c      	adds	r3, #12
 8002ff0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002ff2:	61ba      	str	r2, [r7, #24]
 8002ff4:	617b      	str	r3, [r7, #20]
 8002ff6:	6979      	ldr	r1, [r7, #20]
 8002ff8:	69ba      	ldr	r2, [r7, #24]
 8002ffa:	e841 2300 	strex	r3, r2, [r1]
 8002ffe:	613b      	str	r3, [r7, #16]
 8003000:	693b      	ldr	r3, [r7, #16]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d1e5      	bne.n	8002fd2 <UART_EndRxTransfer+0x78>
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	2220      	movs	r2, #32
 800300a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	2200      	movs	r2, #0
 8003012:	631a      	str	r2, [r3, #48]	@ 0x30
 8003014:	bf00      	nop
 8003016:	3754      	adds	r7, #84	@ 0x54
 8003018:	46bd      	mov	sp, r7
 800301a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800301e:	4770      	bx	lr

08003020 <UART_SetConfig>:
 8003020:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003024:	b0c0      	sub	sp, #256	@ 0x100
 8003026:	af00      	add	r7, sp, #0
 8003028:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 800302c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	691b      	ldr	r3, [r3, #16]
 8003034:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003038:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800303c:	68d9      	ldr	r1, [r3, #12]
 800303e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003042:	681a      	ldr	r2, [r3, #0]
 8003044:	ea40 0301 	orr.w	r3, r0, r1
 8003048:	6113      	str	r3, [r2, #16]
 800304a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800304e:	689a      	ldr	r2, [r3, #8]
 8003050:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003054:	691b      	ldr	r3, [r3, #16]
 8003056:	431a      	orrs	r2, r3
 8003058:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800305c:	695b      	ldr	r3, [r3, #20]
 800305e:	431a      	orrs	r2, r3
 8003060:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003064:	69db      	ldr	r3, [r3, #28]
 8003066:	4313      	orrs	r3, r2
 8003068:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800306c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	68db      	ldr	r3, [r3, #12]
 8003074:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003078:	f021 010c 	bic.w	r1, r1, #12
 800307c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003080:	681a      	ldr	r2, [r3, #0]
 8003082:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003086:	430b      	orrs	r3, r1
 8003088:	60d3      	str	r3, [r2, #12]
 800308a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	695b      	ldr	r3, [r3, #20]
 8003092:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8003096:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800309a:	6999      	ldr	r1, [r3, #24]
 800309c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80030a0:	681a      	ldr	r2, [r3, #0]
 80030a2:	ea40 0301 	orr.w	r3, r0, r1
 80030a6:	6153      	str	r3, [r2, #20]
 80030a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80030ac:	681a      	ldr	r2, [r3, #0]
 80030ae:	4b8f      	ldr	r3, [pc, #572]	@ (80032ec <UART_SetConfig+0x2cc>)
 80030b0:	429a      	cmp	r2, r3
 80030b2:	d005      	beq.n	80030c0 <UART_SetConfig+0xa0>
 80030b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80030b8:	681a      	ldr	r2, [r3, #0]
 80030ba:	4b8d      	ldr	r3, [pc, #564]	@ (80032f0 <UART_SetConfig+0x2d0>)
 80030bc:	429a      	cmp	r2, r3
 80030be:	d104      	bne.n	80030ca <UART_SetConfig+0xaa>
 80030c0:	f7ff fda4 	bl	8002c0c <HAL_RCC_GetPCLK2Freq>
 80030c4:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80030c8:	e003      	b.n	80030d2 <UART_SetConfig+0xb2>
 80030ca:	f7ff fd8b 	bl	8002be4 <HAL_RCC_GetPCLK1Freq>
 80030ce:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80030d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80030d6:	69db      	ldr	r3, [r3, #28]
 80030d8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80030dc:	f040 810c 	bne.w	80032f8 <UART_SetConfig+0x2d8>
 80030e0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80030e4:	2200      	movs	r2, #0
 80030e6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80030ea:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80030ee:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80030f2:	4622      	mov	r2, r4
 80030f4:	462b      	mov	r3, r5
 80030f6:	1891      	adds	r1, r2, r2
 80030f8:	65b9      	str	r1, [r7, #88]	@ 0x58
 80030fa:	415b      	adcs	r3, r3
 80030fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80030fe:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003102:	4621      	mov	r1, r4
 8003104:	eb12 0801 	adds.w	r8, r2, r1
 8003108:	4629      	mov	r1, r5
 800310a:	eb43 0901 	adc.w	r9, r3, r1
 800310e:	f04f 0200 	mov.w	r2, #0
 8003112:	f04f 0300 	mov.w	r3, #0
 8003116:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800311a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800311e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003122:	4690      	mov	r8, r2
 8003124:	4699      	mov	r9, r3
 8003126:	4623      	mov	r3, r4
 8003128:	eb18 0303 	adds.w	r3, r8, r3
 800312c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003130:	462b      	mov	r3, r5
 8003132:	eb49 0303 	adc.w	r3, r9, r3
 8003136:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800313a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800313e:	685b      	ldr	r3, [r3, #4]
 8003140:	2200      	movs	r2, #0
 8003142:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003146:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800314a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800314e:	460b      	mov	r3, r1
 8003150:	18db      	adds	r3, r3, r3
 8003152:	653b      	str	r3, [r7, #80]	@ 0x50
 8003154:	4613      	mov	r3, r2
 8003156:	eb42 0303 	adc.w	r3, r2, r3
 800315a:	657b      	str	r3, [r7, #84]	@ 0x54
 800315c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8003160:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003164:	f7fd f894 	bl	8000290 <__aeabi_uldivmod>
 8003168:	4602      	mov	r2, r0
 800316a:	460b      	mov	r3, r1
 800316c:	4b61      	ldr	r3, [pc, #388]	@ (80032f4 <UART_SetConfig+0x2d4>)
 800316e:	fba3 2302 	umull	r2, r3, r3, r2
 8003172:	095b      	lsrs	r3, r3, #5
 8003174:	011c      	lsls	r4, r3, #4
 8003176:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800317a:	2200      	movs	r2, #0
 800317c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003180:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8003184:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8003188:	4642      	mov	r2, r8
 800318a:	464b      	mov	r3, r9
 800318c:	1891      	adds	r1, r2, r2
 800318e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8003190:	415b      	adcs	r3, r3
 8003192:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003194:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8003198:	4641      	mov	r1, r8
 800319a:	eb12 0a01 	adds.w	sl, r2, r1
 800319e:	4649      	mov	r1, r9
 80031a0:	eb43 0b01 	adc.w	fp, r3, r1
 80031a4:	f04f 0200 	mov.w	r2, #0
 80031a8:	f04f 0300 	mov.w	r3, #0
 80031ac:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80031b0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80031b4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80031b8:	4692      	mov	sl, r2
 80031ba:	469b      	mov	fp, r3
 80031bc:	4643      	mov	r3, r8
 80031be:	eb1a 0303 	adds.w	r3, sl, r3
 80031c2:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80031c6:	464b      	mov	r3, r9
 80031c8:	eb4b 0303 	adc.w	r3, fp, r3
 80031cc:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80031d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80031d4:	685b      	ldr	r3, [r3, #4]
 80031d6:	2200      	movs	r2, #0
 80031d8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80031dc:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80031e0:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80031e4:	460b      	mov	r3, r1
 80031e6:	18db      	adds	r3, r3, r3
 80031e8:	643b      	str	r3, [r7, #64]	@ 0x40
 80031ea:	4613      	mov	r3, r2
 80031ec:	eb42 0303 	adc.w	r3, r2, r3
 80031f0:	647b      	str	r3, [r7, #68]	@ 0x44
 80031f2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80031f6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80031fa:	f7fd f849 	bl	8000290 <__aeabi_uldivmod>
 80031fe:	4602      	mov	r2, r0
 8003200:	460b      	mov	r3, r1
 8003202:	4611      	mov	r1, r2
 8003204:	4b3b      	ldr	r3, [pc, #236]	@ (80032f4 <UART_SetConfig+0x2d4>)
 8003206:	fba3 2301 	umull	r2, r3, r3, r1
 800320a:	095b      	lsrs	r3, r3, #5
 800320c:	2264      	movs	r2, #100	@ 0x64
 800320e:	fb02 f303 	mul.w	r3, r2, r3
 8003212:	1acb      	subs	r3, r1, r3
 8003214:	00db      	lsls	r3, r3, #3
 8003216:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800321a:	4b36      	ldr	r3, [pc, #216]	@ (80032f4 <UART_SetConfig+0x2d4>)
 800321c:	fba3 2302 	umull	r2, r3, r3, r2
 8003220:	095b      	lsrs	r3, r3, #5
 8003222:	005b      	lsls	r3, r3, #1
 8003224:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003228:	441c      	add	r4, r3
 800322a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800322e:	2200      	movs	r2, #0
 8003230:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003234:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8003238:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 800323c:	4642      	mov	r2, r8
 800323e:	464b      	mov	r3, r9
 8003240:	1891      	adds	r1, r2, r2
 8003242:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003244:	415b      	adcs	r3, r3
 8003246:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003248:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 800324c:	4641      	mov	r1, r8
 800324e:	1851      	adds	r1, r2, r1
 8003250:	6339      	str	r1, [r7, #48]	@ 0x30
 8003252:	4649      	mov	r1, r9
 8003254:	414b      	adcs	r3, r1
 8003256:	637b      	str	r3, [r7, #52]	@ 0x34
 8003258:	f04f 0200 	mov.w	r2, #0
 800325c:	f04f 0300 	mov.w	r3, #0
 8003260:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003264:	4659      	mov	r1, fp
 8003266:	00cb      	lsls	r3, r1, #3
 8003268:	4651      	mov	r1, sl
 800326a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800326e:	4651      	mov	r1, sl
 8003270:	00ca      	lsls	r2, r1, #3
 8003272:	4610      	mov	r0, r2
 8003274:	4619      	mov	r1, r3
 8003276:	4603      	mov	r3, r0
 8003278:	4642      	mov	r2, r8
 800327a:	189b      	adds	r3, r3, r2
 800327c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003280:	464b      	mov	r3, r9
 8003282:	460a      	mov	r2, r1
 8003284:	eb42 0303 	adc.w	r3, r2, r3
 8003288:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800328c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003290:	685b      	ldr	r3, [r3, #4]
 8003292:	2200      	movs	r2, #0
 8003294:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003298:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 800329c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80032a0:	460b      	mov	r3, r1
 80032a2:	18db      	adds	r3, r3, r3
 80032a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80032a6:	4613      	mov	r3, r2
 80032a8:	eb42 0303 	adc.w	r3, r2, r3
 80032ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80032ae:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80032b2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80032b6:	f7fc ffeb 	bl	8000290 <__aeabi_uldivmod>
 80032ba:	4602      	mov	r2, r0
 80032bc:	460b      	mov	r3, r1
 80032be:	4b0d      	ldr	r3, [pc, #52]	@ (80032f4 <UART_SetConfig+0x2d4>)
 80032c0:	fba3 1302 	umull	r1, r3, r3, r2
 80032c4:	095b      	lsrs	r3, r3, #5
 80032c6:	2164      	movs	r1, #100	@ 0x64
 80032c8:	fb01 f303 	mul.w	r3, r1, r3
 80032cc:	1ad3      	subs	r3, r2, r3
 80032ce:	00db      	lsls	r3, r3, #3
 80032d0:	3332      	adds	r3, #50	@ 0x32
 80032d2:	4a08      	ldr	r2, [pc, #32]	@ (80032f4 <UART_SetConfig+0x2d4>)
 80032d4:	fba2 2303 	umull	r2, r3, r2, r3
 80032d8:	095b      	lsrs	r3, r3, #5
 80032da:	f003 0207 	and.w	r2, r3, #7
 80032de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	4422      	add	r2, r4
 80032e6:	609a      	str	r2, [r3, #8]
 80032e8:	e106      	b.n	80034f8 <UART_SetConfig+0x4d8>
 80032ea:	bf00      	nop
 80032ec:	40011000 	.word	0x40011000
 80032f0:	40011400 	.word	0x40011400
 80032f4:	51eb851f 	.word	0x51eb851f
 80032f8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80032fc:	2200      	movs	r2, #0
 80032fe:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003302:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8003306:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800330a:	4642      	mov	r2, r8
 800330c:	464b      	mov	r3, r9
 800330e:	1891      	adds	r1, r2, r2
 8003310:	6239      	str	r1, [r7, #32]
 8003312:	415b      	adcs	r3, r3
 8003314:	627b      	str	r3, [r7, #36]	@ 0x24
 8003316:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800331a:	4641      	mov	r1, r8
 800331c:	1854      	adds	r4, r2, r1
 800331e:	4649      	mov	r1, r9
 8003320:	eb43 0501 	adc.w	r5, r3, r1
 8003324:	f04f 0200 	mov.w	r2, #0
 8003328:	f04f 0300 	mov.w	r3, #0
 800332c:	00eb      	lsls	r3, r5, #3
 800332e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003332:	00e2      	lsls	r2, r4, #3
 8003334:	4614      	mov	r4, r2
 8003336:	461d      	mov	r5, r3
 8003338:	4643      	mov	r3, r8
 800333a:	18e3      	adds	r3, r4, r3
 800333c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003340:	464b      	mov	r3, r9
 8003342:	eb45 0303 	adc.w	r3, r5, r3
 8003346:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800334a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	2200      	movs	r2, #0
 8003352:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003356:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800335a:	f04f 0200 	mov.w	r2, #0
 800335e:	f04f 0300 	mov.w	r3, #0
 8003362:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003366:	4629      	mov	r1, r5
 8003368:	008b      	lsls	r3, r1, #2
 800336a:	4621      	mov	r1, r4
 800336c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003370:	4621      	mov	r1, r4
 8003372:	008a      	lsls	r2, r1, #2
 8003374:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8003378:	f7fc ff8a 	bl	8000290 <__aeabi_uldivmod>
 800337c:	4602      	mov	r2, r0
 800337e:	460b      	mov	r3, r1
 8003380:	4b60      	ldr	r3, [pc, #384]	@ (8003504 <UART_SetConfig+0x4e4>)
 8003382:	fba3 2302 	umull	r2, r3, r3, r2
 8003386:	095b      	lsrs	r3, r3, #5
 8003388:	011c      	lsls	r4, r3, #4
 800338a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800338e:	2200      	movs	r2, #0
 8003390:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003394:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003398:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 800339c:	4642      	mov	r2, r8
 800339e:	464b      	mov	r3, r9
 80033a0:	1891      	adds	r1, r2, r2
 80033a2:	61b9      	str	r1, [r7, #24]
 80033a4:	415b      	adcs	r3, r3
 80033a6:	61fb      	str	r3, [r7, #28]
 80033a8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80033ac:	4641      	mov	r1, r8
 80033ae:	1851      	adds	r1, r2, r1
 80033b0:	6139      	str	r1, [r7, #16]
 80033b2:	4649      	mov	r1, r9
 80033b4:	414b      	adcs	r3, r1
 80033b6:	617b      	str	r3, [r7, #20]
 80033b8:	f04f 0200 	mov.w	r2, #0
 80033bc:	f04f 0300 	mov.w	r3, #0
 80033c0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80033c4:	4659      	mov	r1, fp
 80033c6:	00cb      	lsls	r3, r1, #3
 80033c8:	4651      	mov	r1, sl
 80033ca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80033ce:	4651      	mov	r1, sl
 80033d0:	00ca      	lsls	r2, r1, #3
 80033d2:	4610      	mov	r0, r2
 80033d4:	4619      	mov	r1, r3
 80033d6:	4603      	mov	r3, r0
 80033d8:	4642      	mov	r2, r8
 80033da:	189b      	adds	r3, r3, r2
 80033dc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80033e0:	464b      	mov	r3, r9
 80033e2:	460a      	mov	r2, r1
 80033e4:	eb42 0303 	adc.w	r3, r2, r3
 80033e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80033ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80033f0:	685b      	ldr	r3, [r3, #4]
 80033f2:	2200      	movs	r2, #0
 80033f4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80033f6:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80033f8:	f04f 0200 	mov.w	r2, #0
 80033fc:	f04f 0300 	mov.w	r3, #0
 8003400:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003404:	4649      	mov	r1, r9
 8003406:	008b      	lsls	r3, r1, #2
 8003408:	4641      	mov	r1, r8
 800340a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800340e:	4641      	mov	r1, r8
 8003410:	008a      	lsls	r2, r1, #2
 8003412:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8003416:	f7fc ff3b 	bl	8000290 <__aeabi_uldivmod>
 800341a:	4602      	mov	r2, r0
 800341c:	460b      	mov	r3, r1
 800341e:	4611      	mov	r1, r2
 8003420:	4b38      	ldr	r3, [pc, #224]	@ (8003504 <UART_SetConfig+0x4e4>)
 8003422:	fba3 2301 	umull	r2, r3, r3, r1
 8003426:	095b      	lsrs	r3, r3, #5
 8003428:	2264      	movs	r2, #100	@ 0x64
 800342a:	fb02 f303 	mul.w	r3, r2, r3
 800342e:	1acb      	subs	r3, r1, r3
 8003430:	011b      	lsls	r3, r3, #4
 8003432:	3332      	adds	r3, #50	@ 0x32
 8003434:	4a33      	ldr	r2, [pc, #204]	@ (8003504 <UART_SetConfig+0x4e4>)
 8003436:	fba2 2303 	umull	r2, r3, r2, r3
 800343a:	095b      	lsrs	r3, r3, #5
 800343c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003440:	441c      	add	r4, r3
 8003442:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003446:	2200      	movs	r2, #0
 8003448:	673b      	str	r3, [r7, #112]	@ 0x70
 800344a:	677a      	str	r2, [r7, #116]	@ 0x74
 800344c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003450:	4642      	mov	r2, r8
 8003452:	464b      	mov	r3, r9
 8003454:	1891      	adds	r1, r2, r2
 8003456:	60b9      	str	r1, [r7, #8]
 8003458:	415b      	adcs	r3, r3
 800345a:	60fb      	str	r3, [r7, #12]
 800345c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003460:	4641      	mov	r1, r8
 8003462:	1851      	adds	r1, r2, r1
 8003464:	6039      	str	r1, [r7, #0]
 8003466:	4649      	mov	r1, r9
 8003468:	414b      	adcs	r3, r1
 800346a:	607b      	str	r3, [r7, #4]
 800346c:	f04f 0200 	mov.w	r2, #0
 8003470:	f04f 0300 	mov.w	r3, #0
 8003474:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003478:	4659      	mov	r1, fp
 800347a:	00cb      	lsls	r3, r1, #3
 800347c:	4651      	mov	r1, sl
 800347e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003482:	4651      	mov	r1, sl
 8003484:	00ca      	lsls	r2, r1, #3
 8003486:	4610      	mov	r0, r2
 8003488:	4619      	mov	r1, r3
 800348a:	4603      	mov	r3, r0
 800348c:	4642      	mov	r2, r8
 800348e:	189b      	adds	r3, r3, r2
 8003490:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003492:	464b      	mov	r3, r9
 8003494:	460a      	mov	r2, r1
 8003496:	eb42 0303 	adc.w	r3, r2, r3
 800349a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800349c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80034a0:	685b      	ldr	r3, [r3, #4]
 80034a2:	2200      	movs	r2, #0
 80034a4:	663b      	str	r3, [r7, #96]	@ 0x60
 80034a6:	667a      	str	r2, [r7, #100]	@ 0x64
 80034a8:	f04f 0200 	mov.w	r2, #0
 80034ac:	f04f 0300 	mov.w	r3, #0
 80034b0:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80034b4:	4649      	mov	r1, r9
 80034b6:	008b      	lsls	r3, r1, #2
 80034b8:	4641      	mov	r1, r8
 80034ba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80034be:	4641      	mov	r1, r8
 80034c0:	008a      	lsls	r2, r1, #2
 80034c2:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80034c6:	f7fc fee3 	bl	8000290 <__aeabi_uldivmod>
 80034ca:	4602      	mov	r2, r0
 80034cc:	460b      	mov	r3, r1
 80034ce:	4b0d      	ldr	r3, [pc, #52]	@ (8003504 <UART_SetConfig+0x4e4>)
 80034d0:	fba3 1302 	umull	r1, r3, r3, r2
 80034d4:	095b      	lsrs	r3, r3, #5
 80034d6:	2164      	movs	r1, #100	@ 0x64
 80034d8:	fb01 f303 	mul.w	r3, r1, r3
 80034dc:	1ad3      	subs	r3, r2, r3
 80034de:	011b      	lsls	r3, r3, #4
 80034e0:	3332      	adds	r3, #50	@ 0x32
 80034e2:	4a08      	ldr	r2, [pc, #32]	@ (8003504 <UART_SetConfig+0x4e4>)
 80034e4:	fba2 2303 	umull	r2, r3, r2, r3
 80034e8:	095b      	lsrs	r3, r3, #5
 80034ea:	f003 020f 	and.w	r2, r3, #15
 80034ee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	4422      	add	r2, r4
 80034f6:	609a      	str	r2, [r3, #8]
 80034f8:	bf00      	nop
 80034fa:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80034fe:	46bd      	mov	sp, r7
 8003500:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003504:	51eb851f 	.word	0x51eb851f

08003508 <USB_CoreInit>:
 8003508:	b084      	sub	sp, #16
 800350a:	b580      	push	{r7, lr}
 800350c:	b084      	sub	sp, #16
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
 8003512:	f107 001c 	add.w	r0, r7, #28
 8003516:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800351a:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 800351e:	2b01      	cmp	r3, #1
 8003520:	d123      	bne.n	800356a <USB_CoreInit+0x62>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003526:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	639a      	str	r2, [r3, #56]	@ 0x38
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	68db      	ldr	r3, [r3, #12]
 8003532:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8003536:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800353a:	687a      	ldr	r2, [r7, #4]
 800353c:	60d3      	str	r3, [r2, #12]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	68db      	ldr	r3, [r3, #12]
 8003542:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	60da      	str	r2, [r3, #12]
 800354a:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800354e:	2b01      	cmp	r3, #1
 8003550:	d105      	bne.n	800355e <USB_CoreInit+0x56>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	68db      	ldr	r3, [r3, #12]
 8003556:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	60da      	str	r2, [r3, #12]
 800355e:	6878      	ldr	r0, [r7, #4]
 8003560:	f000 faa0 	bl	8003aa4 <USB_CoreReset>
 8003564:	4603      	mov	r3, r0
 8003566:	73fb      	strb	r3, [r7, #15]
 8003568:	e01b      	b.n	80035a2 <USB_CoreInit+0x9a>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	68db      	ldr	r3, [r3, #12]
 800356e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	60da      	str	r2, [r3, #12]
 8003576:	6878      	ldr	r0, [r7, #4]
 8003578:	f000 fa94 	bl	8003aa4 <USB_CoreReset>
 800357c:	4603      	mov	r3, r0
 800357e:	73fb      	strb	r3, [r7, #15]
 8003580:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8003584:	2b00      	cmp	r3, #0
 8003586:	d106      	bne.n	8003596 <USB_CoreInit+0x8e>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800358c:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	639a      	str	r2, [r3, #56]	@ 0x38
 8003594:	e005      	b.n	80035a2 <USB_CoreInit+0x9a>
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800359a:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	639a      	str	r2, [r3, #56]	@ 0x38
 80035a2:	7fbb      	ldrb	r3, [r7, #30]
 80035a4:	2b01      	cmp	r3, #1
 80035a6:	d10b      	bne.n	80035c0 <USB_CoreInit+0xb8>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	689b      	ldr	r3, [r3, #8]
 80035ac:	f043 0206 	orr.w	r2, r3, #6
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	609a      	str	r2, [r3, #8]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	689b      	ldr	r3, [r3, #8]
 80035b8:	f043 0220 	orr.w	r2, r3, #32
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	609a      	str	r2, [r3, #8]
 80035c0:	7bfb      	ldrb	r3, [r7, #15]
 80035c2:	4618      	mov	r0, r3
 80035c4:	3710      	adds	r7, #16
 80035c6:	46bd      	mov	sp, r7
 80035c8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80035cc:	b004      	add	sp, #16
 80035ce:	4770      	bx	lr

080035d0 <USB_DisableGlobalInt>:
 80035d0:	b480      	push	{r7}
 80035d2:	b083      	sub	sp, #12
 80035d4:	af00      	add	r7, sp, #0
 80035d6:	6078      	str	r0, [r7, #4]
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	689b      	ldr	r3, [r3, #8]
 80035dc:	f023 0201 	bic.w	r2, r3, #1
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	609a      	str	r2, [r3, #8]
 80035e4:	2300      	movs	r3, #0
 80035e6:	4618      	mov	r0, r3
 80035e8:	370c      	adds	r7, #12
 80035ea:	46bd      	mov	sp, r7
 80035ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f0:	4770      	bx	lr

080035f2 <USB_SetCurrentMode>:
 80035f2:	b580      	push	{r7, lr}
 80035f4:	b084      	sub	sp, #16
 80035f6:	af00      	add	r7, sp, #0
 80035f8:	6078      	str	r0, [r7, #4]
 80035fa:	460b      	mov	r3, r1
 80035fc:	70fb      	strb	r3, [r7, #3]
 80035fe:	2300      	movs	r3, #0
 8003600:	60fb      	str	r3, [r7, #12]
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	68db      	ldr	r3, [r3, #12]
 8003606:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	60da      	str	r2, [r3, #12]
 800360e:	78fb      	ldrb	r3, [r7, #3]
 8003610:	2b01      	cmp	r3, #1
 8003612:	d115      	bne.n	8003640 <USB_SetCurrentMode+0x4e>
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	68db      	ldr	r3, [r3, #12]
 8003618:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	60da      	str	r2, [r3, #12]
 8003620:	200a      	movs	r0, #10
 8003622:	f7fd ff0b 	bl	800143c <HAL_Delay>
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	330a      	adds	r3, #10
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	6878      	ldr	r0, [r7, #4]
 800362e:	f000 fa2b 	bl	8003a88 <USB_GetMode>
 8003632:	4603      	mov	r3, r0
 8003634:	2b01      	cmp	r3, #1
 8003636:	d01e      	beq.n	8003676 <USB_SetCurrentMode+0x84>
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	2bc7      	cmp	r3, #199	@ 0xc7
 800363c:	d9f0      	bls.n	8003620 <USB_SetCurrentMode+0x2e>
 800363e:	e01a      	b.n	8003676 <USB_SetCurrentMode+0x84>
 8003640:	78fb      	ldrb	r3, [r7, #3]
 8003642:	2b00      	cmp	r3, #0
 8003644:	d115      	bne.n	8003672 <USB_SetCurrentMode+0x80>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	68db      	ldr	r3, [r3, #12]
 800364a:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	60da      	str	r2, [r3, #12]
 8003652:	200a      	movs	r0, #10
 8003654:	f7fd fef2 	bl	800143c <HAL_Delay>
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	330a      	adds	r3, #10
 800365c:	60fb      	str	r3, [r7, #12]
 800365e:	6878      	ldr	r0, [r7, #4]
 8003660:	f000 fa12 	bl	8003a88 <USB_GetMode>
 8003664:	4603      	mov	r3, r0
 8003666:	2b00      	cmp	r3, #0
 8003668:	d005      	beq.n	8003676 <USB_SetCurrentMode+0x84>
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	2bc7      	cmp	r3, #199	@ 0xc7
 800366e:	d9f0      	bls.n	8003652 <USB_SetCurrentMode+0x60>
 8003670:	e001      	b.n	8003676 <USB_SetCurrentMode+0x84>
 8003672:	2301      	movs	r3, #1
 8003674:	e005      	b.n	8003682 <USB_SetCurrentMode+0x90>
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	2bc8      	cmp	r3, #200	@ 0xc8
 800367a:	d101      	bne.n	8003680 <USB_SetCurrentMode+0x8e>
 800367c:	2301      	movs	r3, #1
 800367e:	e000      	b.n	8003682 <USB_SetCurrentMode+0x90>
 8003680:	2300      	movs	r3, #0
 8003682:	4618      	mov	r0, r3
 8003684:	3710      	adds	r7, #16
 8003686:	46bd      	mov	sp, r7
 8003688:	bd80      	pop	{r7, pc}
	...

0800368c <USB_DevInit>:
 800368c:	b084      	sub	sp, #16
 800368e:	b580      	push	{r7, lr}
 8003690:	b086      	sub	sp, #24
 8003692:	af00      	add	r7, sp, #0
 8003694:	6078      	str	r0, [r7, #4]
 8003696:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 800369a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800369e:	2300      	movs	r3, #0
 80036a0:	75fb      	strb	r3, [r7, #23]
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	60fb      	str	r3, [r7, #12]
 80036a6:	2300      	movs	r3, #0
 80036a8:	613b      	str	r3, [r7, #16]
 80036aa:	e009      	b.n	80036c0 <USB_DevInit+0x34>
 80036ac:	687a      	ldr	r2, [r7, #4]
 80036ae:	693b      	ldr	r3, [r7, #16]
 80036b0:	3340      	adds	r3, #64	@ 0x40
 80036b2:	009b      	lsls	r3, r3, #2
 80036b4:	4413      	add	r3, r2
 80036b6:	2200      	movs	r2, #0
 80036b8:	605a      	str	r2, [r3, #4]
 80036ba:	693b      	ldr	r3, [r7, #16]
 80036bc:	3301      	adds	r3, #1
 80036be:	613b      	str	r3, [r7, #16]
 80036c0:	693b      	ldr	r3, [r7, #16]
 80036c2:	2b0e      	cmp	r3, #14
 80036c4:	d9f2      	bls.n	80036ac <USB_DevInit+0x20>
 80036c6:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	d11c      	bne.n	8003708 <USB_DevInit+0x7c>
 80036ce:	68fb      	ldr	r3, [r7, #12]
 80036d0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80036d4:	685b      	ldr	r3, [r3, #4]
 80036d6:	68fa      	ldr	r2, [r7, #12]
 80036d8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80036dc:	f043 0302 	orr.w	r3, r3, #2
 80036e0:	6053      	str	r3, [r2, #4]
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036e6:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	639a      	str	r2, [r3, #56]	@ 0x38
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036f2:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	639a      	str	r2, [r3, #56]	@ 0x38
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036fe:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	639a      	str	r2, [r3, #56]	@ 0x38
 8003706:	e00b      	b.n	8003720 <USB_DevInit+0x94>
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800370c:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	639a      	str	r2, [r3, #56]	@ 0x38
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003718:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	639a      	str	r2, [r3, #56]	@ 0x38
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8003726:	461a      	mov	r2, r3
 8003728:	2300      	movs	r3, #0
 800372a:	6013      	str	r3, [r2, #0]
 800372c:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8003730:	2b01      	cmp	r3, #1
 8003732:	d10d      	bne.n	8003750 <USB_DevInit+0xc4>
 8003734:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003738:	2b00      	cmp	r3, #0
 800373a:	d104      	bne.n	8003746 <USB_DevInit+0xba>
 800373c:	2100      	movs	r1, #0
 800373e:	6878      	ldr	r0, [r7, #4]
 8003740:	f000 f968 	bl	8003a14 <USB_SetDevSpeed>
 8003744:	e008      	b.n	8003758 <USB_DevInit+0xcc>
 8003746:	2101      	movs	r1, #1
 8003748:	6878      	ldr	r0, [r7, #4]
 800374a:	f000 f963 	bl	8003a14 <USB_SetDevSpeed>
 800374e:	e003      	b.n	8003758 <USB_DevInit+0xcc>
 8003750:	2103      	movs	r1, #3
 8003752:	6878      	ldr	r0, [r7, #4]
 8003754:	f000 f95e 	bl	8003a14 <USB_SetDevSpeed>
 8003758:	2110      	movs	r1, #16
 800375a:	6878      	ldr	r0, [r7, #4]
 800375c:	f000 f8fa 	bl	8003954 <USB_FlushTxFifo>
 8003760:	4603      	mov	r3, r0
 8003762:	2b00      	cmp	r3, #0
 8003764:	d001      	beq.n	800376a <USB_DevInit+0xde>
 8003766:	2301      	movs	r3, #1
 8003768:	75fb      	strb	r3, [r7, #23]
 800376a:	6878      	ldr	r0, [r7, #4]
 800376c:	f000 f924 	bl	80039b8 <USB_FlushRxFifo>
 8003770:	4603      	mov	r3, r0
 8003772:	2b00      	cmp	r3, #0
 8003774:	d001      	beq.n	800377a <USB_DevInit+0xee>
 8003776:	2301      	movs	r3, #1
 8003778:	75fb      	strb	r3, [r7, #23]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003780:	461a      	mov	r2, r3
 8003782:	2300      	movs	r3, #0
 8003784:	6113      	str	r3, [r2, #16]
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800378c:	461a      	mov	r2, r3
 800378e:	2300      	movs	r3, #0
 8003790:	6153      	str	r3, [r2, #20]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003798:	461a      	mov	r2, r3
 800379a:	2300      	movs	r3, #0
 800379c:	61d3      	str	r3, [r2, #28]
 800379e:	2300      	movs	r3, #0
 80037a0:	613b      	str	r3, [r7, #16]
 80037a2:	e043      	b.n	800382c <USB_DevInit+0x1a0>
 80037a4:	693b      	ldr	r3, [r7, #16]
 80037a6:	015a      	lsls	r2, r3, #5
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	4413      	add	r3, r2
 80037ac:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80037b6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80037ba:	d118      	bne.n	80037ee <USB_DevInit+0x162>
 80037bc:	693b      	ldr	r3, [r7, #16]
 80037be:	2b00      	cmp	r3, #0
 80037c0:	d10a      	bne.n	80037d8 <USB_DevInit+0x14c>
 80037c2:	693b      	ldr	r3, [r7, #16]
 80037c4:	015a      	lsls	r2, r3, #5
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	4413      	add	r3, r2
 80037ca:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80037ce:	461a      	mov	r2, r3
 80037d0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80037d4:	6013      	str	r3, [r2, #0]
 80037d6:	e013      	b.n	8003800 <USB_DevInit+0x174>
 80037d8:	693b      	ldr	r3, [r7, #16]
 80037da:	015a      	lsls	r2, r3, #5
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	4413      	add	r3, r2
 80037e0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80037e4:	461a      	mov	r2, r3
 80037e6:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80037ea:	6013      	str	r3, [r2, #0]
 80037ec:	e008      	b.n	8003800 <USB_DevInit+0x174>
 80037ee:	693b      	ldr	r3, [r7, #16]
 80037f0:	015a      	lsls	r2, r3, #5
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	4413      	add	r3, r2
 80037f6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80037fa:	461a      	mov	r2, r3
 80037fc:	2300      	movs	r3, #0
 80037fe:	6013      	str	r3, [r2, #0]
 8003800:	693b      	ldr	r3, [r7, #16]
 8003802:	015a      	lsls	r2, r3, #5
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	4413      	add	r3, r2
 8003808:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800380c:	461a      	mov	r2, r3
 800380e:	2300      	movs	r3, #0
 8003810:	6113      	str	r3, [r2, #16]
 8003812:	693b      	ldr	r3, [r7, #16]
 8003814:	015a      	lsls	r2, r3, #5
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	4413      	add	r3, r2
 800381a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800381e:	461a      	mov	r2, r3
 8003820:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8003824:	6093      	str	r3, [r2, #8]
 8003826:	693b      	ldr	r3, [r7, #16]
 8003828:	3301      	adds	r3, #1
 800382a:	613b      	str	r3, [r7, #16]
 800382c:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8003830:	461a      	mov	r2, r3
 8003832:	693b      	ldr	r3, [r7, #16]
 8003834:	4293      	cmp	r3, r2
 8003836:	d3b5      	bcc.n	80037a4 <USB_DevInit+0x118>
 8003838:	2300      	movs	r3, #0
 800383a:	613b      	str	r3, [r7, #16]
 800383c:	e043      	b.n	80038c6 <USB_DevInit+0x23a>
 800383e:	693b      	ldr	r3, [r7, #16]
 8003840:	015a      	lsls	r2, r3, #5
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	4413      	add	r3, r2
 8003846:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8003850:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8003854:	d118      	bne.n	8003888 <USB_DevInit+0x1fc>
 8003856:	693b      	ldr	r3, [r7, #16]
 8003858:	2b00      	cmp	r3, #0
 800385a:	d10a      	bne.n	8003872 <USB_DevInit+0x1e6>
 800385c:	693b      	ldr	r3, [r7, #16]
 800385e:	015a      	lsls	r2, r3, #5
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	4413      	add	r3, r2
 8003864:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003868:	461a      	mov	r2, r3
 800386a:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800386e:	6013      	str	r3, [r2, #0]
 8003870:	e013      	b.n	800389a <USB_DevInit+0x20e>
 8003872:	693b      	ldr	r3, [r7, #16]
 8003874:	015a      	lsls	r2, r3, #5
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	4413      	add	r3, r2
 800387a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800387e:	461a      	mov	r2, r3
 8003880:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8003884:	6013      	str	r3, [r2, #0]
 8003886:	e008      	b.n	800389a <USB_DevInit+0x20e>
 8003888:	693b      	ldr	r3, [r7, #16]
 800388a:	015a      	lsls	r2, r3, #5
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	4413      	add	r3, r2
 8003890:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003894:	461a      	mov	r2, r3
 8003896:	2300      	movs	r3, #0
 8003898:	6013      	str	r3, [r2, #0]
 800389a:	693b      	ldr	r3, [r7, #16]
 800389c:	015a      	lsls	r2, r3, #5
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	4413      	add	r3, r2
 80038a2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80038a6:	461a      	mov	r2, r3
 80038a8:	2300      	movs	r3, #0
 80038aa:	6113      	str	r3, [r2, #16]
 80038ac:	693b      	ldr	r3, [r7, #16]
 80038ae:	015a      	lsls	r2, r3, #5
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	4413      	add	r3, r2
 80038b4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80038b8:	461a      	mov	r2, r3
 80038ba:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 80038be:	6093      	str	r3, [r2, #8]
 80038c0:	693b      	ldr	r3, [r7, #16]
 80038c2:	3301      	adds	r3, #1
 80038c4:	613b      	str	r3, [r7, #16]
 80038c6:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80038ca:	461a      	mov	r2, r3
 80038cc:	693b      	ldr	r3, [r7, #16]
 80038ce:	4293      	cmp	r3, r2
 80038d0:	d3b5      	bcc.n	800383e <USB_DevInit+0x1b2>
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80038d8:	691b      	ldr	r3, [r3, #16]
 80038da:	68fa      	ldr	r2, [r7, #12]
 80038dc:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80038e0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80038e4:	6113      	str	r3, [r2, #16]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	2200      	movs	r2, #0
 80038ea:	619a      	str	r2, [r3, #24]
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 80038f2:	615a      	str	r2, [r3, #20]
 80038f4:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d105      	bne.n	8003908 <USB_DevInit+0x27c>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	699b      	ldr	r3, [r3, #24]
 8003900:	f043 0210 	orr.w	r2, r3, #16
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	619a      	str	r2, [r3, #24]
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	699a      	ldr	r2, [r3, #24]
 800390c:	4b10      	ldr	r3, [pc, #64]	@ (8003950 <USB_DevInit+0x2c4>)
 800390e:	4313      	orrs	r3, r2
 8003910:	687a      	ldr	r2, [r7, #4]
 8003912:	6193      	str	r3, [r2, #24]
 8003914:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8003918:	2b00      	cmp	r3, #0
 800391a:	d005      	beq.n	8003928 <USB_DevInit+0x29c>
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	699b      	ldr	r3, [r3, #24]
 8003920:	f043 0208 	orr.w	r2, r3, #8
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	619a      	str	r2, [r3, #24]
 8003928:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800392c:	2b01      	cmp	r3, #1
 800392e:	d107      	bne.n	8003940 <USB_DevInit+0x2b4>
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	699b      	ldr	r3, [r3, #24]
 8003934:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8003938:	f043 0304 	orr.w	r3, r3, #4
 800393c:	687a      	ldr	r2, [r7, #4]
 800393e:	6193      	str	r3, [r2, #24]
 8003940:	7dfb      	ldrb	r3, [r7, #23]
 8003942:	4618      	mov	r0, r3
 8003944:	3718      	adds	r7, #24
 8003946:	46bd      	mov	sp, r7
 8003948:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800394c:	b004      	add	sp, #16
 800394e:	4770      	bx	lr
 8003950:	803c3800 	.word	0x803c3800

08003954 <USB_FlushTxFifo>:
 8003954:	b480      	push	{r7}
 8003956:	b085      	sub	sp, #20
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
 800395c:	6039      	str	r1, [r7, #0]
 800395e:	2300      	movs	r3, #0
 8003960:	60fb      	str	r3, [r7, #12]
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	3301      	adds	r3, #1
 8003966:	60fb      	str	r3, [r7, #12]
 8003968:	68fb      	ldr	r3, [r7, #12]
 800396a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800396e:	d901      	bls.n	8003974 <USB_FlushTxFifo+0x20>
 8003970:	2303      	movs	r3, #3
 8003972:	e01b      	b.n	80039ac <USB_FlushTxFifo+0x58>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	691b      	ldr	r3, [r3, #16]
 8003978:	2b00      	cmp	r3, #0
 800397a:	daf2      	bge.n	8003962 <USB_FlushTxFifo+0xe>
 800397c:	2300      	movs	r3, #0
 800397e:	60fb      	str	r3, [r7, #12]
 8003980:	683b      	ldr	r3, [r7, #0]
 8003982:	019b      	lsls	r3, r3, #6
 8003984:	f043 0220 	orr.w	r2, r3, #32
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	611a      	str	r2, [r3, #16]
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	3301      	adds	r3, #1
 8003990:	60fb      	str	r3, [r7, #12]
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8003998:	d901      	bls.n	800399e <USB_FlushTxFifo+0x4a>
 800399a:	2303      	movs	r3, #3
 800399c:	e006      	b.n	80039ac <USB_FlushTxFifo+0x58>
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	691b      	ldr	r3, [r3, #16]
 80039a2:	f003 0320 	and.w	r3, r3, #32
 80039a6:	2b20      	cmp	r3, #32
 80039a8:	d0f0      	beq.n	800398c <USB_FlushTxFifo+0x38>
 80039aa:	2300      	movs	r3, #0
 80039ac:	4618      	mov	r0, r3
 80039ae:	3714      	adds	r7, #20
 80039b0:	46bd      	mov	sp, r7
 80039b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039b6:	4770      	bx	lr

080039b8 <USB_FlushRxFifo>:
 80039b8:	b480      	push	{r7}
 80039ba:	b085      	sub	sp, #20
 80039bc:	af00      	add	r7, sp, #0
 80039be:	6078      	str	r0, [r7, #4]
 80039c0:	2300      	movs	r3, #0
 80039c2:	60fb      	str	r3, [r7, #12]
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	3301      	adds	r3, #1
 80039c8:	60fb      	str	r3, [r7, #12]
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80039d0:	d901      	bls.n	80039d6 <USB_FlushRxFifo+0x1e>
 80039d2:	2303      	movs	r3, #3
 80039d4:	e018      	b.n	8003a08 <USB_FlushRxFifo+0x50>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	691b      	ldr	r3, [r3, #16]
 80039da:	2b00      	cmp	r3, #0
 80039dc:	daf2      	bge.n	80039c4 <USB_FlushRxFifo+0xc>
 80039de:	2300      	movs	r3, #0
 80039e0:	60fb      	str	r3, [r7, #12]
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	2210      	movs	r2, #16
 80039e6:	611a      	str	r2, [r3, #16]
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	3301      	adds	r3, #1
 80039ec:	60fb      	str	r3, [r7, #12]
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80039f4:	d901      	bls.n	80039fa <USB_FlushRxFifo+0x42>
 80039f6:	2303      	movs	r3, #3
 80039f8:	e006      	b.n	8003a08 <USB_FlushRxFifo+0x50>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	691b      	ldr	r3, [r3, #16]
 80039fe:	f003 0310 	and.w	r3, r3, #16
 8003a02:	2b10      	cmp	r3, #16
 8003a04:	d0f0      	beq.n	80039e8 <USB_FlushRxFifo+0x30>
 8003a06:	2300      	movs	r3, #0
 8003a08:	4618      	mov	r0, r3
 8003a0a:	3714      	adds	r7, #20
 8003a0c:	46bd      	mov	sp, r7
 8003a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a12:	4770      	bx	lr

08003a14 <USB_SetDevSpeed>:
 8003a14:	b480      	push	{r7}
 8003a16:	b085      	sub	sp, #20
 8003a18:	af00      	add	r7, sp, #0
 8003a1a:	6078      	str	r0, [r7, #4]
 8003a1c:	460b      	mov	r3, r1
 8003a1e:	70fb      	strb	r3, [r7, #3]
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	60fb      	str	r3, [r7, #12]
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003a2a:	681a      	ldr	r2, [r3, #0]
 8003a2c:	78fb      	ldrb	r3, [r7, #3]
 8003a2e:	68f9      	ldr	r1, [r7, #12]
 8003a30:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8003a34:	4313      	orrs	r3, r2
 8003a36:	600b      	str	r3, [r1, #0]
 8003a38:	2300      	movs	r3, #0
 8003a3a:	4618      	mov	r0, r3
 8003a3c:	3714      	adds	r7, #20
 8003a3e:	46bd      	mov	sp, r7
 8003a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a44:	4770      	bx	lr

08003a46 <USB_DevDisconnect>:
 8003a46:	b480      	push	{r7}
 8003a48:	b085      	sub	sp, #20
 8003a4a:	af00      	add	r7, sp, #0
 8003a4c:	6078      	str	r0, [r7, #4]
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	60fb      	str	r3, [r7, #12]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	68fa      	ldr	r2, [r7, #12]
 8003a5c:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8003a60:	f023 0303 	bic.w	r3, r3, #3
 8003a64:	6013      	str	r3, [r2, #0]
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003a6c:	685b      	ldr	r3, [r3, #4]
 8003a6e:	68fa      	ldr	r2, [r7, #12]
 8003a70:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003a74:	f043 0302 	orr.w	r3, r3, #2
 8003a78:	6053      	str	r3, [r2, #4]
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	4618      	mov	r0, r3
 8003a7e:	3714      	adds	r7, #20
 8003a80:	46bd      	mov	sp, r7
 8003a82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a86:	4770      	bx	lr

08003a88 <USB_GetMode>:
 8003a88:	b480      	push	{r7}
 8003a8a:	b083      	sub	sp, #12
 8003a8c:	af00      	add	r7, sp, #0
 8003a8e:	6078      	str	r0, [r7, #4]
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	695b      	ldr	r3, [r3, #20]
 8003a94:	f003 0301 	and.w	r3, r3, #1
 8003a98:	4618      	mov	r0, r3
 8003a9a:	370c      	adds	r7, #12
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa2:	4770      	bx	lr

08003aa4 <USB_CoreReset>:
 8003aa4:	b480      	push	{r7}
 8003aa6:	b085      	sub	sp, #20
 8003aa8:	af00      	add	r7, sp, #0
 8003aaa:	6078      	str	r0, [r7, #4]
 8003aac:	2300      	movs	r3, #0
 8003aae:	60fb      	str	r3, [r7, #12]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	3301      	adds	r3, #1
 8003ab4:	60fb      	str	r3, [r7, #12]
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8003abc:	d901      	bls.n	8003ac2 <USB_CoreReset+0x1e>
 8003abe:	2303      	movs	r3, #3
 8003ac0:	e01b      	b.n	8003afa <USB_CoreReset+0x56>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	691b      	ldr	r3, [r3, #16]
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	daf2      	bge.n	8003ab0 <USB_CoreReset+0xc>
 8003aca:	2300      	movs	r3, #0
 8003acc:	60fb      	str	r3, [r7, #12]
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	691b      	ldr	r3, [r3, #16]
 8003ad2:	f043 0201 	orr.w	r2, r3, #1
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	611a      	str	r2, [r3, #16]
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	3301      	adds	r3, #1
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8003ae6:	d901      	bls.n	8003aec <USB_CoreReset+0x48>
 8003ae8:	2303      	movs	r3, #3
 8003aea:	e006      	b.n	8003afa <USB_CoreReset+0x56>
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	691b      	ldr	r3, [r3, #16]
 8003af0:	f003 0301 	and.w	r3, r3, #1
 8003af4:	2b01      	cmp	r3, #1
 8003af6:	d0f0      	beq.n	8003ada <USB_CoreReset+0x36>
 8003af8:	2300      	movs	r3, #0
 8003afa:	4618      	mov	r0, r3
 8003afc:	3714      	adds	r7, #20
 8003afe:	46bd      	mov	sp, r7
 8003b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b04:	4770      	bx	lr
	...

08003b08 <std>:
 8003b08:	2300      	movs	r3, #0
 8003b0a:	b510      	push	{r4, lr}
 8003b0c:	4604      	mov	r4, r0
 8003b0e:	e9c0 3300 	strd	r3, r3, [r0]
 8003b12:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003b16:	6083      	str	r3, [r0, #8]
 8003b18:	8181      	strh	r1, [r0, #12]
 8003b1a:	6643      	str	r3, [r0, #100]	@ 0x64
 8003b1c:	81c2      	strh	r2, [r0, #14]
 8003b1e:	6183      	str	r3, [r0, #24]
 8003b20:	4619      	mov	r1, r3
 8003b22:	2208      	movs	r2, #8
 8003b24:	305c      	adds	r0, #92	@ 0x5c
 8003b26:	f000 f9f9 	bl	8003f1c <memset>
 8003b2a:	4b0d      	ldr	r3, [pc, #52]	@ (8003b60 <std+0x58>)
 8003b2c:	6263      	str	r3, [r4, #36]	@ 0x24
 8003b2e:	4b0d      	ldr	r3, [pc, #52]	@ (8003b64 <std+0x5c>)
 8003b30:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003b32:	4b0d      	ldr	r3, [pc, #52]	@ (8003b68 <std+0x60>)
 8003b34:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003b36:	4b0d      	ldr	r3, [pc, #52]	@ (8003b6c <std+0x64>)
 8003b38:	6323      	str	r3, [r4, #48]	@ 0x30
 8003b3a:	4b0d      	ldr	r3, [pc, #52]	@ (8003b70 <std+0x68>)
 8003b3c:	6224      	str	r4, [r4, #32]
 8003b3e:	429c      	cmp	r4, r3
 8003b40:	d006      	beq.n	8003b50 <std+0x48>
 8003b42:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8003b46:	4294      	cmp	r4, r2
 8003b48:	d002      	beq.n	8003b50 <std+0x48>
 8003b4a:	33d0      	adds	r3, #208	@ 0xd0
 8003b4c:	429c      	cmp	r4, r3
 8003b4e:	d105      	bne.n	8003b5c <std+0x54>
 8003b50:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003b54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b58:	f000 ba58 	b.w	800400c <__retarget_lock_init_recursive>
 8003b5c:	bd10      	pop	{r4, pc}
 8003b5e:	bf00      	nop
 8003b60:	08003d6d 	.word	0x08003d6d
 8003b64:	08003d8f 	.word	0x08003d8f
 8003b68:	08003dc7 	.word	0x08003dc7
 8003b6c:	08003deb 	.word	0x08003deb
 8003b70:	200008e8 	.word	0x200008e8

08003b74 <stdio_exit_handler>:
 8003b74:	4a02      	ldr	r2, [pc, #8]	@ (8003b80 <stdio_exit_handler+0xc>)
 8003b76:	4903      	ldr	r1, [pc, #12]	@ (8003b84 <stdio_exit_handler+0x10>)
 8003b78:	4803      	ldr	r0, [pc, #12]	@ (8003b88 <stdio_exit_handler+0x14>)
 8003b7a:	f000 b869 	b.w	8003c50 <_fwalk_sglue>
 8003b7e:	bf00      	nop
 8003b80:	20000040 	.word	0x20000040
 8003b84:	080048ad 	.word	0x080048ad
 8003b88:	20000050 	.word	0x20000050

08003b8c <cleanup_stdio>:
 8003b8c:	6841      	ldr	r1, [r0, #4]
 8003b8e:	4b0c      	ldr	r3, [pc, #48]	@ (8003bc0 <cleanup_stdio+0x34>)
 8003b90:	4299      	cmp	r1, r3
 8003b92:	b510      	push	{r4, lr}
 8003b94:	4604      	mov	r4, r0
 8003b96:	d001      	beq.n	8003b9c <cleanup_stdio+0x10>
 8003b98:	f000 fe88 	bl	80048ac <_fflush_r>
 8003b9c:	68a1      	ldr	r1, [r4, #8]
 8003b9e:	4b09      	ldr	r3, [pc, #36]	@ (8003bc4 <cleanup_stdio+0x38>)
 8003ba0:	4299      	cmp	r1, r3
 8003ba2:	d002      	beq.n	8003baa <cleanup_stdio+0x1e>
 8003ba4:	4620      	mov	r0, r4
 8003ba6:	f000 fe81 	bl	80048ac <_fflush_r>
 8003baa:	68e1      	ldr	r1, [r4, #12]
 8003bac:	4b06      	ldr	r3, [pc, #24]	@ (8003bc8 <cleanup_stdio+0x3c>)
 8003bae:	4299      	cmp	r1, r3
 8003bb0:	d004      	beq.n	8003bbc <cleanup_stdio+0x30>
 8003bb2:	4620      	mov	r0, r4
 8003bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bb8:	f000 be78 	b.w	80048ac <_fflush_r>
 8003bbc:	bd10      	pop	{r4, pc}
 8003bbe:	bf00      	nop
 8003bc0:	200008e8 	.word	0x200008e8
 8003bc4:	20000950 	.word	0x20000950
 8003bc8:	200009b8 	.word	0x200009b8

08003bcc <global_stdio_init.part.0>:
 8003bcc:	b510      	push	{r4, lr}
 8003bce:	4b0b      	ldr	r3, [pc, #44]	@ (8003bfc <global_stdio_init.part.0+0x30>)
 8003bd0:	4c0b      	ldr	r4, [pc, #44]	@ (8003c00 <global_stdio_init.part.0+0x34>)
 8003bd2:	4a0c      	ldr	r2, [pc, #48]	@ (8003c04 <global_stdio_init.part.0+0x38>)
 8003bd4:	601a      	str	r2, [r3, #0]
 8003bd6:	4620      	mov	r0, r4
 8003bd8:	2200      	movs	r2, #0
 8003bda:	2104      	movs	r1, #4
 8003bdc:	f7ff ff94 	bl	8003b08 <std>
 8003be0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8003be4:	2201      	movs	r2, #1
 8003be6:	2109      	movs	r1, #9
 8003be8:	f7ff ff8e 	bl	8003b08 <std>
 8003bec:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8003bf0:	2202      	movs	r2, #2
 8003bf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bf6:	2112      	movs	r1, #18
 8003bf8:	f7ff bf86 	b.w	8003b08 <std>
 8003bfc:	20000a20 	.word	0x20000a20
 8003c00:	200008e8 	.word	0x200008e8
 8003c04:	08003b75 	.word	0x08003b75

08003c08 <__sfp_lock_acquire>:
 8003c08:	4801      	ldr	r0, [pc, #4]	@ (8003c10 <__sfp_lock_acquire+0x8>)
 8003c0a:	f000 ba00 	b.w	800400e <__retarget_lock_acquire_recursive>
 8003c0e:	bf00      	nop
 8003c10:	20000a29 	.word	0x20000a29

08003c14 <__sfp_lock_release>:
 8003c14:	4801      	ldr	r0, [pc, #4]	@ (8003c1c <__sfp_lock_release+0x8>)
 8003c16:	f000 b9fb 	b.w	8004010 <__retarget_lock_release_recursive>
 8003c1a:	bf00      	nop
 8003c1c:	20000a29 	.word	0x20000a29

08003c20 <__sinit>:
 8003c20:	b510      	push	{r4, lr}
 8003c22:	4604      	mov	r4, r0
 8003c24:	f7ff fff0 	bl	8003c08 <__sfp_lock_acquire>
 8003c28:	6a23      	ldr	r3, [r4, #32]
 8003c2a:	b11b      	cbz	r3, 8003c34 <__sinit+0x14>
 8003c2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003c30:	f7ff bff0 	b.w	8003c14 <__sfp_lock_release>
 8003c34:	4b04      	ldr	r3, [pc, #16]	@ (8003c48 <__sinit+0x28>)
 8003c36:	6223      	str	r3, [r4, #32]
 8003c38:	4b04      	ldr	r3, [pc, #16]	@ (8003c4c <__sinit+0x2c>)
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d1f5      	bne.n	8003c2c <__sinit+0xc>
 8003c40:	f7ff ffc4 	bl	8003bcc <global_stdio_init.part.0>
 8003c44:	e7f2      	b.n	8003c2c <__sinit+0xc>
 8003c46:	bf00      	nop
 8003c48:	08003b8d 	.word	0x08003b8d
 8003c4c:	20000a20 	.word	0x20000a20

08003c50 <_fwalk_sglue>:
 8003c50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c54:	4607      	mov	r7, r0
 8003c56:	4688      	mov	r8, r1
 8003c58:	4614      	mov	r4, r2
 8003c5a:	2600      	movs	r6, #0
 8003c5c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003c60:	f1b9 0901 	subs.w	r9, r9, #1
 8003c64:	d505      	bpl.n	8003c72 <_fwalk_sglue+0x22>
 8003c66:	6824      	ldr	r4, [r4, #0]
 8003c68:	2c00      	cmp	r4, #0
 8003c6a:	d1f7      	bne.n	8003c5c <_fwalk_sglue+0xc>
 8003c6c:	4630      	mov	r0, r6
 8003c6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c72:	89ab      	ldrh	r3, [r5, #12]
 8003c74:	2b01      	cmp	r3, #1
 8003c76:	d907      	bls.n	8003c88 <_fwalk_sglue+0x38>
 8003c78:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003c7c:	3301      	adds	r3, #1
 8003c7e:	d003      	beq.n	8003c88 <_fwalk_sglue+0x38>
 8003c80:	4629      	mov	r1, r5
 8003c82:	4638      	mov	r0, r7
 8003c84:	47c0      	blx	r8
 8003c86:	4306      	orrs	r6, r0
 8003c88:	3568      	adds	r5, #104	@ 0x68
 8003c8a:	e7e9      	b.n	8003c60 <_fwalk_sglue+0x10>

08003c8c <iprintf>:
 8003c8c:	b40f      	push	{r0, r1, r2, r3}
 8003c8e:	b507      	push	{r0, r1, r2, lr}
 8003c90:	4906      	ldr	r1, [pc, #24]	@ (8003cac <iprintf+0x20>)
 8003c92:	ab04      	add	r3, sp, #16
 8003c94:	6808      	ldr	r0, [r1, #0]
 8003c96:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c9a:	6881      	ldr	r1, [r0, #8]
 8003c9c:	9301      	str	r3, [sp, #4]
 8003c9e:	f000 fadb 	bl	8004258 <_vfiprintf_r>
 8003ca2:	b003      	add	sp, #12
 8003ca4:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ca8:	b004      	add	sp, #16
 8003caa:	4770      	bx	lr
 8003cac:	2000004c 	.word	0x2000004c

08003cb0 <_puts_r>:
 8003cb0:	6a03      	ldr	r3, [r0, #32]
 8003cb2:	b570      	push	{r4, r5, r6, lr}
 8003cb4:	6884      	ldr	r4, [r0, #8]
 8003cb6:	4605      	mov	r5, r0
 8003cb8:	460e      	mov	r6, r1
 8003cba:	b90b      	cbnz	r3, 8003cc0 <_puts_r+0x10>
 8003cbc:	f7ff ffb0 	bl	8003c20 <__sinit>
 8003cc0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003cc2:	07db      	lsls	r3, r3, #31
 8003cc4:	d405      	bmi.n	8003cd2 <_puts_r+0x22>
 8003cc6:	89a3      	ldrh	r3, [r4, #12]
 8003cc8:	0598      	lsls	r0, r3, #22
 8003cca:	d402      	bmi.n	8003cd2 <_puts_r+0x22>
 8003ccc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003cce:	f000 f99e 	bl	800400e <__retarget_lock_acquire_recursive>
 8003cd2:	89a3      	ldrh	r3, [r4, #12]
 8003cd4:	0719      	lsls	r1, r3, #28
 8003cd6:	d502      	bpl.n	8003cde <_puts_r+0x2e>
 8003cd8:	6923      	ldr	r3, [r4, #16]
 8003cda:	2b00      	cmp	r3, #0
 8003cdc:	d135      	bne.n	8003d4a <_puts_r+0x9a>
 8003cde:	4621      	mov	r1, r4
 8003ce0:	4628      	mov	r0, r5
 8003ce2:	f000 f8c5 	bl	8003e70 <__swsetup_r>
 8003ce6:	b380      	cbz	r0, 8003d4a <_puts_r+0x9a>
 8003ce8:	f04f 35ff 	mov.w	r5, #4294967295
 8003cec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003cee:	07da      	lsls	r2, r3, #31
 8003cf0:	d405      	bmi.n	8003cfe <_puts_r+0x4e>
 8003cf2:	89a3      	ldrh	r3, [r4, #12]
 8003cf4:	059b      	lsls	r3, r3, #22
 8003cf6:	d402      	bmi.n	8003cfe <_puts_r+0x4e>
 8003cf8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003cfa:	f000 f989 	bl	8004010 <__retarget_lock_release_recursive>
 8003cfe:	4628      	mov	r0, r5
 8003d00:	bd70      	pop	{r4, r5, r6, pc}
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	da04      	bge.n	8003d10 <_puts_r+0x60>
 8003d06:	69a2      	ldr	r2, [r4, #24]
 8003d08:	429a      	cmp	r2, r3
 8003d0a:	dc17      	bgt.n	8003d3c <_puts_r+0x8c>
 8003d0c:	290a      	cmp	r1, #10
 8003d0e:	d015      	beq.n	8003d3c <_puts_r+0x8c>
 8003d10:	6823      	ldr	r3, [r4, #0]
 8003d12:	1c5a      	adds	r2, r3, #1
 8003d14:	6022      	str	r2, [r4, #0]
 8003d16:	7019      	strb	r1, [r3, #0]
 8003d18:	68a3      	ldr	r3, [r4, #8]
 8003d1a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003d1e:	3b01      	subs	r3, #1
 8003d20:	60a3      	str	r3, [r4, #8]
 8003d22:	2900      	cmp	r1, #0
 8003d24:	d1ed      	bne.n	8003d02 <_puts_r+0x52>
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	da11      	bge.n	8003d4e <_puts_r+0x9e>
 8003d2a:	4622      	mov	r2, r4
 8003d2c:	210a      	movs	r1, #10
 8003d2e:	4628      	mov	r0, r5
 8003d30:	f000 f85f 	bl	8003df2 <__swbuf_r>
 8003d34:	3001      	adds	r0, #1
 8003d36:	d0d7      	beq.n	8003ce8 <_puts_r+0x38>
 8003d38:	250a      	movs	r5, #10
 8003d3a:	e7d7      	b.n	8003cec <_puts_r+0x3c>
 8003d3c:	4622      	mov	r2, r4
 8003d3e:	4628      	mov	r0, r5
 8003d40:	f000 f857 	bl	8003df2 <__swbuf_r>
 8003d44:	3001      	adds	r0, #1
 8003d46:	d1e7      	bne.n	8003d18 <_puts_r+0x68>
 8003d48:	e7ce      	b.n	8003ce8 <_puts_r+0x38>
 8003d4a:	3e01      	subs	r6, #1
 8003d4c:	e7e4      	b.n	8003d18 <_puts_r+0x68>
 8003d4e:	6823      	ldr	r3, [r4, #0]
 8003d50:	1c5a      	adds	r2, r3, #1
 8003d52:	6022      	str	r2, [r4, #0]
 8003d54:	220a      	movs	r2, #10
 8003d56:	701a      	strb	r2, [r3, #0]
 8003d58:	e7ee      	b.n	8003d38 <_puts_r+0x88>
	...

08003d5c <puts>:
 8003d5c:	4b02      	ldr	r3, [pc, #8]	@ (8003d68 <puts+0xc>)
 8003d5e:	4601      	mov	r1, r0
 8003d60:	6818      	ldr	r0, [r3, #0]
 8003d62:	f7ff bfa5 	b.w	8003cb0 <_puts_r>
 8003d66:	bf00      	nop
 8003d68:	2000004c 	.word	0x2000004c

08003d6c <__sread>:
 8003d6c:	b510      	push	{r4, lr}
 8003d6e:	460c      	mov	r4, r1
 8003d70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d74:	f000 f8fc 	bl	8003f70 <_read_r>
 8003d78:	2800      	cmp	r0, #0
 8003d7a:	bfab      	itete	ge
 8003d7c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003d7e:	89a3      	ldrhlt	r3, [r4, #12]
 8003d80:	181b      	addge	r3, r3, r0
 8003d82:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003d86:	bfac      	ite	ge
 8003d88:	6563      	strge	r3, [r4, #84]	@ 0x54
 8003d8a:	81a3      	strhlt	r3, [r4, #12]
 8003d8c:	bd10      	pop	{r4, pc}

08003d8e <__swrite>:
 8003d8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d92:	461f      	mov	r7, r3
 8003d94:	898b      	ldrh	r3, [r1, #12]
 8003d96:	05db      	lsls	r3, r3, #23
 8003d98:	4605      	mov	r5, r0
 8003d9a:	460c      	mov	r4, r1
 8003d9c:	4616      	mov	r6, r2
 8003d9e:	d505      	bpl.n	8003dac <__swrite+0x1e>
 8003da0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003da4:	2302      	movs	r3, #2
 8003da6:	2200      	movs	r2, #0
 8003da8:	f000 f8d0 	bl	8003f4c <_lseek_r>
 8003dac:	89a3      	ldrh	r3, [r4, #12]
 8003dae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003db2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003db6:	81a3      	strh	r3, [r4, #12]
 8003db8:	4632      	mov	r2, r6
 8003dba:	463b      	mov	r3, r7
 8003dbc:	4628      	mov	r0, r5
 8003dbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003dc2:	f000 b8e7 	b.w	8003f94 <_write_r>

08003dc6 <__sseek>:
 8003dc6:	b510      	push	{r4, lr}
 8003dc8:	460c      	mov	r4, r1
 8003dca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dce:	f000 f8bd 	bl	8003f4c <_lseek_r>
 8003dd2:	1c43      	adds	r3, r0, #1
 8003dd4:	89a3      	ldrh	r3, [r4, #12]
 8003dd6:	bf15      	itete	ne
 8003dd8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003dda:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003dde:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003de2:	81a3      	strheq	r3, [r4, #12]
 8003de4:	bf18      	it	ne
 8003de6:	81a3      	strhne	r3, [r4, #12]
 8003de8:	bd10      	pop	{r4, pc}

08003dea <__sclose>:
 8003dea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dee:	f000 b89d 	b.w	8003f2c <_close_r>

08003df2 <__swbuf_r>:
 8003df2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003df4:	460e      	mov	r6, r1
 8003df6:	4614      	mov	r4, r2
 8003df8:	4605      	mov	r5, r0
 8003dfa:	b118      	cbz	r0, 8003e04 <__swbuf_r+0x12>
 8003dfc:	6a03      	ldr	r3, [r0, #32]
 8003dfe:	b90b      	cbnz	r3, 8003e04 <__swbuf_r+0x12>
 8003e00:	f7ff ff0e 	bl	8003c20 <__sinit>
 8003e04:	69a3      	ldr	r3, [r4, #24]
 8003e06:	60a3      	str	r3, [r4, #8]
 8003e08:	89a3      	ldrh	r3, [r4, #12]
 8003e0a:	071a      	lsls	r2, r3, #28
 8003e0c:	d501      	bpl.n	8003e12 <__swbuf_r+0x20>
 8003e0e:	6923      	ldr	r3, [r4, #16]
 8003e10:	b943      	cbnz	r3, 8003e24 <__swbuf_r+0x32>
 8003e12:	4621      	mov	r1, r4
 8003e14:	4628      	mov	r0, r5
 8003e16:	f000 f82b 	bl	8003e70 <__swsetup_r>
 8003e1a:	b118      	cbz	r0, 8003e24 <__swbuf_r+0x32>
 8003e1c:	f04f 37ff 	mov.w	r7, #4294967295
 8003e20:	4638      	mov	r0, r7
 8003e22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e24:	6823      	ldr	r3, [r4, #0]
 8003e26:	6922      	ldr	r2, [r4, #16]
 8003e28:	1a98      	subs	r0, r3, r2
 8003e2a:	6963      	ldr	r3, [r4, #20]
 8003e2c:	b2f6      	uxtb	r6, r6
 8003e2e:	4283      	cmp	r3, r0
 8003e30:	4637      	mov	r7, r6
 8003e32:	dc05      	bgt.n	8003e40 <__swbuf_r+0x4e>
 8003e34:	4621      	mov	r1, r4
 8003e36:	4628      	mov	r0, r5
 8003e38:	f000 fd38 	bl	80048ac <_fflush_r>
 8003e3c:	2800      	cmp	r0, #0
 8003e3e:	d1ed      	bne.n	8003e1c <__swbuf_r+0x2a>
 8003e40:	68a3      	ldr	r3, [r4, #8]
 8003e42:	3b01      	subs	r3, #1
 8003e44:	60a3      	str	r3, [r4, #8]
 8003e46:	6823      	ldr	r3, [r4, #0]
 8003e48:	1c5a      	adds	r2, r3, #1
 8003e4a:	6022      	str	r2, [r4, #0]
 8003e4c:	701e      	strb	r6, [r3, #0]
 8003e4e:	6962      	ldr	r2, [r4, #20]
 8003e50:	1c43      	adds	r3, r0, #1
 8003e52:	429a      	cmp	r2, r3
 8003e54:	d004      	beq.n	8003e60 <__swbuf_r+0x6e>
 8003e56:	89a3      	ldrh	r3, [r4, #12]
 8003e58:	07db      	lsls	r3, r3, #31
 8003e5a:	d5e1      	bpl.n	8003e20 <__swbuf_r+0x2e>
 8003e5c:	2e0a      	cmp	r6, #10
 8003e5e:	d1df      	bne.n	8003e20 <__swbuf_r+0x2e>
 8003e60:	4621      	mov	r1, r4
 8003e62:	4628      	mov	r0, r5
 8003e64:	f000 fd22 	bl	80048ac <_fflush_r>
 8003e68:	2800      	cmp	r0, #0
 8003e6a:	d0d9      	beq.n	8003e20 <__swbuf_r+0x2e>
 8003e6c:	e7d6      	b.n	8003e1c <__swbuf_r+0x2a>
	...

08003e70 <__swsetup_r>:
 8003e70:	b538      	push	{r3, r4, r5, lr}
 8003e72:	4b29      	ldr	r3, [pc, #164]	@ (8003f18 <__swsetup_r+0xa8>)
 8003e74:	4605      	mov	r5, r0
 8003e76:	6818      	ldr	r0, [r3, #0]
 8003e78:	460c      	mov	r4, r1
 8003e7a:	b118      	cbz	r0, 8003e84 <__swsetup_r+0x14>
 8003e7c:	6a03      	ldr	r3, [r0, #32]
 8003e7e:	b90b      	cbnz	r3, 8003e84 <__swsetup_r+0x14>
 8003e80:	f7ff fece 	bl	8003c20 <__sinit>
 8003e84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e88:	0719      	lsls	r1, r3, #28
 8003e8a:	d422      	bmi.n	8003ed2 <__swsetup_r+0x62>
 8003e8c:	06da      	lsls	r2, r3, #27
 8003e8e:	d407      	bmi.n	8003ea0 <__swsetup_r+0x30>
 8003e90:	2209      	movs	r2, #9
 8003e92:	602a      	str	r2, [r5, #0]
 8003e94:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e98:	81a3      	strh	r3, [r4, #12]
 8003e9a:	f04f 30ff 	mov.w	r0, #4294967295
 8003e9e:	e033      	b.n	8003f08 <__swsetup_r+0x98>
 8003ea0:	0758      	lsls	r0, r3, #29
 8003ea2:	d512      	bpl.n	8003eca <__swsetup_r+0x5a>
 8003ea4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003ea6:	b141      	cbz	r1, 8003eba <__swsetup_r+0x4a>
 8003ea8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003eac:	4299      	cmp	r1, r3
 8003eae:	d002      	beq.n	8003eb6 <__swsetup_r+0x46>
 8003eb0:	4628      	mov	r0, r5
 8003eb2:	f000 f8af 	bl	8004014 <_free_r>
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	6363      	str	r3, [r4, #52]	@ 0x34
 8003eba:	89a3      	ldrh	r3, [r4, #12]
 8003ebc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003ec0:	81a3      	strh	r3, [r4, #12]
 8003ec2:	2300      	movs	r3, #0
 8003ec4:	6063      	str	r3, [r4, #4]
 8003ec6:	6923      	ldr	r3, [r4, #16]
 8003ec8:	6023      	str	r3, [r4, #0]
 8003eca:	89a3      	ldrh	r3, [r4, #12]
 8003ecc:	f043 0308 	orr.w	r3, r3, #8
 8003ed0:	81a3      	strh	r3, [r4, #12]
 8003ed2:	6923      	ldr	r3, [r4, #16]
 8003ed4:	b94b      	cbnz	r3, 8003eea <__swsetup_r+0x7a>
 8003ed6:	89a3      	ldrh	r3, [r4, #12]
 8003ed8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003edc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003ee0:	d003      	beq.n	8003eea <__swsetup_r+0x7a>
 8003ee2:	4621      	mov	r1, r4
 8003ee4:	4628      	mov	r0, r5
 8003ee6:	f000 fd2f 	bl	8004948 <__smakebuf_r>
 8003eea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003eee:	f013 0201 	ands.w	r2, r3, #1
 8003ef2:	d00a      	beq.n	8003f0a <__swsetup_r+0x9a>
 8003ef4:	2200      	movs	r2, #0
 8003ef6:	60a2      	str	r2, [r4, #8]
 8003ef8:	6962      	ldr	r2, [r4, #20]
 8003efa:	4252      	negs	r2, r2
 8003efc:	61a2      	str	r2, [r4, #24]
 8003efe:	6922      	ldr	r2, [r4, #16]
 8003f00:	b942      	cbnz	r2, 8003f14 <__swsetup_r+0xa4>
 8003f02:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003f06:	d1c5      	bne.n	8003e94 <__swsetup_r+0x24>
 8003f08:	bd38      	pop	{r3, r4, r5, pc}
 8003f0a:	0799      	lsls	r1, r3, #30
 8003f0c:	bf58      	it	pl
 8003f0e:	6962      	ldrpl	r2, [r4, #20]
 8003f10:	60a2      	str	r2, [r4, #8]
 8003f12:	e7f4      	b.n	8003efe <__swsetup_r+0x8e>
 8003f14:	2000      	movs	r0, #0
 8003f16:	e7f7      	b.n	8003f08 <__swsetup_r+0x98>
 8003f18:	2000004c 	.word	0x2000004c

08003f1c <memset>:
 8003f1c:	4402      	add	r2, r0
 8003f1e:	4603      	mov	r3, r0
 8003f20:	4293      	cmp	r3, r2
 8003f22:	d100      	bne.n	8003f26 <memset+0xa>
 8003f24:	4770      	bx	lr
 8003f26:	f803 1b01 	strb.w	r1, [r3], #1
 8003f2a:	e7f9      	b.n	8003f20 <memset+0x4>

08003f2c <_close_r>:
 8003f2c:	b538      	push	{r3, r4, r5, lr}
 8003f2e:	4d06      	ldr	r5, [pc, #24]	@ (8003f48 <_close_r+0x1c>)
 8003f30:	2300      	movs	r3, #0
 8003f32:	4604      	mov	r4, r0
 8003f34:	4608      	mov	r0, r1
 8003f36:	602b      	str	r3, [r5, #0]
 8003f38:	f7fd f952 	bl	80011e0 <_close>
 8003f3c:	1c43      	adds	r3, r0, #1
 8003f3e:	d102      	bne.n	8003f46 <_close_r+0x1a>
 8003f40:	682b      	ldr	r3, [r5, #0]
 8003f42:	b103      	cbz	r3, 8003f46 <_close_r+0x1a>
 8003f44:	6023      	str	r3, [r4, #0]
 8003f46:	bd38      	pop	{r3, r4, r5, pc}
 8003f48:	20000a24 	.word	0x20000a24

08003f4c <_lseek_r>:
 8003f4c:	b538      	push	{r3, r4, r5, lr}
 8003f4e:	4d07      	ldr	r5, [pc, #28]	@ (8003f6c <_lseek_r+0x20>)
 8003f50:	4604      	mov	r4, r0
 8003f52:	4608      	mov	r0, r1
 8003f54:	4611      	mov	r1, r2
 8003f56:	2200      	movs	r2, #0
 8003f58:	602a      	str	r2, [r5, #0]
 8003f5a:	461a      	mov	r2, r3
 8003f5c:	f7fd f967 	bl	800122e <_lseek>
 8003f60:	1c43      	adds	r3, r0, #1
 8003f62:	d102      	bne.n	8003f6a <_lseek_r+0x1e>
 8003f64:	682b      	ldr	r3, [r5, #0]
 8003f66:	b103      	cbz	r3, 8003f6a <_lseek_r+0x1e>
 8003f68:	6023      	str	r3, [r4, #0]
 8003f6a:	bd38      	pop	{r3, r4, r5, pc}
 8003f6c:	20000a24 	.word	0x20000a24

08003f70 <_read_r>:
 8003f70:	b538      	push	{r3, r4, r5, lr}
 8003f72:	4d07      	ldr	r5, [pc, #28]	@ (8003f90 <_read_r+0x20>)
 8003f74:	4604      	mov	r4, r0
 8003f76:	4608      	mov	r0, r1
 8003f78:	4611      	mov	r1, r2
 8003f7a:	2200      	movs	r2, #0
 8003f7c:	602a      	str	r2, [r5, #0]
 8003f7e:	461a      	mov	r2, r3
 8003f80:	f7fd f8f5 	bl	800116e <_read>
 8003f84:	1c43      	adds	r3, r0, #1
 8003f86:	d102      	bne.n	8003f8e <_read_r+0x1e>
 8003f88:	682b      	ldr	r3, [r5, #0]
 8003f8a:	b103      	cbz	r3, 8003f8e <_read_r+0x1e>
 8003f8c:	6023      	str	r3, [r4, #0]
 8003f8e:	bd38      	pop	{r3, r4, r5, pc}
 8003f90:	20000a24 	.word	0x20000a24

08003f94 <_write_r>:
 8003f94:	b538      	push	{r3, r4, r5, lr}
 8003f96:	4d07      	ldr	r5, [pc, #28]	@ (8003fb4 <_write_r+0x20>)
 8003f98:	4604      	mov	r4, r0
 8003f9a:	4608      	mov	r0, r1
 8003f9c:	4611      	mov	r1, r2
 8003f9e:	2200      	movs	r2, #0
 8003fa0:	602a      	str	r2, [r5, #0]
 8003fa2:	461a      	mov	r2, r3
 8003fa4:	f7fd f900 	bl	80011a8 <_write>
 8003fa8:	1c43      	adds	r3, r0, #1
 8003faa:	d102      	bne.n	8003fb2 <_write_r+0x1e>
 8003fac:	682b      	ldr	r3, [r5, #0]
 8003fae:	b103      	cbz	r3, 8003fb2 <_write_r+0x1e>
 8003fb0:	6023      	str	r3, [r4, #0]
 8003fb2:	bd38      	pop	{r3, r4, r5, pc}
 8003fb4:	20000a24 	.word	0x20000a24

08003fb8 <__errno>:
 8003fb8:	4b01      	ldr	r3, [pc, #4]	@ (8003fc0 <__errno+0x8>)
 8003fba:	6818      	ldr	r0, [r3, #0]
 8003fbc:	4770      	bx	lr
 8003fbe:	bf00      	nop
 8003fc0:	2000004c 	.word	0x2000004c

08003fc4 <__libc_init_array>:
 8003fc4:	b570      	push	{r4, r5, r6, lr}
 8003fc6:	4d0d      	ldr	r5, [pc, #52]	@ (8003ffc <__libc_init_array+0x38>)
 8003fc8:	4c0d      	ldr	r4, [pc, #52]	@ (8004000 <__libc_init_array+0x3c>)
 8003fca:	1b64      	subs	r4, r4, r5
 8003fcc:	10a4      	asrs	r4, r4, #2
 8003fce:	2600      	movs	r6, #0
 8003fd0:	42a6      	cmp	r6, r4
 8003fd2:	d109      	bne.n	8003fe8 <__libc_init_array+0x24>
 8003fd4:	4d0b      	ldr	r5, [pc, #44]	@ (8004004 <__libc_init_array+0x40>)
 8003fd6:	4c0c      	ldr	r4, [pc, #48]	@ (8004008 <__libc_init_array+0x44>)
 8003fd8:	f000 fd24 	bl	8004a24 <_init>
 8003fdc:	1b64      	subs	r4, r4, r5
 8003fde:	10a4      	asrs	r4, r4, #2
 8003fe0:	2600      	movs	r6, #0
 8003fe2:	42a6      	cmp	r6, r4
 8003fe4:	d105      	bne.n	8003ff2 <__libc_init_array+0x2e>
 8003fe6:	bd70      	pop	{r4, r5, r6, pc}
 8003fe8:	f855 3b04 	ldr.w	r3, [r5], #4
 8003fec:	4798      	blx	r3
 8003fee:	3601      	adds	r6, #1
 8003ff0:	e7ee      	b.n	8003fd0 <__libc_init_array+0xc>
 8003ff2:	f855 3b04 	ldr.w	r3, [r5], #4
 8003ff6:	4798      	blx	r3
 8003ff8:	3601      	adds	r6, #1
 8003ffa:	e7f2      	b.n	8003fe2 <__libc_init_array+0x1e>
 8003ffc:	08004acc 	.word	0x08004acc
 8004000:	08004acc 	.word	0x08004acc
 8004004:	08004acc 	.word	0x08004acc
 8004008:	08004ad0 	.word	0x08004ad0

0800400c <__retarget_lock_init_recursive>:
 800400c:	4770      	bx	lr

0800400e <__retarget_lock_acquire_recursive>:
 800400e:	4770      	bx	lr

08004010 <__retarget_lock_release_recursive>:
 8004010:	4770      	bx	lr
	...

08004014 <_free_r>:
 8004014:	b538      	push	{r3, r4, r5, lr}
 8004016:	4605      	mov	r5, r0
 8004018:	2900      	cmp	r1, #0
 800401a:	d041      	beq.n	80040a0 <_free_r+0x8c>
 800401c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004020:	1f0c      	subs	r4, r1, #4
 8004022:	2b00      	cmp	r3, #0
 8004024:	bfb8      	it	lt
 8004026:	18e4      	addlt	r4, r4, r3
 8004028:	f000 f8e0 	bl	80041ec <__malloc_lock>
 800402c:	4a1d      	ldr	r2, [pc, #116]	@ (80040a4 <_free_r+0x90>)
 800402e:	6813      	ldr	r3, [r2, #0]
 8004030:	b933      	cbnz	r3, 8004040 <_free_r+0x2c>
 8004032:	6063      	str	r3, [r4, #4]
 8004034:	6014      	str	r4, [r2, #0]
 8004036:	4628      	mov	r0, r5
 8004038:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800403c:	f000 b8dc 	b.w	80041f8 <__malloc_unlock>
 8004040:	42a3      	cmp	r3, r4
 8004042:	d908      	bls.n	8004056 <_free_r+0x42>
 8004044:	6820      	ldr	r0, [r4, #0]
 8004046:	1821      	adds	r1, r4, r0
 8004048:	428b      	cmp	r3, r1
 800404a:	bf01      	itttt	eq
 800404c:	6819      	ldreq	r1, [r3, #0]
 800404e:	685b      	ldreq	r3, [r3, #4]
 8004050:	1809      	addeq	r1, r1, r0
 8004052:	6021      	streq	r1, [r4, #0]
 8004054:	e7ed      	b.n	8004032 <_free_r+0x1e>
 8004056:	461a      	mov	r2, r3
 8004058:	685b      	ldr	r3, [r3, #4]
 800405a:	b10b      	cbz	r3, 8004060 <_free_r+0x4c>
 800405c:	42a3      	cmp	r3, r4
 800405e:	d9fa      	bls.n	8004056 <_free_r+0x42>
 8004060:	6811      	ldr	r1, [r2, #0]
 8004062:	1850      	adds	r0, r2, r1
 8004064:	42a0      	cmp	r0, r4
 8004066:	d10b      	bne.n	8004080 <_free_r+0x6c>
 8004068:	6820      	ldr	r0, [r4, #0]
 800406a:	4401      	add	r1, r0
 800406c:	1850      	adds	r0, r2, r1
 800406e:	4283      	cmp	r3, r0
 8004070:	6011      	str	r1, [r2, #0]
 8004072:	d1e0      	bne.n	8004036 <_free_r+0x22>
 8004074:	6818      	ldr	r0, [r3, #0]
 8004076:	685b      	ldr	r3, [r3, #4]
 8004078:	6053      	str	r3, [r2, #4]
 800407a:	4408      	add	r0, r1
 800407c:	6010      	str	r0, [r2, #0]
 800407e:	e7da      	b.n	8004036 <_free_r+0x22>
 8004080:	d902      	bls.n	8004088 <_free_r+0x74>
 8004082:	230c      	movs	r3, #12
 8004084:	602b      	str	r3, [r5, #0]
 8004086:	e7d6      	b.n	8004036 <_free_r+0x22>
 8004088:	6820      	ldr	r0, [r4, #0]
 800408a:	1821      	adds	r1, r4, r0
 800408c:	428b      	cmp	r3, r1
 800408e:	bf04      	itt	eq
 8004090:	6819      	ldreq	r1, [r3, #0]
 8004092:	685b      	ldreq	r3, [r3, #4]
 8004094:	6063      	str	r3, [r4, #4]
 8004096:	bf04      	itt	eq
 8004098:	1809      	addeq	r1, r1, r0
 800409a:	6021      	streq	r1, [r4, #0]
 800409c:	6054      	str	r4, [r2, #4]
 800409e:	e7ca      	b.n	8004036 <_free_r+0x22>
 80040a0:	bd38      	pop	{r3, r4, r5, pc}
 80040a2:	bf00      	nop
 80040a4:	20000a30 	.word	0x20000a30

080040a8 <sbrk_aligned>:
 80040a8:	b570      	push	{r4, r5, r6, lr}
 80040aa:	4e0f      	ldr	r6, [pc, #60]	@ (80040e8 <sbrk_aligned+0x40>)
 80040ac:	460c      	mov	r4, r1
 80040ae:	6831      	ldr	r1, [r6, #0]
 80040b0:	4605      	mov	r5, r0
 80040b2:	b911      	cbnz	r1, 80040ba <sbrk_aligned+0x12>
 80040b4:	f000 fca6 	bl	8004a04 <_sbrk_r>
 80040b8:	6030      	str	r0, [r6, #0]
 80040ba:	4621      	mov	r1, r4
 80040bc:	4628      	mov	r0, r5
 80040be:	f000 fca1 	bl	8004a04 <_sbrk_r>
 80040c2:	1c43      	adds	r3, r0, #1
 80040c4:	d103      	bne.n	80040ce <sbrk_aligned+0x26>
 80040c6:	f04f 34ff 	mov.w	r4, #4294967295
 80040ca:	4620      	mov	r0, r4
 80040cc:	bd70      	pop	{r4, r5, r6, pc}
 80040ce:	1cc4      	adds	r4, r0, #3
 80040d0:	f024 0403 	bic.w	r4, r4, #3
 80040d4:	42a0      	cmp	r0, r4
 80040d6:	d0f8      	beq.n	80040ca <sbrk_aligned+0x22>
 80040d8:	1a21      	subs	r1, r4, r0
 80040da:	4628      	mov	r0, r5
 80040dc:	f000 fc92 	bl	8004a04 <_sbrk_r>
 80040e0:	3001      	adds	r0, #1
 80040e2:	d1f2      	bne.n	80040ca <sbrk_aligned+0x22>
 80040e4:	e7ef      	b.n	80040c6 <sbrk_aligned+0x1e>
 80040e6:	bf00      	nop
 80040e8:	20000a2c 	.word	0x20000a2c

080040ec <_malloc_r>:
 80040ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80040f0:	1ccd      	adds	r5, r1, #3
 80040f2:	f025 0503 	bic.w	r5, r5, #3
 80040f6:	3508      	adds	r5, #8
 80040f8:	2d0c      	cmp	r5, #12
 80040fa:	bf38      	it	cc
 80040fc:	250c      	movcc	r5, #12
 80040fe:	2d00      	cmp	r5, #0
 8004100:	4606      	mov	r6, r0
 8004102:	db01      	blt.n	8004108 <_malloc_r+0x1c>
 8004104:	42a9      	cmp	r1, r5
 8004106:	d904      	bls.n	8004112 <_malloc_r+0x26>
 8004108:	230c      	movs	r3, #12
 800410a:	6033      	str	r3, [r6, #0]
 800410c:	2000      	movs	r0, #0
 800410e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004112:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80041e8 <_malloc_r+0xfc>
 8004116:	f000 f869 	bl	80041ec <__malloc_lock>
 800411a:	f8d8 3000 	ldr.w	r3, [r8]
 800411e:	461c      	mov	r4, r3
 8004120:	bb44      	cbnz	r4, 8004174 <_malloc_r+0x88>
 8004122:	4629      	mov	r1, r5
 8004124:	4630      	mov	r0, r6
 8004126:	f7ff ffbf 	bl	80040a8 <sbrk_aligned>
 800412a:	1c43      	adds	r3, r0, #1
 800412c:	4604      	mov	r4, r0
 800412e:	d158      	bne.n	80041e2 <_malloc_r+0xf6>
 8004130:	f8d8 4000 	ldr.w	r4, [r8]
 8004134:	4627      	mov	r7, r4
 8004136:	2f00      	cmp	r7, #0
 8004138:	d143      	bne.n	80041c2 <_malloc_r+0xd6>
 800413a:	2c00      	cmp	r4, #0
 800413c:	d04b      	beq.n	80041d6 <_malloc_r+0xea>
 800413e:	6823      	ldr	r3, [r4, #0]
 8004140:	4639      	mov	r1, r7
 8004142:	4630      	mov	r0, r6
 8004144:	eb04 0903 	add.w	r9, r4, r3
 8004148:	f000 fc5c 	bl	8004a04 <_sbrk_r>
 800414c:	4581      	cmp	r9, r0
 800414e:	d142      	bne.n	80041d6 <_malloc_r+0xea>
 8004150:	6821      	ldr	r1, [r4, #0]
 8004152:	1a6d      	subs	r5, r5, r1
 8004154:	4629      	mov	r1, r5
 8004156:	4630      	mov	r0, r6
 8004158:	f7ff ffa6 	bl	80040a8 <sbrk_aligned>
 800415c:	3001      	adds	r0, #1
 800415e:	d03a      	beq.n	80041d6 <_malloc_r+0xea>
 8004160:	6823      	ldr	r3, [r4, #0]
 8004162:	442b      	add	r3, r5
 8004164:	6023      	str	r3, [r4, #0]
 8004166:	f8d8 3000 	ldr.w	r3, [r8]
 800416a:	685a      	ldr	r2, [r3, #4]
 800416c:	bb62      	cbnz	r2, 80041c8 <_malloc_r+0xdc>
 800416e:	f8c8 7000 	str.w	r7, [r8]
 8004172:	e00f      	b.n	8004194 <_malloc_r+0xa8>
 8004174:	6822      	ldr	r2, [r4, #0]
 8004176:	1b52      	subs	r2, r2, r5
 8004178:	d420      	bmi.n	80041bc <_malloc_r+0xd0>
 800417a:	2a0b      	cmp	r2, #11
 800417c:	d917      	bls.n	80041ae <_malloc_r+0xc2>
 800417e:	1961      	adds	r1, r4, r5
 8004180:	42a3      	cmp	r3, r4
 8004182:	6025      	str	r5, [r4, #0]
 8004184:	bf18      	it	ne
 8004186:	6059      	strne	r1, [r3, #4]
 8004188:	6863      	ldr	r3, [r4, #4]
 800418a:	bf08      	it	eq
 800418c:	f8c8 1000 	streq.w	r1, [r8]
 8004190:	5162      	str	r2, [r4, r5]
 8004192:	604b      	str	r3, [r1, #4]
 8004194:	4630      	mov	r0, r6
 8004196:	f000 f82f 	bl	80041f8 <__malloc_unlock>
 800419a:	f104 000b 	add.w	r0, r4, #11
 800419e:	1d23      	adds	r3, r4, #4
 80041a0:	f020 0007 	bic.w	r0, r0, #7
 80041a4:	1ac2      	subs	r2, r0, r3
 80041a6:	bf1c      	itt	ne
 80041a8:	1a1b      	subne	r3, r3, r0
 80041aa:	50a3      	strne	r3, [r4, r2]
 80041ac:	e7af      	b.n	800410e <_malloc_r+0x22>
 80041ae:	6862      	ldr	r2, [r4, #4]
 80041b0:	42a3      	cmp	r3, r4
 80041b2:	bf0c      	ite	eq
 80041b4:	f8c8 2000 	streq.w	r2, [r8]
 80041b8:	605a      	strne	r2, [r3, #4]
 80041ba:	e7eb      	b.n	8004194 <_malloc_r+0xa8>
 80041bc:	4623      	mov	r3, r4
 80041be:	6864      	ldr	r4, [r4, #4]
 80041c0:	e7ae      	b.n	8004120 <_malloc_r+0x34>
 80041c2:	463c      	mov	r4, r7
 80041c4:	687f      	ldr	r7, [r7, #4]
 80041c6:	e7b6      	b.n	8004136 <_malloc_r+0x4a>
 80041c8:	461a      	mov	r2, r3
 80041ca:	685b      	ldr	r3, [r3, #4]
 80041cc:	42a3      	cmp	r3, r4
 80041ce:	d1fb      	bne.n	80041c8 <_malloc_r+0xdc>
 80041d0:	2300      	movs	r3, #0
 80041d2:	6053      	str	r3, [r2, #4]
 80041d4:	e7de      	b.n	8004194 <_malloc_r+0xa8>
 80041d6:	230c      	movs	r3, #12
 80041d8:	6033      	str	r3, [r6, #0]
 80041da:	4630      	mov	r0, r6
 80041dc:	f000 f80c 	bl	80041f8 <__malloc_unlock>
 80041e0:	e794      	b.n	800410c <_malloc_r+0x20>
 80041e2:	6005      	str	r5, [r0, #0]
 80041e4:	e7d6      	b.n	8004194 <_malloc_r+0xa8>
 80041e6:	bf00      	nop
 80041e8:	20000a30 	.word	0x20000a30

080041ec <__malloc_lock>:
 80041ec:	4801      	ldr	r0, [pc, #4]	@ (80041f4 <__malloc_lock+0x8>)
 80041ee:	f7ff bf0e 	b.w	800400e <__retarget_lock_acquire_recursive>
 80041f2:	bf00      	nop
 80041f4:	20000a28 	.word	0x20000a28

080041f8 <__malloc_unlock>:
 80041f8:	4801      	ldr	r0, [pc, #4]	@ (8004200 <__malloc_unlock+0x8>)
 80041fa:	f7ff bf09 	b.w	8004010 <__retarget_lock_release_recursive>
 80041fe:	bf00      	nop
 8004200:	20000a28 	.word	0x20000a28

08004204 <__sfputc_r>:
 8004204:	6893      	ldr	r3, [r2, #8]
 8004206:	3b01      	subs	r3, #1
 8004208:	2b00      	cmp	r3, #0
 800420a:	b410      	push	{r4}
 800420c:	6093      	str	r3, [r2, #8]
 800420e:	da08      	bge.n	8004222 <__sfputc_r+0x1e>
 8004210:	6994      	ldr	r4, [r2, #24]
 8004212:	42a3      	cmp	r3, r4
 8004214:	db01      	blt.n	800421a <__sfputc_r+0x16>
 8004216:	290a      	cmp	r1, #10
 8004218:	d103      	bne.n	8004222 <__sfputc_r+0x1e>
 800421a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800421e:	f7ff bde8 	b.w	8003df2 <__swbuf_r>
 8004222:	6813      	ldr	r3, [r2, #0]
 8004224:	1c58      	adds	r0, r3, #1
 8004226:	6010      	str	r0, [r2, #0]
 8004228:	7019      	strb	r1, [r3, #0]
 800422a:	4608      	mov	r0, r1
 800422c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004230:	4770      	bx	lr

08004232 <__sfputs_r>:
 8004232:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004234:	4606      	mov	r6, r0
 8004236:	460f      	mov	r7, r1
 8004238:	4614      	mov	r4, r2
 800423a:	18d5      	adds	r5, r2, r3
 800423c:	42ac      	cmp	r4, r5
 800423e:	d101      	bne.n	8004244 <__sfputs_r+0x12>
 8004240:	2000      	movs	r0, #0
 8004242:	e007      	b.n	8004254 <__sfputs_r+0x22>
 8004244:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004248:	463a      	mov	r2, r7
 800424a:	4630      	mov	r0, r6
 800424c:	f7ff ffda 	bl	8004204 <__sfputc_r>
 8004250:	1c43      	adds	r3, r0, #1
 8004252:	d1f3      	bne.n	800423c <__sfputs_r+0xa>
 8004254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004258 <_vfiprintf_r>:
 8004258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800425c:	460d      	mov	r5, r1
 800425e:	b09d      	sub	sp, #116	@ 0x74
 8004260:	4614      	mov	r4, r2
 8004262:	4698      	mov	r8, r3
 8004264:	4606      	mov	r6, r0
 8004266:	b118      	cbz	r0, 8004270 <_vfiprintf_r+0x18>
 8004268:	6a03      	ldr	r3, [r0, #32]
 800426a:	b90b      	cbnz	r3, 8004270 <_vfiprintf_r+0x18>
 800426c:	f7ff fcd8 	bl	8003c20 <__sinit>
 8004270:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004272:	07d9      	lsls	r1, r3, #31
 8004274:	d405      	bmi.n	8004282 <_vfiprintf_r+0x2a>
 8004276:	89ab      	ldrh	r3, [r5, #12]
 8004278:	059a      	lsls	r2, r3, #22
 800427a:	d402      	bmi.n	8004282 <_vfiprintf_r+0x2a>
 800427c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800427e:	f7ff fec6 	bl	800400e <__retarget_lock_acquire_recursive>
 8004282:	89ab      	ldrh	r3, [r5, #12]
 8004284:	071b      	lsls	r3, r3, #28
 8004286:	d501      	bpl.n	800428c <_vfiprintf_r+0x34>
 8004288:	692b      	ldr	r3, [r5, #16]
 800428a:	b99b      	cbnz	r3, 80042b4 <_vfiprintf_r+0x5c>
 800428c:	4629      	mov	r1, r5
 800428e:	4630      	mov	r0, r6
 8004290:	f7ff fdee 	bl	8003e70 <__swsetup_r>
 8004294:	b170      	cbz	r0, 80042b4 <_vfiprintf_r+0x5c>
 8004296:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004298:	07dc      	lsls	r4, r3, #31
 800429a:	d504      	bpl.n	80042a6 <_vfiprintf_r+0x4e>
 800429c:	f04f 30ff 	mov.w	r0, #4294967295
 80042a0:	b01d      	add	sp, #116	@ 0x74
 80042a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042a6:	89ab      	ldrh	r3, [r5, #12]
 80042a8:	0598      	lsls	r0, r3, #22
 80042aa:	d4f7      	bmi.n	800429c <_vfiprintf_r+0x44>
 80042ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042ae:	f7ff feaf 	bl	8004010 <__retarget_lock_release_recursive>
 80042b2:	e7f3      	b.n	800429c <_vfiprintf_r+0x44>
 80042b4:	2300      	movs	r3, #0
 80042b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80042b8:	2320      	movs	r3, #32
 80042ba:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80042be:	f8cd 800c 	str.w	r8, [sp, #12]
 80042c2:	2330      	movs	r3, #48	@ 0x30
 80042c4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8004474 <_vfiprintf_r+0x21c>
 80042c8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80042cc:	f04f 0901 	mov.w	r9, #1
 80042d0:	4623      	mov	r3, r4
 80042d2:	469a      	mov	sl, r3
 80042d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80042d8:	b10a      	cbz	r2, 80042de <_vfiprintf_r+0x86>
 80042da:	2a25      	cmp	r2, #37	@ 0x25
 80042dc:	d1f9      	bne.n	80042d2 <_vfiprintf_r+0x7a>
 80042de:	ebba 0b04 	subs.w	fp, sl, r4
 80042e2:	d00b      	beq.n	80042fc <_vfiprintf_r+0xa4>
 80042e4:	465b      	mov	r3, fp
 80042e6:	4622      	mov	r2, r4
 80042e8:	4629      	mov	r1, r5
 80042ea:	4630      	mov	r0, r6
 80042ec:	f7ff ffa1 	bl	8004232 <__sfputs_r>
 80042f0:	3001      	adds	r0, #1
 80042f2:	f000 80a7 	beq.w	8004444 <_vfiprintf_r+0x1ec>
 80042f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80042f8:	445a      	add	r2, fp
 80042fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80042fc:	f89a 3000 	ldrb.w	r3, [sl]
 8004300:	2b00      	cmp	r3, #0
 8004302:	f000 809f 	beq.w	8004444 <_vfiprintf_r+0x1ec>
 8004306:	2300      	movs	r3, #0
 8004308:	f04f 32ff 	mov.w	r2, #4294967295
 800430c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004310:	f10a 0a01 	add.w	sl, sl, #1
 8004314:	9304      	str	r3, [sp, #16]
 8004316:	9307      	str	r3, [sp, #28]
 8004318:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800431c:	931a      	str	r3, [sp, #104]	@ 0x68
 800431e:	4654      	mov	r4, sl
 8004320:	2205      	movs	r2, #5
 8004322:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004326:	4853      	ldr	r0, [pc, #332]	@ (8004474 <_vfiprintf_r+0x21c>)
 8004328:	f7fb ff62 	bl	80001f0 <memchr>
 800432c:	9a04      	ldr	r2, [sp, #16]
 800432e:	b9d8      	cbnz	r0, 8004368 <_vfiprintf_r+0x110>
 8004330:	06d1      	lsls	r1, r2, #27
 8004332:	bf44      	itt	mi
 8004334:	2320      	movmi	r3, #32
 8004336:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800433a:	0713      	lsls	r3, r2, #28
 800433c:	bf44      	itt	mi
 800433e:	232b      	movmi	r3, #43	@ 0x2b
 8004340:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004344:	f89a 3000 	ldrb.w	r3, [sl]
 8004348:	2b2a      	cmp	r3, #42	@ 0x2a
 800434a:	d015      	beq.n	8004378 <_vfiprintf_r+0x120>
 800434c:	9a07      	ldr	r2, [sp, #28]
 800434e:	4654      	mov	r4, sl
 8004350:	2000      	movs	r0, #0
 8004352:	f04f 0c0a 	mov.w	ip, #10
 8004356:	4621      	mov	r1, r4
 8004358:	f811 3b01 	ldrb.w	r3, [r1], #1
 800435c:	3b30      	subs	r3, #48	@ 0x30
 800435e:	2b09      	cmp	r3, #9
 8004360:	d94b      	bls.n	80043fa <_vfiprintf_r+0x1a2>
 8004362:	b1b0      	cbz	r0, 8004392 <_vfiprintf_r+0x13a>
 8004364:	9207      	str	r2, [sp, #28]
 8004366:	e014      	b.n	8004392 <_vfiprintf_r+0x13a>
 8004368:	eba0 0308 	sub.w	r3, r0, r8
 800436c:	fa09 f303 	lsl.w	r3, r9, r3
 8004370:	4313      	orrs	r3, r2
 8004372:	9304      	str	r3, [sp, #16]
 8004374:	46a2      	mov	sl, r4
 8004376:	e7d2      	b.n	800431e <_vfiprintf_r+0xc6>
 8004378:	9b03      	ldr	r3, [sp, #12]
 800437a:	1d19      	adds	r1, r3, #4
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	9103      	str	r1, [sp, #12]
 8004380:	2b00      	cmp	r3, #0
 8004382:	bfbb      	ittet	lt
 8004384:	425b      	neglt	r3, r3
 8004386:	f042 0202 	orrlt.w	r2, r2, #2
 800438a:	9307      	strge	r3, [sp, #28]
 800438c:	9307      	strlt	r3, [sp, #28]
 800438e:	bfb8      	it	lt
 8004390:	9204      	strlt	r2, [sp, #16]
 8004392:	7823      	ldrb	r3, [r4, #0]
 8004394:	2b2e      	cmp	r3, #46	@ 0x2e
 8004396:	d10a      	bne.n	80043ae <_vfiprintf_r+0x156>
 8004398:	7863      	ldrb	r3, [r4, #1]
 800439a:	2b2a      	cmp	r3, #42	@ 0x2a
 800439c:	d132      	bne.n	8004404 <_vfiprintf_r+0x1ac>
 800439e:	9b03      	ldr	r3, [sp, #12]
 80043a0:	1d1a      	adds	r2, r3, #4
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	9203      	str	r2, [sp, #12]
 80043a6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80043aa:	3402      	adds	r4, #2
 80043ac:	9305      	str	r3, [sp, #20]
 80043ae:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8004484 <_vfiprintf_r+0x22c>
 80043b2:	7821      	ldrb	r1, [r4, #0]
 80043b4:	2203      	movs	r2, #3
 80043b6:	4650      	mov	r0, sl
 80043b8:	f7fb ff1a 	bl	80001f0 <memchr>
 80043bc:	b138      	cbz	r0, 80043ce <_vfiprintf_r+0x176>
 80043be:	9b04      	ldr	r3, [sp, #16]
 80043c0:	eba0 000a 	sub.w	r0, r0, sl
 80043c4:	2240      	movs	r2, #64	@ 0x40
 80043c6:	4082      	lsls	r2, r0
 80043c8:	4313      	orrs	r3, r2
 80043ca:	3401      	adds	r4, #1
 80043cc:	9304      	str	r3, [sp, #16]
 80043ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80043d2:	4829      	ldr	r0, [pc, #164]	@ (8004478 <_vfiprintf_r+0x220>)
 80043d4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80043d8:	2206      	movs	r2, #6
 80043da:	f7fb ff09 	bl	80001f0 <memchr>
 80043de:	2800      	cmp	r0, #0
 80043e0:	d03f      	beq.n	8004462 <_vfiprintf_r+0x20a>
 80043e2:	4b26      	ldr	r3, [pc, #152]	@ (800447c <_vfiprintf_r+0x224>)
 80043e4:	bb1b      	cbnz	r3, 800442e <_vfiprintf_r+0x1d6>
 80043e6:	9b03      	ldr	r3, [sp, #12]
 80043e8:	3307      	adds	r3, #7
 80043ea:	f023 0307 	bic.w	r3, r3, #7
 80043ee:	3308      	adds	r3, #8
 80043f0:	9303      	str	r3, [sp, #12]
 80043f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043f4:	443b      	add	r3, r7
 80043f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80043f8:	e76a      	b.n	80042d0 <_vfiprintf_r+0x78>
 80043fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80043fe:	460c      	mov	r4, r1
 8004400:	2001      	movs	r0, #1
 8004402:	e7a8      	b.n	8004356 <_vfiprintf_r+0xfe>
 8004404:	2300      	movs	r3, #0
 8004406:	3401      	adds	r4, #1
 8004408:	9305      	str	r3, [sp, #20]
 800440a:	4619      	mov	r1, r3
 800440c:	f04f 0c0a 	mov.w	ip, #10
 8004410:	4620      	mov	r0, r4
 8004412:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004416:	3a30      	subs	r2, #48	@ 0x30
 8004418:	2a09      	cmp	r2, #9
 800441a:	d903      	bls.n	8004424 <_vfiprintf_r+0x1cc>
 800441c:	2b00      	cmp	r3, #0
 800441e:	d0c6      	beq.n	80043ae <_vfiprintf_r+0x156>
 8004420:	9105      	str	r1, [sp, #20]
 8004422:	e7c4      	b.n	80043ae <_vfiprintf_r+0x156>
 8004424:	fb0c 2101 	mla	r1, ip, r1, r2
 8004428:	4604      	mov	r4, r0
 800442a:	2301      	movs	r3, #1
 800442c:	e7f0      	b.n	8004410 <_vfiprintf_r+0x1b8>
 800442e:	ab03      	add	r3, sp, #12
 8004430:	9300      	str	r3, [sp, #0]
 8004432:	462a      	mov	r2, r5
 8004434:	4b12      	ldr	r3, [pc, #72]	@ (8004480 <_vfiprintf_r+0x228>)
 8004436:	a904      	add	r1, sp, #16
 8004438:	4630      	mov	r0, r6
 800443a:	f3af 8000 	nop.w
 800443e:	4607      	mov	r7, r0
 8004440:	1c78      	adds	r0, r7, #1
 8004442:	d1d6      	bne.n	80043f2 <_vfiprintf_r+0x19a>
 8004444:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004446:	07d9      	lsls	r1, r3, #31
 8004448:	d405      	bmi.n	8004456 <_vfiprintf_r+0x1fe>
 800444a:	89ab      	ldrh	r3, [r5, #12]
 800444c:	059a      	lsls	r2, r3, #22
 800444e:	d402      	bmi.n	8004456 <_vfiprintf_r+0x1fe>
 8004450:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004452:	f7ff fddd 	bl	8004010 <__retarget_lock_release_recursive>
 8004456:	89ab      	ldrh	r3, [r5, #12]
 8004458:	065b      	lsls	r3, r3, #25
 800445a:	f53f af1f 	bmi.w	800429c <_vfiprintf_r+0x44>
 800445e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004460:	e71e      	b.n	80042a0 <_vfiprintf_r+0x48>
 8004462:	ab03      	add	r3, sp, #12
 8004464:	9300      	str	r3, [sp, #0]
 8004466:	462a      	mov	r2, r5
 8004468:	4b05      	ldr	r3, [pc, #20]	@ (8004480 <_vfiprintf_r+0x228>)
 800446a:	a904      	add	r1, sp, #16
 800446c:	4630      	mov	r0, r6
 800446e:	f000 f879 	bl	8004564 <_printf_i>
 8004472:	e7e4      	b.n	800443e <_vfiprintf_r+0x1e6>
 8004474:	08004a90 	.word	0x08004a90
 8004478:	08004a9a 	.word	0x08004a9a
 800447c:	00000000 	.word	0x00000000
 8004480:	08004233 	.word	0x08004233
 8004484:	08004a96 	.word	0x08004a96

08004488 <_printf_common>:
 8004488:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800448c:	4616      	mov	r6, r2
 800448e:	4698      	mov	r8, r3
 8004490:	688a      	ldr	r2, [r1, #8]
 8004492:	690b      	ldr	r3, [r1, #16]
 8004494:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004498:	4293      	cmp	r3, r2
 800449a:	bfb8      	it	lt
 800449c:	4613      	movlt	r3, r2
 800449e:	6033      	str	r3, [r6, #0]
 80044a0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80044a4:	4607      	mov	r7, r0
 80044a6:	460c      	mov	r4, r1
 80044a8:	b10a      	cbz	r2, 80044ae <_printf_common+0x26>
 80044aa:	3301      	adds	r3, #1
 80044ac:	6033      	str	r3, [r6, #0]
 80044ae:	6823      	ldr	r3, [r4, #0]
 80044b0:	0699      	lsls	r1, r3, #26
 80044b2:	bf42      	ittt	mi
 80044b4:	6833      	ldrmi	r3, [r6, #0]
 80044b6:	3302      	addmi	r3, #2
 80044b8:	6033      	strmi	r3, [r6, #0]
 80044ba:	6825      	ldr	r5, [r4, #0]
 80044bc:	f015 0506 	ands.w	r5, r5, #6
 80044c0:	d106      	bne.n	80044d0 <_printf_common+0x48>
 80044c2:	f104 0a19 	add.w	sl, r4, #25
 80044c6:	68e3      	ldr	r3, [r4, #12]
 80044c8:	6832      	ldr	r2, [r6, #0]
 80044ca:	1a9b      	subs	r3, r3, r2
 80044cc:	42ab      	cmp	r3, r5
 80044ce:	dc26      	bgt.n	800451e <_printf_common+0x96>
 80044d0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80044d4:	6822      	ldr	r2, [r4, #0]
 80044d6:	3b00      	subs	r3, #0
 80044d8:	bf18      	it	ne
 80044da:	2301      	movne	r3, #1
 80044dc:	0692      	lsls	r2, r2, #26
 80044de:	d42b      	bmi.n	8004538 <_printf_common+0xb0>
 80044e0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80044e4:	4641      	mov	r1, r8
 80044e6:	4638      	mov	r0, r7
 80044e8:	47c8      	blx	r9
 80044ea:	3001      	adds	r0, #1
 80044ec:	d01e      	beq.n	800452c <_printf_common+0xa4>
 80044ee:	6823      	ldr	r3, [r4, #0]
 80044f0:	6922      	ldr	r2, [r4, #16]
 80044f2:	f003 0306 	and.w	r3, r3, #6
 80044f6:	2b04      	cmp	r3, #4
 80044f8:	bf02      	ittt	eq
 80044fa:	68e5      	ldreq	r5, [r4, #12]
 80044fc:	6833      	ldreq	r3, [r6, #0]
 80044fe:	1aed      	subeq	r5, r5, r3
 8004500:	68a3      	ldr	r3, [r4, #8]
 8004502:	bf0c      	ite	eq
 8004504:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004508:	2500      	movne	r5, #0
 800450a:	4293      	cmp	r3, r2
 800450c:	bfc4      	itt	gt
 800450e:	1a9b      	subgt	r3, r3, r2
 8004510:	18ed      	addgt	r5, r5, r3
 8004512:	2600      	movs	r6, #0
 8004514:	341a      	adds	r4, #26
 8004516:	42b5      	cmp	r5, r6
 8004518:	d11a      	bne.n	8004550 <_printf_common+0xc8>
 800451a:	2000      	movs	r0, #0
 800451c:	e008      	b.n	8004530 <_printf_common+0xa8>
 800451e:	2301      	movs	r3, #1
 8004520:	4652      	mov	r2, sl
 8004522:	4641      	mov	r1, r8
 8004524:	4638      	mov	r0, r7
 8004526:	47c8      	blx	r9
 8004528:	3001      	adds	r0, #1
 800452a:	d103      	bne.n	8004534 <_printf_common+0xac>
 800452c:	f04f 30ff 	mov.w	r0, #4294967295
 8004530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004534:	3501      	adds	r5, #1
 8004536:	e7c6      	b.n	80044c6 <_printf_common+0x3e>
 8004538:	18e1      	adds	r1, r4, r3
 800453a:	1c5a      	adds	r2, r3, #1
 800453c:	2030      	movs	r0, #48	@ 0x30
 800453e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004542:	4422      	add	r2, r4
 8004544:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004548:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800454c:	3302      	adds	r3, #2
 800454e:	e7c7      	b.n	80044e0 <_printf_common+0x58>
 8004550:	2301      	movs	r3, #1
 8004552:	4622      	mov	r2, r4
 8004554:	4641      	mov	r1, r8
 8004556:	4638      	mov	r0, r7
 8004558:	47c8      	blx	r9
 800455a:	3001      	adds	r0, #1
 800455c:	d0e6      	beq.n	800452c <_printf_common+0xa4>
 800455e:	3601      	adds	r6, #1
 8004560:	e7d9      	b.n	8004516 <_printf_common+0x8e>
	...

08004564 <_printf_i>:
 8004564:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004568:	7e0f      	ldrb	r7, [r1, #24]
 800456a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800456c:	2f78      	cmp	r7, #120	@ 0x78
 800456e:	4691      	mov	r9, r2
 8004570:	4680      	mov	r8, r0
 8004572:	460c      	mov	r4, r1
 8004574:	469a      	mov	sl, r3
 8004576:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800457a:	d807      	bhi.n	800458c <_printf_i+0x28>
 800457c:	2f62      	cmp	r7, #98	@ 0x62
 800457e:	d80a      	bhi.n	8004596 <_printf_i+0x32>
 8004580:	2f00      	cmp	r7, #0
 8004582:	f000 80d2 	beq.w	800472a <_printf_i+0x1c6>
 8004586:	2f58      	cmp	r7, #88	@ 0x58
 8004588:	f000 80b9 	beq.w	80046fe <_printf_i+0x19a>
 800458c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004590:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004594:	e03a      	b.n	800460c <_printf_i+0xa8>
 8004596:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800459a:	2b15      	cmp	r3, #21
 800459c:	d8f6      	bhi.n	800458c <_printf_i+0x28>
 800459e:	a101      	add	r1, pc, #4	@ (adr r1, 80045a4 <_printf_i+0x40>)
 80045a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80045a4:	080045fd 	.word	0x080045fd
 80045a8:	08004611 	.word	0x08004611
 80045ac:	0800458d 	.word	0x0800458d
 80045b0:	0800458d 	.word	0x0800458d
 80045b4:	0800458d 	.word	0x0800458d
 80045b8:	0800458d 	.word	0x0800458d
 80045bc:	08004611 	.word	0x08004611
 80045c0:	0800458d 	.word	0x0800458d
 80045c4:	0800458d 	.word	0x0800458d
 80045c8:	0800458d 	.word	0x0800458d
 80045cc:	0800458d 	.word	0x0800458d
 80045d0:	08004711 	.word	0x08004711
 80045d4:	0800463b 	.word	0x0800463b
 80045d8:	080046cb 	.word	0x080046cb
 80045dc:	0800458d 	.word	0x0800458d
 80045e0:	0800458d 	.word	0x0800458d
 80045e4:	08004733 	.word	0x08004733
 80045e8:	0800458d 	.word	0x0800458d
 80045ec:	0800463b 	.word	0x0800463b
 80045f0:	0800458d 	.word	0x0800458d
 80045f4:	0800458d 	.word	0x0800458d
 80045f8:	080046d3 	.word	0x080046d3
 80045fc:	6833      	ldr	r3, [r6, #0]
 80045fe:	1d1a      	adds	r2, r3, #4
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	6032      	str	r2, [r6, #0]
 8004604:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004608:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800460c:	2301      	movs	r3, #1
 800460e:	e09d      	b.n	800474c <_printf_i+0x1e8>
 8004610:	6833      	ldr	r3, [r6, #0]
 8004612:	6820      	ldr	r0, [r4, #0]
 8004614:	1d19      	adds	r1, r3, #4
 8004616:	6031      	str	r1, [r6, #0]
 8004618:	0606      	lsls	r6, r0, #24
 800461a:	d501      	bpl.n	8004620 <_printf_i+0xbc>
 800461c:	681d      	ldr	r5, [r3, #0]
 800461e:	e003      	b.n	8004628 <_printf_i+0xc4>
 8004620:	0645      	lsls	r5, r0, #25
 8004622:	d5fb      	bpl.n	800461c <_printf_i+0xb8>
 8004624:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004628:	2d00      	cmp	r5, #0
 800462a:	da03      	bge.n	8004634 <_printf_i+0xd0>
 800462c:	232d      	movs	r3, #45	@ 0x2d
 800462e:	426d      	negs	r5, r5
 8004630:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004634:	4859      	ldr	r0, [pc, #356]	@ (800479c <_printf_i+0x238>)
 8004636:	230a      	movs	r3, #10
 8004638:	e011      	b.n	800465e <_printf_i+0xfa>
 800463a:	6821      	ldr	r1, [r4, #0]
 800463c:	6833      	ldr	r3, [r6, #0]
 800463e:	0608      	lsls	r0, r1, #24
 8004640:	f853 5b04 	ldr.w	r5, [r3], #4
 8004644:	d402      	bmi.n	800464c <_printf_i+0xe8>
 8004646:	0649      	lsls	r1, r1, #25
 8004648:	bf48      	it	mi
 800464a:	b2ad      	uxthmi	r5, r5
 800464c:	2f6f      	cmp	r7, #111	@ 0x6f
 800464e:	4853      	ldr	r0, [pc, #332]	@ (800479c <_printf_i+0x238>)
 8004650:	6033      	str	r3, [r6, #0]
 8004652:	bf14      	ite	ne
 8004654:	230a      	movne	r3, #10
 8004656:	2308      	moveq	r3, #8
 8004658:	2100      	movs	r1, #0
 800465a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800465e:	6866      	ldr	r6, [r4, #4]
 8004660:	60a6      	str	r6, [r4, #8]
 8004662:	2e00      	cmp	r6, #0
 8004664:	bfa2      	ittt	ge
 8004666:	6821      	ldrge	r1, [r4, #0]
 8004668:	f021 0104 	bicge.w	r1, r1, #4
 800466c:	6021      	strge	r1, [r4, #0]
 800466e:	b90d      	cbnz	r5, 8004674 <_printf_i+0x110>
 8004670:	2e00      	cmp	r6, #0
 8004672:	d04b      	beq.n	800470c <_printf_i+0x1a8>
 8004674:	4616      	mov	r6, r2
 8004676:	fbb5 f1f3 	udiv	r1, r5, r3
 800467a:	fb03 5711 	mls	r7, r3, r1, r5
 800467e:	5dc7      	ldrb	r7, [r0, r7]
 8004680:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004684:	462f      	mov	r7, r5
 8004686:	42bb      	cmp	r3, r7
 8004688:	460d      	mov	r5, r1
 800468a:	d9f4      	bls.n	8004676 <_printf_i+0x112>
 800468c:	2b08      	cmp	r3, #8
 800468e:	d10b      	bne.n	80046a8 <_printf_i+0x144>
 8004690:	6823      	ldr	r3, [r4, #0]
 8004692:	07df      	lsls	r7, r3, #31
 8004694:	d508      	bpl.n	80046a8 <_printf_i+0x144>
 8004696:	6923      	ldr	r3, [r4, #16]
 8004698:	6861      	ldr	r1, [r4, #4]
 800469a:	4299      	cmp	r1, r3
 800469c:	bfde      	ittt	le
 800469e:	2330      	movle	r3, #48	@ 0x30
 80046a0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80046a4:	f106 36ff 	addle.w	r6, r6, #4294967295
 80046a8:	1b92      	subs	r2, r2, r6
 80046aa:	6122      	str	r2, [r4, #16]
 80046ac:	f8cd a000 	str.w	sl, [sp]
 80046b0:	464b      	mov	r3, r9
 80046b2:	aa03      	add	r2, sp, #12
 80046b4:	4621      	mov	r1, r4
 80046b6:	4640      	mov	r0, r8
 80046b8:	f7ff fee6 	bl	8004488 <_printf_common>
 80046bc:	3001      	adds	r0, #1
 80046be:	d14a      	bne.n	8004756 <_printf_i+0x1f2>
 80046c0:	f04f 30ff 	mov.w	r0, #4294967295
 80046c4:	b004      	add	sp, #16
 80046c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80046ca:	6823      	ldr	r3, [r4, #0]
 80046cc:	f043 0320 	orr.w	r3, r3, #32
 80046d0:	6023      	str	r3, [r4, #0]
 80046d2:	4833      	ldr	r0, [pc, #204]	@ (80047a0 <_printf_i+0x23c>)
 80046d4:	2778      	movs	r7, #120	@ 0x78
 80046d6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80046da:	6823      	ldr	r3, [r4, #0]
 80046dc:	6831      	ldr	r1, [r6, #0]
 80046de:	061f      	lsls	r7, r3, #24
 80046e0:	f851 5b04 	ldr.w	r5, [r1], #4
 80046e4:	d402      	bmi.n	80046ec <_printf_i+0x188>
 80046e6:	065f      	lsls	r7, r3, #25
 80046e8:	bf48      	it	mi
 80046ea:	b2ad      	uxthmi	r5, r5
 80046ec:	6031      	str	r1, [r6, #0]
 80046ee:	07d9      	lsls	r1, r3, #31
 80046f0:	bf44      	itt	mi
 80046f2:	f043 0320 	orrmi.w	r3, r3, #32
 80046f6:	6023      	strmi	r3, [r4, #0]
 80046f8:	b11d      	cbz	r5, 8004702 <_printf_i+0x19e>
 80046fa:	2310      	movs	r3, #16
 80046fc:	e7ac      	b.n	8004658 <_printf_i+0xf4>
 80046fe:	4827      	ldr	r0, [pc, #156]	@ (800479c <_printf_i+0x238>)
 8004700:	e7e9      	b.n	80046d6 <_printf_i+0x172>
 8004702:	6823      	ldr	r3, [r4, #0]
 8004704:	f023 0320 	bic.w	r3, r3, #32
 8004708:	6023      	str	r3, [r4, #0]
 800470a:	e7f6      	b.n	80046fa <_printf_i+0x196>
 800470c:	4616      	mov	r6, r2
 800470e:	e7bd      	b.n	800468c <_printf_i+0x128>
 8004710:	6833      	ldr	r3, [r6, #0]
 8004712:	6825      	ldr	r5, [r4, #0]
 8004714:	6961      	ldr	r1, [r4, #20]
 8004716:	1d18      	adds	r0, r3, #4
 8004718:	6030      	str	r0, [r6, #0]
 800471a:	062e      	lsls	r6, r5, #24
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	d501      	bpl.n	8004724 <_printf_i+0x1c0>
 8004720:	6019      	str	r1, [r3, #0]
 8004722:	e002      	b.n	800472a <_printf_i+0x1c6>
 8004724:	0668      	lsls	r0, r5, #25
 8004726:	d5fb      	bpl.n	8004720 <_printf_i+0x1bc>
 8004728:	8019      	strh	r1, [r3, #0]
 800472a:	2300      	movs	r3, #0
 800472c:	6123      	str	r3, [r4, #16]
 800472e:	4616      	mov	r6, r2
 8004730:	e7bc      	b.n	80046ac <_printf_i+0x148>
 8004732:	6833      	ldr	r3, [r6, #0]
 8004734:	1d1a      	adds	r2, r3, #4
 8004736:	6032      	str	r2, [r6, #0]
 8004738:	681e      	ldr	r6, [r3, #0]
 800473a:	6862      	ldr	r2, [r4, #4]
 800473c:	2100      	movs	r1, #0
 800473e:	4630      	mov	r0, r6
 8004740:	f7fb fd56 	bl	80001f0 <memchr>
 8004744:	b108      	cbz	r0, 800474a <_printf_i+0x1e6>
 8004746:	1b80      	subs	r0, r0, r6
 8004748:	6060      	str	r0, [r4, #4]
 800474a:	6863      	ldr	r3, [r4, #4]
 800474c:	6123      	str	r3, [r4, #16]
 800474e:	2300      	movs	r3, #0
 8004750:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004754:	e7aa      	b.n	80046ac <_printf_i+0x148>
 8004756:	6923      	ldr	r3, [r4, #16]
 8004758:	4632      	mov	r2, r6
 800475a:	4649      	mov	r1, r9
 800475c:	4640      	mov	r0, r8
 800475e:	47d0      	blx	sl
 8004760:	3001      	adds	r0, #1
 8004762:	d0ad      	beq.n	80046c0 <_printf_i+0x15c>
 8004764:	6823      	ldr	r3, [r4, #0]
 8004766:	079b      	lsls	r3, r3, #30
 8004768:	d413      	bmi.n	8004792 <_printf_i+0x22e>
 800476a:	68e0      	ldr	r0, [r4, #12]
 800476c:	9b03      	ldr	r3, [sp, #12]
 800476e:	4298      	cmp	r0, r3
 8004770:	bfb8      	it	lt
 8004772:	4618      	movlt	r0, r3
 8004774:	e7a6      	b.n	80046c4 <_printf_i+0x160>
 8004776:	2301      	movs	r3, #1
 8004778:	4632      	mov	r2, r6
 800477a:	4649      	mov	r1, r9
 800477c:	4640      	mov	r0, r8
 800477e:	47d0      	blx	sl
 8004780:	3001      	adds	r0, #1
 8004782:	d09d      	beq.n	80046c0 <_printf_i+0x15c>
 8004784:	3501      	adds	r5, #1
 8004786:	68e3      	ldr	r3, [r4, #12]
 8004788:	9903      	ldr	r1, [sp, #12]
 800478a:	1a5b      	subs	r3, r3, r1
 800478c:	42ab      	cmp	r3, r5
 800478e:	dcf2      	bgt.n	8004776 <_printf_i+0x212>
 8004790:	e7eb      	b.n	800476a <_printf_i+0x206>
 8004792:	2500      	movs	r5, #0
 8004794:	f104 0619 	add.w	r6, r4, #25
 8004798:	e7f5      	b.n	8004786 <_printf_i+0x222>
 800479a:	bf00      	nop
 800479c:	08004aa1 	.word	0x08004aa1
 80047a0:	08004ab2 	.word	0x08004ab2

080047a4 <__sflush_r>:
 80047a4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80047a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047ac:	0716      	lsls	r6, r2, #28
 80047ae:	4605      	mov	r5, r0
 80047b0:	460c      	mov	r4, r1
 80047b2:	d454      	bmi.n	800485e <__sflush_r+0xba>
 80047b4:	684b      	ldr	r3, [r1, #4]
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	dc02      	bgt.n	80047c0 <__sflush_r+0x1c>
 80047ba:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80047bc:	2b00      	cmp	r3, #0
 80047be:	dd48      	ble.n	8004852 <__sflush_r+0xae>
 80047c0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80047c2:	2e00      	cmp	r6, #0
 80047c4:	d045      	beq.n	8004852 <__sflush_r+0xae>
 80047c6:	2300      	movs	r3, #0
 80047c8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80047cc:	682f      	ldr	r7, [r5, #0]
 80047ce:	6a21      	ldr	r1, [r4, #32]
 80047d0:	602b      	str	r3, [r5, #0]
 80047d2:	d030      	beq.n	8004836 <__sflush_r+0x92>
 80047d4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80047d6:	89a3      	ldrh	r3, [r4, #12]
 80047d8:	0759      	lsls	r1, r3, #29
 80047da:	d505      	bpl.n	80047e8 <__sflush_r+0x44>
 80047dc:	6863      	ldr	r3, [r4, #4]
 80047de:	1ad2      	subs	r2, r2, r3
 80047e0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80047e2:	b10b      	cbz	r3, 80047e8 <__sflush_r+0x44>
 80047e4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80047e6:	1ad2      	subs	r2, r2, r3
 80047e8:	2300      	movs	r3, #0
 80047ea:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80047ec:	6a21      	ldr	r1, [r4, #32]
 80047ee:	4628      	mov	r0, r5
 80047f0:	47b0      	blx	r6
 80047f2:	1c43      	adds	r3, r0, #1
 80047f4:	89a3      	ldrh	r3, [r4, #12]
 80047f6:	d106      	bne.n	8004806 <__sflush_r+0x62>
 80047f8:	6829      	ldr	r1, [r5, #0]
 80047fa:	291d      	cmp	r1, #29
 80047fc:	d82b      	bhi.n	8004856 <__sflush_r+0xb2>
 80047fe:	4a2a      	ldr	r2, [pc, #168]	@ (80048a8 <__sflush_r+0x104>)
 8004800:	410a      	asrs	r2, r1
 8004802:	07d6      	lsls	r6, r2, #31
 8004804:	d427      	bmi.n	8004856 <__sflush_r+0xb2>
 8004806:	2200      	movs	r2, #0
 8004808:	6062      	str	r2, [r4, #4]
 800480a:	04d9      	lsls	r1, r3, #19
 800480c:	6922      	ldr	r2, [r4, #16]
 800480e:	6022      	str	r2, [r4, #0]
 8004810:	d504      	bpl.n	800481c <__sflush_r+0x78>
 8004812:	1c42      	adds	r2, r0, #1
 8004814:	d101      	bne.n	800481a <__sflush_r+0x76>
 8004816:	682b      	ldr	r3, [r5, #0]
 8004818:	b903      	cbnz	r3, 800481c <__sflush_r+0x78>
 800481a:	6560      	str	r0, [r4, #84]	@ 0x54
 800481c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800481e:	602f      	str	r7, [r5, #0]
 8004820:	b1b9      	cbz	r1, 8004852 <__sflush_r+0xae>
 8004822:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004826:	4299      	cmp	r1, r3
 8004828:	d002      	beq.n	8004830 <__sflush_r+0x8c>
 800482a:	4628      	mov	r0, r5
 800482c:	f7ff fbf2 	bl	8004014 <_free_r>
 8004830:	2300      	movs	r3, #0
 8004832:	6363      	str	r3, [r4, #52]	@ 0x34
 8004834:	e00d      	b.n	8004852 <__sflush_r+0xae>
 8004836:	2301      	movs	r3, #1
 8004838:	4628      	mov	r0, r5
 800483a:	47b0      	blx	r6
 800483c:	4602      	mov	r2, r0
 800483e:	1c50      	adds	r0, r2, #1
 8004840:	d1c9      	bne.n	80047d6 <__sflush_r+0x32>
 8004842:	682b      	ldr	r3, [r5, #0]
 8004844:	2b00      	cmp	r3, #0
 8004846:	d0c6      	beq.n	80047d6 <__sflush_r+0x32>
 8004848:	2b1d      	cmp	r3, #29
 800484a:	d001      	beq.n	8004850 <__sflush_r+0xac>
 800484c:	2b16      	cmp	r3, #22
 800484e:	d11e      	bne.n	800488e <__sflush_r+0xea>
 8004850:	602f      	str	r7, [r5, #0]
 8004852:	2000      	movs	r0, #0
 8004854:	e022      	b.n	800489c <__sflush_r+0xf8>
 8004856:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800485a:	b21b      	sxth	r3, r3
 800485c:	e01b      	b.n	8004896 <__sflush_r+0xf2>
 800485e:	690f      	ldr	r7, [r1, #16]
 8004860:	2f00      	cmp	r7, #0
 8004862:	d0f6      	beq.n	8004852 <__sflush_r+0xae>
 8004864:	0793      	lsls	r3, r2, #30
 8004866:	680e      	ldr	r6, [r1, #0]
 8004868:	bf08      	it	eq
 800486a:	694b      	ldreq	r3, [r1, #20]
 800486c:	600f      	str	r7, [r1, #0]
 800486e:	bf18      	it	ne
 8004870:	2300      	movne	r3, #0
 8004872:	eba6 0807 	sub.w	r8, r6, r7
 8004876:	608b      	str	r3, [r1, #8]
 8004878:	f1b8 0f00 	cmp.w	r8, #0
 800487c:	dde9      	ble.n	8004852 <__sflush_r+0xae>
 800487e:	6a21      	ldr	r1, [r4, #32]
 8004880:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8004882:	4643      	mov	r3, r8
 8004884:	463a      	mov	r2, r7
 8004886:	4628      	mov	r0, r5
 8004888:	47b0      	blx	r6
 800488a:	2800      	cmp	r0, #0
 800488c:	dc08      	bgt.n	80048a0 <__sflush_r+0xfc>
 800488e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004892:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004896:	81a3      	strh	r3, [r4, #12]
 8004898:	f04f 30ff 	mov.w	r0, #4294967295
 800489c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80048a0:	4407      	add	r7, r0
 80048a2:	eba8 0800 	sub.w	r8, r8, r0
 80048a6:	e7e7      	b.n	8004878 <__sflush_r+0xd4>
 80048a8:	dfbffffe 	.word	0xdfbffffe

080048ac <_fflush_r>:
 80048ac:	b538      	push	{r3, r4, r5, lr}
 80048ae:	690b      	ldr	r3, [r1, #16]
 80048b0:	4605      	mov	r5, r0
 80048b2:	460c      	mov	r4, r1
 80048b4:	b913      	cbnz	r3, 80048bc <_fflush_r+0x10>
 80048b6:	2500      	movs	r5, #0
 80048b8:	4628      	mov	r0, r5
 80048ba:	bd38      	pop	{r3, r4, r5, pc}
 80048bc:	b118      	cbz	r0, 80048c6 <_fflush_r+0x1a>
 80048be:	6a03      	ldr	r3, [r0, #32]
 80048c0:	b90b      	cbnz	r3, 80048c6 <_fflush_r+0x1a>
 80048c2:	f7ff f9ad 	bl	8003c20 <__sinit>
 80048c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d0f3      	beq.n	80048b6 <_fflush_r+0xa>
 80048ce:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80048d0:	07d0      	lsls	r0, r2, #31
 80048d2:	d404      	bmi.n	80048de <_fflush_r+0x32>
 80048d4:	0599      	lsls	r1, r3, #22
 80048d6:	d402      	bmi.n	80048de <_fflush_r+0x32>
 80048d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80048da:	f7ff fb98 	bl	800400e <__retarget_lock_acquire_recursive>
 80048de:	4628      	mov	r0, r5
 80048e0:	4621      	mov	r1, r4
 80048e2:	f7ff ff5f 	bl	80047a4 <__sflush_r>
 80048e6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80048e8:	07da      	lsls	r2, r3, #31
 80048ea:	4605      	mov	r5, r0
 80048ec:	d4e4      	bmi.n	80048b8 <_fflush_r+0xc>
 80048ee:	89a3      	ldrh	r3, [r4, #12]
 80048f0:	059b      	lsls	r3, r3, #22
 80048f2:	d4e1      	bmi.n	80048b8 <_fflush_r+0xc>
 80048f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80048f6:	f7ff fb8b 	bl	8004010 <__retarget_lock_release_recursive>
 80048fa:	e7dd      	b.n	80048b8 <_fflush_r+0xc>

080048fc <__swhatbuf_r>:
 80048fc:	b570      	push	{r4, r5, r6, lr}
 80048fe:	460c      	mov	r4, r1
 8004900:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004904:	2900      	cmp	r1, #0
 8004906:	b096      	sub	sp, #88	@ 0x58
 8004908:	4615      	mov	r5, r2
 800490a:	461e      	mov	r6, r3
 800490c:	da0d      	bge.n	800492a <__swhatbuf_r+0x2e>
 800490e:	89a3      	ldrh	r3, [r4, #12]
 8004910:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004914:	f04f 0100 	mov.w	r1, #0
 8004918:	bf14      	ite	ne
 800491a:	2340      	movne	r3, #64	@ 0x40
 800491c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004920:	2000      	movs	r0, #0
 8004922:	6031      	str	r1, [r6, #0]
 8004924:	602b      	str	r3, [r5, #0]
 8004926:	b016      	add	sp, #88	@ 0x58
 8004928:	bd70      	pop	{r4, r5, r6, pc}
 800492a:	466a      	mov	r2, sp
 800492c:	f000 f848 	bl	80049c0 <_fstat_r>
 8004930:	2800      	cmp	r0, #0
 8004932:	dbec      	blt.n	800490e <__swhatbuf_r+0x12>
 8004934:	9901      	ldr	r1, [sp, #4]
 8004936:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800493a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800493e:	4259      	negs	r1, r3
 8004940:	4159      	adcs	r1, r3
 8004942:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004946:	e7eb      	b.n	8004920 <__swhatbuf_r+0x24>

08004948 <__smakebuf_r>:
 8004948:	898b      	ldrh	r3, [r1, #12]
 800494a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800494c:	079d      	lsls	r5, r3, #30
 800494e:	4606      	mov	r6, r0
 8004950:	460c      	mov	r4, r1
 8004952:	d507      	bpl.n	8004964 <__smakebuf_r+0x1c>
 8004954:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004958:	6023      	str	r3, [r4, #0]
 800495a:	6123      	str	r3, [r4, #16]
 800495c:	2301      	movs	r3, #1
 800495e:	6163      	str	r3, [r4, #20]
 8004960:	b003      	add	sp, #12
 8004962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004964:	ab01      	add	r3, sp, #4
 8004966:	466a      	mov	r2, sp
 8004968:	f7ff ffc8 	bl	80048fc <__swhatbuf_r>
 800496c:	9f00      	ldr	r7, [sp, #0]
 800496e:	4605      	mov	r5, r0
 8004970:	4639      	mov	r1, r7
 8004972:	4630      	mov	r0, r6
 8004974:	f7ff fbba 	bl	80040ec <_malloc_r>
 8004978:	b948      	cbnz	r0, 800498e <__smakebuf_r+0x46>
 800497a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800497e:	059a      	lsls	r2, r3, #22
 8004980:	d4ee      	bmi.n	8004960 <__smakebuf_r+0x18>
 8004982:	f023 0303 	bic.w	r3, r3, #3
 8004986:	f043 0302 	orr.w	r3, r3, #2
 800498a:	81a3      	strh	r3, [r4, #12]
 800498c:	e7e2      	b.n	8004954 <__smakebuf_r+0xc>
 800498e:	89a3      	ldrh	r3, [r4, #12]
 8004990:	6020      	str	r0, [r4, #0]
 8004992:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004996:	81a3      	strh	r3, [r4, #12]
 8004998:	9b01      	ldr	r3, [sp, #4]
 800499a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800499e:	b15b      	cbz	r3, 80049b8 <__smakebuf_r+0x70>
 80049a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80049a4:	4630      	mov	r0, r6
 80049a6:	f000 f81d 	bl	80049e4 <_isatty_r>
 80049aa:	b128      	cbz	r0, 80049b8 <__smakebuf_r+0x70>
 80049ac:	89a3      	ldrh	r3, [r4, #12]
 80049ae:	f023 0303 	bic.w	r3, r3, #3
 80049b2:	f043 0301 	orr.w	r3, r3, #1
 80049b6:	81a3      	strh	r3, [r4, #12]
 80049b8:	89a3      	ldrh	r3, [r4, #12]
 80049ba:	431d      	orrs	r5, r3
 80049bc:	81a5      	strh	r5, [r4, #12]
 80049be:	e7cf      	b.n	8004960 <__smakebuf_r+0x18>

080049c0 <_fstat_r>:
 80049c0:	b538      	push	{r3, r4, r5, lr}
 80049c2:	4d07      	ldr	r5, [pc, #28]	@ (80049e0 <_fstat_r+0x20>)
 80049c4:	2300      	movs	r3, #0
 80049c6:	4604      	mov	r4, r0
 80049c8:	4608      	mov	r0, r1
 80049ca:	4611      	mov	r1, r2
 80049cc:	602b      	str	r3, [r5, #0]
 80049ce:	f7fc fc13 	bl	80011f8 <_fstat>
 80049d2:	1c43      	adds	r3, r0, #1
 80049d4:	d102      	bne.n	80049dc <_fstat_r+0x1c>
 80049d6:	682b      	ldr	r3, [r5, #0]
 80049d8:	b103      	cbz	r3, 80049dc <_fstat_r+0x1c>
 80049da:	6023      	str	r3, [r4, #0]
 80049dc:	bd38      	pop	{r3, r4, r5, pc}
 80049de:	bf00      	nop
 80049e0:	20000a24 	.word	0x20000a24

080049e4 <_isatty_r>:
 80049e4:	b538      	push	{r3, r4, r5, lr}
 80049e6:	4d06      	ldr	r5, [pc, #24]	@ (8004a00 <_isatty_r+0x1c>)
 80049e8:	2300      	movs	r3, #0
 80049ea:	4604      	mov	r4, r0
 80049ec:	4608      	mov	r0, r1
 80049ee:	602b      	str	r3, [r5, #0]
 80049f0:	f7fc fc12 	bl	8001218 <_isatty>
 80049f4:	1c43      	adds	r3, r0, #1
 80049f6:	d102      	bne.n	80049fe <_isatty_r+0x1a>
 80049f8:	682b      	ldr	r3, [r5, #0]
 80049fa:	b103      	cbz	r3, 80049fe <_isatty_r+0x1a>
 80049fc:	6023      	str	r3, [r4, #0]
 80049fe:	bd38      	pop	{r3, r4, r5, pc}
 8004a00:	20000a24 	.word	0x20000a24

08004a04 <_sbrk_r>:
 8004a04:	b538      	push	{r3, r4, r5, lr}
 8004a06:	4d06      	ldr	r5, [pc, #24]	@ (8004a20 <_sbrk_r+0x1c>)
 8004a08:	2300      	movs	r3, #0
 8004a0a:	4604      	mov	r4, r0
 8004a0c:	4608      	mov	r0, r1
 8004a0e:	602b      	str	r3, [r5, #0]
 8004a10:	f7fc fc1a 	bl	8001248 <_sbrk>
 8004a14:	1c43      	adds	r3, r0, #1
 8004a16:	d102      	bne.n	8004a1e <_sbrk_r+0x1a>
 8004a18:	682b      	ldr	r3, [r5, #0]
 8004a1a:	b103      	cbz	r3, 8004a1e <_sbrk_r+0x1a>
 8004a1c:	6023      	str	r3, [r4, #0]
 8004a1e:	bd38      	pop	{r3, r4, r5, pc}
 8004a20:	20000a24 	.word	0x20000a24

08004a24 <_init>:
 8004a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a26:	bf00      	nop
 8004a28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a2a:	bc08      	pop	{r3}
 8004a2c:	469e      	mov	lr, r3
 8004a2e:	4770      	bx	lr

08004a30 <_fini>:
 8004a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a32:	bf00      	nop
 8004a34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a36:	bc08      	pop	{r3}
 8004a38:	469e      	mov	lr, r3
 8004a3a:	4770      	bx	lr
